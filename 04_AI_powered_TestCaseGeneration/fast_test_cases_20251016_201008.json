{
  "metadata": {
    "generated": "2025-10-16T20:10:08.432768",
    "model": "qwen2.5-coder:7b-instruct",
    "total_test_cases": 432
  },
  "test_cases": [
    {
      "test_id": "TC_FR3_001",
      "requirement_id": "FR3",
      "test_type": "positive",
      "test_title": "User successfully registers with valid credentials",
      "preconditions": "Mobile application is installed on a device",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the registration page",
        "Enter a valid user-name (e.g., JohnDoe123)",
        "Enter a valid password (e.g., P@ssw0rd!)",
        "Enter a valid e-mail address (e.g., john.doe@example.com)",
        "Click on the 'Register' button"
      ],
      "expected_result": "User is successfully registered and redirected to the login page",
      "test_data": {
        "user_name": "JohnDoe123",
        "password": "P@ssw0rd!",
        "email": "john.doe@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR3_002",
      "requirement_id": "FR3",
      "test_type": "negative",
      "test_title": "User registration fails with invalid user-name",
      "preconditions": "Mobile application is installed on a device",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the registration page",
        "Enter an invalid user-name (e.g., @JohnDoe)",
        "Enter a valid password (e.g., P@ssw0rd!)",
        "Enter a valid e-mail address (e.g., john.doe@example.com)",
        "Click on the 'Register' button"
      ],
      "expected_result": "Error message displayed indicating invalid user-name",
      "test_data": {
        "user_name": "@JohnDoe",
        "password": "P@ssw0rd!",
        "email": "john.doe@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR3_003",
      "requirement_id": "FR3",
      "test_type": "edge",
      "test_title": "User registration with the shortest allowed user-name",
      "preconditions": "Mobile application is installed on a device",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the registration page",
        "Enter the shortest allowed user-name (e.g., J1)",
        "Enter a valid password (e.g., P@ssw0rd!)",
        "Enter a valid e-mail address (e.g., john.doe@example.com)",
        "Click on the 'Register' button"
      ],
      "expected_result": "User is successfully registered",
      "test_data": {
        "user_name": "J1",
        "password": "P@ssw0rd!",
        "email": "john.doe@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR3_004",
      "requirement_id": "FR3",
      "test_type": "integration",
      "test_title": "User registration integrates with the backend system",
      "preconditions": "Mobile application is installed on a device and backend server is up",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the registration page",
        "Enter a valid user-name (e.g., JohnDoe123)",
        "Enter a valid password (e.g., P@ssw0rd!)",
        "Enter a valid e-mail address (e.g., john.doe@example.com)",
        "Click on the 'Register' button"
      ],
      "expected_result": "User is successfully registered in the backend system and receives confirmation",
      "test_data": {
        "user_name": "JohnDoe123",
        "password": "P@ssw0rd!",
        "email": "john.doe@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR3_005",
      "requirement_id": "FR3",
      "test_type": "performance",
      "test_title": "User registration completes within 5 seconds",
      "preconditions": "Mobile application is installed on a device with internet connection",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the registration page",
        "Enter a valid user-name (e.g., JohnDoe123)",
        "Enter a valid password (e.g., P@ssw0rd!)",
        "Enter a valid e-mail address (e.g., john.doe@example.com)",
        "Click on the 'Register' button"
      ],
      "expected_result": "User registration completes within 5 seconds",
      "test_data": {
        "user_name": "JohnDoe123",
        "password": "P@ssw0rd!",
        "email": "john.doe@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR3_006",
      "requirement_id": "FR3",
      "test_type": "security",
      "test_title": "User registration does not store plain text passwords",
      "preconditions": "Mobile application is installed on a device and backend server is up",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the registration page",
        "Enter a valid user-name (e.g., JohnDoe123)",
        "Enter a valid password (e.g., P@ssw0rd!)",
        "Enter a valid e-mail address (e.g., john.doe@example.com)",
        "Click on the 'Register' button"
      ],
      "expected_result": "Backend server stores hashed version of the password",
      "test_data": {
        "user_name": "JohnDoe123",
        "password": "P@ssw0rd!",
        "email": "john.doe@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR1_007",
      "requirement_id": "FR1",
      "test_type": "positive",
      "test_title": "User downloads mobile application from Google Play Store",
      "preconditions": "Google Play Store is accessible on the user's device.",
      "test_steps": [
        "Open the Google Play Store app on a mobile device.",
        "Search for 'Location-based Services' in the search bar.",
        "Select the first result that matches the application name.",
        "Tap on the 'Install' button.",
        "Confirm the installation by tapping 'Accept' or 'Install'.",
        "Verify that the application is installed and opens successfully."
      ],
      "expected_result": "The mobile application should be downloaded and installed successfully without any errors.",
      "test_data": "Application name: Location-based Services, Platform: Android",
      "priority": "High"
    },
    {
      "test_id": "TC_FR1_008",
      "requirement_id": "FR1",
      "test_type": "negative",
      "test_title": "User attempts to download a non-existent application",
      "preconditions": "Google Play Store is accessible on the user's device.",
      "test_steps": [
        "Open the Google Play Store app on a mobile device.",
        "Search for 'NonExistentApp123' in the search bar.",
        "Observe the search results."
      ],
      "expected_result": "The search should return no results or an error message indicating that the application is not found.",
      "test_data": "Application name: NonExistentApp123, Platform: Android",
      "priority": "High"
    },
    {
      "test_id": "TC_FR1_009",
      "requirement_id": "FR1",
      "test_type": "edge",
      "test_title": "User downloads mobile application on a low storage device",
      "preconditions": "Google Play Store is accessible on the user's device with limited storage.",
      "test_steps": [
        "Open the Google Play Store app on a mobile device with limited storage.",
        "Search for 'Location-based Services' in the search bar.",
        "Select the first result that matches the application name.",
        "Tap on the 'Install' button.",
        "Observe the installation process."
      ],
      "expected_result": "The application should be downloaded and installed successfully, even with limited storage. The user may receive a warning about low storage space.",
      "test_data": "Application name: Location-based Services, Platform: Android, Storage: Low",
      "priority": "High"
    },
    {
      "test_id": "TC_FR1_010",
      "requirement_id": "FR1",
      "test_type": "integration",
      "test_title": "User downloads mobile application and checks for integration with other services",
      "preconditions": "Google Play Store is accessible on the user's device.",
      "test_steps": [
        "Open the Google Play Store app on a mobile device.",
        "Search for 'Location-based Services' in the search bar.",
        "Select the first result that matches the application name.",
        "Tap on the 'Install' button and complete the installation process.",
        "Launch the application and check if it integrates with other services like GPS, camera, or contacts."
      ],
      "expected_result": "The mobile application should integrate successfully with other relevant services on the user's device.",
      "test_data": "Application name: Location-based Services, Platform: Android",
      "priority": "High"
    },
    {
      "test_id": "TC_FR1_011",
      "requirement_id": "FR1",
      "test_type": "performance",
      "test_title": "User downloads and opens mobile application multiple times to check performance",
      "preconditions": "Google Play Store is accessible on the user's device.",
      "test_steps": [
        "Open the Google Play Store app on a mobile device.",
        "Search for 'Location-based Services' in the search bar.",
        "Select the first result that matches the application name.",
        "Tap on the 'Install' button and complete the installation process.",
        "Launch the application multiple times (e.g., 10 times) and observe the performance."
      ],
      "expected_result": "The mobile application should open quickly and perform well without any crashes or delays.",
      "test_data": "Application name: Location-based Services, Platform: Android",
      "priority": "High"
    },
    {
      "test_id": "TC_FR1_012",
      "requirement_id": "FR1",
      "test_type": "security",
      "test_title": "User downloads mobile application from a trusted source to check for security",
      "preconditions": "Google Play Store is accessible on the user's device.",
      "test_steps": [
        "Open the Google Play Store app on a mobile device.",
        "Search for 'Location-based Services' in the search bar.",
        "Select the first result that matches the application name.",
        "Tap on the 'Install' button and complete the installation process.",
        "Launch the application and check if it has any security features like encryption, secure login, or regular updates."
      ],
      "expected_result": "The mobile application should be downloaded from a trusted source with basic security features in place to protect user data.",
      "test_data": "Application name: Location-based Services, Platform: Android",
      "priority": "High"
    },
    {
      "test_id": "TC_FR2_013",
      "requirement_id": "FR2",
      "test_type": "positive",
      "test_title": "User downloads new release successfully",
      "preconditions": "A new version of the app is available for download.",
      "test_steps": [
        "Open the app on a mobile device.",
        "Navigate to the 'Settings' menu.",
        "Select 'Check for Updates'.",
        "Confirm the update and start downloading."
      ],
      "expected_result": "The app should begin downloading the new version automatically.",
      "test_data": "New version available, internet connection active",
      "priority": "High"
    },
    {
      "test_id": "TC_FR2_014",
      "requirement_id": "FR2",
      "test_type": "negative",
      "test_title": "User fails to download new release due to no internet connection",
      "preconditions": "A new version of the app is available for download.",
      "test_steps": [
        "Open the app on a mobile device without an active internet connection.",
        "Navigate to the 'Settings' menu.",
        "Select 'Check for Updates'."
      ],
      "expected_result": "The app should display an error message indicating no internet connection and not attempt to download the update.",
      "test_data": "New version available, no internet connection",
      "priority": "High"
    },
    {
      "test_id": "TC_FR2_015",
      "requirement_id": "FR2",
      "test_type": "edge",
      "test_title": "User downloads new release on a low storage device",
      "preconditions": "A new version of the app is available for download.",
      "test_steps": [
        "Open the app on a mobile device with minimal storage space.",
        "Navigate to the 'Settings' menu.",
        "Select 'Check for Updates'."
      ],
      "expected_result": "The app should display an error message indicating insufficient storage and not attempt to download the update.",
      "test_data": "New version available, low storage",
      "priority": "High"
    },
    {
      "test_id": "TC_FR2_016",
      "requirement_id": "FR2",
      "test_type": "integration",
      "test_title": "User downloads new release after updating other settings",
      "preconditions": "A new version of the app is available for download and other settings are updated.",
      "test_steps": [
        "Open the app on a mobile device.",
        "Navigate to the 'Settings' menu and update various settings.",
        "Return to the main screen and navigate to 'Check for Updates'."
      ],
      "expected_result": "The app should detect the new version and prompt the user to download it, regardless of previous settings changes.",
      "test_data": "New version available, updated settings",
      "priority": "High"
    },
    {
      "test_id": "TC_FR2_017",
      "requirement_id": "FR2",
      "test_type": "performance",
      "test_title": "User downloads new release under heavy network load",
      "preconditions": "A new version of the app is available for download and the device is on a heavily loaded network.",
      "test_steps": [
        "Open the app on a mobile device connected to a heavily loaded network.",
        "Navigate to the 'Settings' menu.",
        "Select 'Check for Updates'."
      ],
      "expected_result": "The app should successfully download the new version despite the heavy network load, without any interruptions or errors.",
      "test_data": "New version available, high network load",
      "priority": "High"
    },
    {
      "test_id": "TC_FR2_018",
      "requirement_id": "FR2",
      "test_type": "security",
      "test_title": "User downloads new release from a secure source",
      "preconditions": "A new version of the app is available for download.",
      "test_steps": [
        "Open the app on a mobile device.",
        "Navigate to the 'Settings' menu.",
        "Select 'Check for Updates'."
      ],
      "expected_result": "The app should verify the source of the update and only allow downloads from trusted sources, displaying a warning if the source is not secure.",
      "test_data": "New version available, secure download link",
      "priority": "High"
    },
    {
      "test_id": "TC_FR4_019",
      "requirement_id": "FR4",
      "test_type": "positive",
      "test_title": "User successfully logs in with valid credentials",
      "preconditions": "A user has registered with a valid email and password.",
      "test_steps": [
        "Open the mobile application.",
        "Enter the registered email address.",
        "Enter the correct password.",
        "Tap on the 'Log In' button."
      ],
      "expected_result": "The user should be logged in successfully and redirected to the home screen.",
      "test_data": {
        "email": "user@example.com",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR4_020",
      "requirement_id": "FR4",
      "test_type": "negative",
      "test_title": "User fails to log in with incorrect password",
      "preconditions": "A user has registered with a valid email and password.",
      "test_steps": [
        "Open the mobile application.",
        "Enter the registered email address.",
        "Enter an incorrect password.",
        "Tap on the 'Log In' button."
      ],
      "expected_result": "The login attempt should fail, and an error message should be displayed indicating that the password is incorrect.",
      "test_data": {
        "email": "user@example.com",
        "password": "IncorrectPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR4_021",
      "requirement_id": "FR4",
      "test_type": "edge",
      "test_title": "User logs in with minimum required credentials",
      "preconditions": "A user has registered with a valid email and password.",
      "test_steps": [
        "Open the mobile application.",
        "Enter the registered email address.",
        "Enter the minimum required password (e.g., 8 characters).",
        "Tap on the 'Log In' button."
      ],
      "expected_result": "The user should be logged in successfully and redirected to the home screen.",
      "test_data": {
        "email": "user@example.com",
        "password": "MinPass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR4_022",
      "requirement_id": "FR4",
      "test_type": "integration",
      "test_title": "User logs in after network connectivity is restored",
      "preconditions": "A user has registered with a valid email and password, and the device is offline.",
      "test_steps": [
        "Open the mobile application while offline.",
        "Enter the registered email address.",
        "Enter the correct password.",
        "Tap on the 'Log In' button.",
        "Simulate network connectivity being restored."
      ],
      "expected_result": "The user should be logged in successfully once network connectivity is restored and redirected to the home screen.",
      "test_data": {
        "email": "user@example.com",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR4_023",
      "requirement_id": "FR4",
      "test_type": "performance",
      "test_title": "User logs in within expected time under heavy load",
      "preconditions": "A user has registered with a valid email and password, and the application is under heavy load.",
      "test_steps": [
        "Open the mobile application.",
        "Enter the registered email address.",
        "Enter the correct password.",
        "Tap on the 'Log In' button."
      ],
      "expected_result": "The user should be logged in within 5 seconds, even under heavy load conditions.",
      "test_data": {
        "email": "user@example.com",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR4_024",
      "requirement_id": "FR4",
      "test_type": "security",
      "test_title": "User logs in with two-factor authentication enabled",
      "preconditions": "A user has registered with a valid email, password, and two-factor authentication enabled.",
      "test_steps": [
        "Open the mobile application.",
        "Enter the registered email address.",
        "Enter the correct password.",
        "Tap on the 'Log In' button.",
        "Enter the two-factor authentication code received via SMS or email."
      ],
      "expected_result": "The user should be logged in successfully and redirected to the home screen after entering the two-factor authentication code.",
      "test_data": {
        "email": "user@example.com",
        "password": "ValidPassword123",
        "two_factor_code": "123456"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR5_025",
      "requirement_id": "FR5",
      "test_type": "positive",
      "test_title": "User successfully retrieves password via email",
      "preconditions": "A user has registered with a valid email address.",
      "test_steps": [
        "1. Log in to the user account using the registered credentials.",
        "2. Navigate to the 'Forgot Password' section.",
        "3. Enter the registered email address and click on 'Submit'.",
        "4. Check the inbox of the provided email address for the password retrieval email."
      ],
      "expected_result": "The user receives an email with instructions on how to reset their password.",
      "test_data": {
        "email": "user@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR5_026",
      "requirement_id": "FR5",
      "test_type": "negative",
      "test_title": "User attempts to retrieve password with invalid email",
      "preconditions": "A user has registered with a valid email address.",
      "test_steps": [
        "1. Log in to the user account using the registered credentials.",
        "2. Navigate to the 'Forgot Password' section.",
        "3. Enter an invalid email address and click on 'Submit'.",
        "4. Observe the error message displayed."
      ],
      "expected_result": "The system displays an error message indicating that the email address is not associated with any account.",
      "test_data": {
        "email": "invalid@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR5_027",
      "requirement_id": "FR5",
      "test_type": "edge",
      "test_title": "User attempts to retrieve password using a case-sensitive email",
      "preconditions": "A user has registered with an email address.",
      "test_steps": [
        "1. Log in to the user account using the registered credentials.",
        "2. Navigate to the 'Forgot Password' section.",
        "3. Enter the email address with mixed case (e.g., User@Example.com) and click on 'Submit'.",
        "4. Check the inbox of the provided email address for the password retrieval email."
      ],
      "expected_result": "The user receives an email with instructions on how to reset their password.",
      "test_data": {
        "email": "User@Example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR5_028",
      "requirement_id": "FR5",
      "test_type": "integration",
      "test_title": "Integration between password retrieval and user account management systems",
      "preconditions": "A user has registered with a valid email address, and the system is integrated with an external email service.",
      "test_steps": [
        "1. Log in to the user account using the registered credentials.",
        "2. Navigate to the 'Forgot Password' section.",
        "3. Enter the registered email address and click on 'Submit'.",
        "4. Verify that the password retrieval request is sent to the external email service."
      ],
      "expected_result": "The external email service receives a request to send a password reset email to the user's registered email address.",
      "test_data": {
        "email": "user@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR5_029",
      "requirement_id": "FR5",
      "test_type": "performance",
      "test_title": "Performance of password retrieval process under high load",
      "preconditions": "The system is under heavy load with multiple users attempting to retrieve passwords simultaneously.",
      "test_steps": [
        "1. Simulate a large number of users accessing the 'Forgot Password' section.",
        "2. Measure the time taken for each user to receive the password retrieval email.",
        "3. Monitor system performance metrics such as CPU usage, memory usage, and response times."
      ],
      "expected_result": "The system handles multiple password retrieval requests efficiently with minimal delays and without crashing.",
      "test_data": {
        "user_count": 100
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR5_030",
      "requirement_id": "FR5",
      "test_type": "security",
      "test_title": "Security of the password retrieval process",
      "preconditions": "A user has registered with a valid email address.",
      "test_steps": [
        "1. Log in to the user account using the registered credentials.",
        "2. Navigate to the 'Forgot Password' section.",
        "3. Enter the registered email address and click on 'Submit'.",
        "4. Verify that the password retrieval request is sent securely (e.g., HTTPS) and that no sensitive information is exposed."
      ],
      "expected_result": "The password retrieval process is secure, with all communications encrypted and no sensitive data exposed.",
      "test_data": {
        "email": "user@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_031",
      "requirement_id": "FR6",
      "test_type": "positive",
      "test_title": "User searches for a restaurant by name",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Italian' as the search term.",
        "Select the first result from the search list."
      ],
      "expected_result": "The application displays details of an Italian restaurant.",
      "test_data": "Search term: 'Italian'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_032",
      "requirement_id": "FR6",
      "test_type": "negative",
      "test_title": "User searches for a non-existent restaurant",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'XYZ123' as the search term.",
        "Check if no results are displayed."
      ],
      "expected_result": "The application displays a message indicating that no restaurants were found.",
      "test_data": "Search term: 'XYZ123'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_033",
      "requirement_id": "FR6",
      "test_type": "edge",
      "test_title": "User searches for a restaurant with special characters",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'New York City' as the search term.",
        "Select the first result from the search list."
      ],
      "expected_result": "The application displays details of a restaurant in New York City.",
      "test_data": "Search term: 'New York City'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_034",
      "requirement_id": "FR6",
      "test_type": "integration",
      "test_title": "User searches for a restaurant and checks reviews",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Chinese' as the search term.",
        "Select the first result from the search list.",
        "Check if reviews are displayed for the selected restaurant."
      ],
      "expected_result": "The application displays reviews for the selected Chinese restaurant.",
      "test_data": "Search term: 'Chinese'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_035",
      "requirement_id": "FR6",
      "test_type": "performance",
      "test_title": "User searches for a restaurant under high load",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Simulate high traffic on the mobile application.",
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Japanese' as the search term.",
        "Select the first result from the search list."
      ],
      "expected_result": "The application loads quickly and displays details of a Japanese restaurant without any delays.",
      "test_data": "Search term: 'Japanese'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_036",
      "requirement_id": "FR6",
      "test_type": "security",
      "test_title": "User searches for a restaurant with special characters in the search term",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter '<script>alert('XSS')</script>' as the search term.",
        "Check if no results are displayed and no script execution occurs."
      ],
      "expected_result": "The application prevents any script execution and displays a message indicating that no restaurants were found.",
      "test_data": "Search term: '<script>alert('XSS')</script>'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_037",
      "requirement_id": "FR6",
      "test_type": "positive",
      "test_title": "User successfully searches for a restaurant",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Italian' as the search term.",
        "Select the location filter and choose 'Nearby'.",
        "Click on the search button."
      ],
      "expected_result": "The search results should display restaurants that match the search criteria within the selected location.",
      "test_data": {
        "search_term": "Italian",
        "location_filter": "Nearby"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_038",
      "requirement_id": "FR6",
      "test_type": "negative",
      "test_title": "Search term does not return any results",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Space Food' as the search term.",
        "Select the location filter and choose 'Nearby'.",
        "Click on the search button."
      ],
      "expected_result": "The search results should indicate that no restaurants match the search criteria within the selected location.",
      "test_data": {
        "search_term": "Space Food",
        "location_filter": "Nearby"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_039",
      "requirement_id": "FR6",
      "test_type": "edge",
      "test_title": "Search with an empty term",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Leave the search term field empty.",
        "Select the location filter and choose 'Nearby'.",
        "Click on the search button."
      ],
      "expected_result": "The search results should display all restaurants within the selected location, regardless of cuisine type.",
      "test_data": {
        "search_term": "",
        "location_filter": "Nearby"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_040",
      "requirement_id": "FR6",
      "test_type": "integration",
      "test_title": "Search functionality integrates with location services",
      "preconditions": "A user is logged in to the mobile application and has granted location permissions.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Italian' as the search term.",
        "Ensure the location filter is set to 'Current Location'.",
        "Click on the search button."
      ],
      "expected_result": "The search results should display restaurants that match the search criteria within a reasonable distance from the user's current location.",
      "test_data": {
        "search_term": "Italian"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_041",
      "requirement_id": "FR6",
      "test_type": "performance",
      "test_title": "Search performance under heavy load",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Italian' as the search term.",
        "Select the location filter and choose 'Nearby'.",
        "Click on the search button multiple times within a short period."
      ],
      "expected_result": "The search functionality should remain responsive and perform well even under heavy load.",
      "test_data": {
        "search_term": "Italian",
        "location_filter": "Nearby"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR6_042",
      "requirement_id": "FR6",
      "test_type": "security",
      "test_title": "Search data is encrypted during transmission",
      "preconditions": "A user is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search page.",
        "Enter 'Italian' as the search term.",
        "Select the location filter and choose 'Nearby'.",
        "Click on the search button."
      ],
      "expected_result": "The search data, including the search term and location filter, should be encrypted during transmission to ensure secure communication.",
      "test_data": {
        "search_term": "Italian",
        "location_filter": "Nearby"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR7_043",
      "requirement_id": "FR7",
      "test_type": "positive",
      "test_title": "User searches for restaurants near their location",
      "preconditions": "The user is logged in and has granted location permissions.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search bar.",
        "Enter 'restaurants' as the search query.",
        "Select the current location option.",
        "Observe the map view displaying nearby restaurants."
      ],
      "expected_result": "The map should display pins for multiple restaurants within a reasonable distance from the user's current location.",
      "test_data": "Current location coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_FR7_044",
      "requirement_id": "FR7",
      "test_type": "negative",
      "test_title": "User searches for restaurants without granting location permissions",
      "preconditions": "The user is logged in but has not granted location permissions.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search bar.",
        "Enter 'restaurants' as the search query.",
        "Select the current location option.",
        "Observe the map view."
      ],
      "expected_result": "The map should display an error message indicating that location permissions are required for searching nearby restaurants.",
      "test_data": "No location permissions granted",
      "priority": "High"
    },
    {
      "test_id": "TC_FR7_045",
      "requirement_id": "FR7",
      "test_type": "edge",
      "test_title": "User searches for restaurants in a remote area with no restaurants available",
      "preconditions": "The user is logged in and has granted location permissions.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search bar.",
        "Enter 'restaurants' as the search query.",
        "Select a remote area far from any known restaurants.",
        "Observe the map view."
      ],
      "expected_result": "The map should display an empty or minimal number of restaurant pins, indicating that no restaurants are available in the selected area.",
      "test_data": "Remote area coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_FR7_046",
      "requirement_id": "FR7",
      "test_type": "integration",
      "test_title": "Search results integration with user's current location and nearby landmarks",
      "preconditions": "The user is logged in, has granted location permissions, and the application has access to nearby landmarks.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search bar.",
        "Enter 'restaurants' as the search query.",
        "Select the current location option.",
        "Observe the map view displaying nearby restaurants and landmarks."
      ],
      "expected_result": "The map should display pins for multiple restaurants within a reasonable distance from the user's current location, along with nearby landmarks for reference.",
      "test_data": "Current location coordinates and nearby landmarks",
      "priority": "High"
    },
    {
      "test_id": "TC_FR7_047",
      "requirement_id": "FR7",
      "test_type": "performance",
      "test_title": "Search results load time under heavy network conditions",
      "preconditions": "The user is logged in, has granted location permissions, and the device is connected to a slow internet connection.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search bar.",
        "Enter 'restaurants' as the search query.",
        "Select the current location option.",
        "Observe the time taken for the map view to load."
      ],
      "expected_result": "The map should load within a reasonable time frame, even under slow network conditions, with no significant lag or errors.",
      "test_data": "Slow internet connection",
      "priority": "High"
    },
    {
      "test_id": "TC_FR7_048",
      "requirement_id": "FR7",
      "test_type": "security",
      "test_title": "User's location data is encrypted and stored securely",
      "preconditions": "The user is logged in and has granted location permissions.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search bar.",
        "Enter 'restaurants' as the search query.",
        "Select the current location option.",
        "Observe the map view."
      ],
      "expected_result": "The user's location data should be encrypted and securely stored on the device, with no unauthorized access or data breaches.",
      "test_data": "User's location coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_049",
      "requirement_id": "FR8",
      "test_type": "positive",
      "test_title": "Search results displayed correctly in list view",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the search bar and enter a valid restaurant name.",
        "Press the search button.",
        "Verify that the search results are displayed in a list format."
      ],
      "expected_result": "The search results should be presented as a list, with each item showing the restaurant name, telephone number, type of food, and distance.",
      "test_data": "Valid restaurant name",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_050",
      "requirement_id": "FR8",
      "test_type": "negative",
      "test_title": "Search for non-existent restaurant returns no results",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the search bar and enter a non-existent restaurant name.",
        "Press the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The search should return an empty list or a message indicating that no results were found.",
      "test_data": "Non-existent restaurant name",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_051",
      "requirement_id": "FR8",
      "test_type": "edge",
      "test_title": "Search for multiple restaurants with similar names",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the search bar and enter a partial name of a restaurant.",
        "Press the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The search should return all restaurants that match the partial name, sorted by relevance.",
      "test_data": "Partial restaurant name",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_052",
      "requirement_id": "FR8",
      "test_type": "integration",
      "test_title": "Search results integrate with location data",
      "preconditions": "User is logged into the mobile application and has enabled location services.",
      "test_steps": [
        "Open the search bar and enter a restaurant name.",
        "Press the search button.",
        "Verify that the distance to each restaurant is displayed based on the user's current location."
      ],
      "expected_result": "The search results should include the distance from the user's current location to each restaurant.",
      "test_data": "User's current location",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_053",
      "requirement_id": "FR8",
      "test_type": "performance",
      "test_title": "Search performance under heavy load",
      "preconditions": "The mobile application is running on a device with average specifications.",
      "test_steps": [
        "Simulate a high number of users simultaneously searching for restaurants.",
        "Observe the response time and stability of the search functionality.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The search should respond within an acceptable time frame (e.g., less than 2 seconds) even under heavy load.",
      "test_data": "High number of simultaneous users",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_054",
      "requirement_id": "FR8",
      "test_type": "security",
      "test_title": "Search results do not include sensitive information",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the search bar and enter a valid restaurant name.",
        "Press the search button.",
        "Verify that no personal or sensitive information (e.g., credit card details) is included in the search results."
      ],
      "expected_result": "The search results should only include public information about restaurants, such as names, types of food, and distances.",
      "test_data": "Valid restaurant name",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_055",
      "requirement_id": "FR8",
      "test_type": "positive",
      "test_title": "Search for a restaurant by name",
      "preconditions": "User is logged in and on the main screen of the mobile application.",
      "test_steps": [
        "1. Tap on the search bar at the top of the screen.",
        "2. Type 'Italian' into the search bar.",
        "3. Press the search icon or press Enter."
      ],
      "expected_result": "A list of Italian restaurants is displayed, sorted by distance from the user's location.",
      "test_data": "Search term: 'Italian'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_056",
      "requirement_id": "FR8",
      "test_type": "negative",
      "test_title": "Attempt to search with an empty query",
      "preconditions": "User is logged in and on the main screen of the mobile application.",
      "test_steps": [
        "1. Tap on the search bar at the top of the screen.",
        "2. Leave the search bar empty.",
        "3. Press the search icon or press Enter."
      ],
      "expected_result": "An error message is displayed indicating that a search term is required.",
      "test_data": "Search term: ''",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_057",
      "requirement_id": "FR8",
      "test_type": "edge",
      "test_title": "Search for a restaurant with special characters",
      "preconditions": "User is logged in and on the main screen of the mobile application.",
      "test_steps": [
        "1. Tap on the search bar at the top of the screen.",
        "2. Type '@' into the search bar.",
        "3. Press the search icon or press Enter."
      ],
      "expected_result": "No results are displayed, and an error message is shown indicating that no restaurants match the search term.",
      "test_data": "Search term: '@'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_058",
      "requirement_id": "FR8",
      "test_type": "integration",
      "test_title": "Verify search functionality with location services",
      "preconditions": "User is logged in and on the main screen of the mobile application, with location services enabled.",
      "test_steps": [
        "1. Tap on the search bar at the top of the screen.",
        "2. Type 'Chinese' into the search bar.",
        "3. Press the search icon or press Enter."
      ],
      "expected_result": "A list of Chinese restaurants is displayed, sorted by distance from the user's current location.",
      "test_data": "Search term: 'Chinese'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_059",
      "requirement_id": "FR8",
      "test_type": "performance",
      "test_title": "Search performance with a large number of results",
      "preconditions": "User is logged in and on the main screen of the mobile application.",
      "test_steps": [
        "1. Tap on the search bar at the top of the screen.",
        "2. Type 'Pizza' into the search bar.",
        "3. Press the search icon or press Enter."
      ],
      "expected_result": "The search results are displayed within 5 seconds, and the list is scrollable without lag.",
      "test_data": "Search term: 'Pizza'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR8_060",
      "requirement_id": "FR8",
      "test_type": "security",
      "test_title": "Verify that search queries do not contain personal information",
      "preconditions": "User is logged in and on the main screen of the mobile application.",
      "test_steps": [
        "1. Tap on the search bar at the top of the screen.",
        "2. Type 'John Doe' into the search bar.",
        "3. Press the search icon or press Enter."
      ],
      "expected_result": "No results are displayed, and an error message is shown indicating that no restaurants match the search term.",
      "test_data": "Search term: 'John Doe'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR9_061",
      "requirement_id": "FR9",
      "test_type": "positive",
      "test_title": "Select a restaurant pin on the map",
      "preconditions": "User is logged in to the mobile application and has access to the map feature.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Map' section.",
        "Tap on a restaurant pin displayed on the map.",
        "Verify that the GPS navigation program opens with the selected restaurant's location."
      ],
      "expected_result": "The user should be able to select a restaurant pin and receive directions via the device's GPS navigation program.",
      "test_data": "Restaurant pin coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_FR9_062",
      "requirement_id": "FR9",
      "test_type": "negative",
      "test_title": "Attempt to navigate with an invalid location",
      "preconditions": "User is logged in to the mobile application and has access to the navigation feature.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Navigation' section.",
        "Enter an invalid or non-existent address as the destination.",
        "Attempt to start navigation."
      ],
      "expected_result": "The system should display an error message indicating that the location is invalid and prevent navigation from starting.",
      "test_data": "Invalid address",
      "priority": "High"
    },
    {
      "test_id": "TC_FR9_063",
      "requirement_id": "FR9",
      "test_type": "edge",
      "test_title": "Select a restaurant pin at the edge of the map view",
      "preconditions": "User is logged in to the mobile application and has access to the map feature.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Map' section.",
        "Scroll to the edge of the map view and tap on a restaurant pin.",
        "Verify that the GPS navigation program opens with the selected restaurant's location."
      ],
      "expected_result": "The user should be able to select a restaurant pin at the edge of the map view and receive directions via the device's GPS navigation program.",
      "test_data": "Edge of map coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_FR9_064",
      "requirement_id": "FR9",
      "test_type": "integration",
      "test_title": "Integrate with external GPS navigation app",
      "preconditions": "User is logged in to the mobile application and has an external GPS navigation app installed on their device.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Navigation' section.",
        "Select a restaurant pin.",
        "Verify that the external GPS navigation app opens with the selected restaurant's location."
      ],
      "expected_result": "The mobile application should be able to integrate with an external GPS navigation app and pass the selected restaurant's location for directions.",
      "test_data": "External GPS navigation app",
      "priority": "High"
    },
    {
      "test_id": "TC_FR9_065",
      "requirement_id": "FR9",
      "test_type": "performance",
      "test_title": "Select a restaurant pin under heavy load",
      "preconditions": "User is logged in to the mobile application and has access to the map feature.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Map' section.",
        "Simulate heavy load by opening multiple instances of the app or using a stress testing tool.",
        "Tap on a restaurant pin while under heavy load."
      ],
      "expected_result": "The system should handle the selection of a restaurant pin smoothly even under heavy load without crashing or experiencing performance issues.",
      "test_data": "Heavy load simulation",
      "priority": "High"
    },
    {
      "test_id": "TC_FR9_066",
      "requirement_id": "FR9",
      "test_type": "security",
      "test_title": "Attempt to navigate with sensitive information exposed",
      "preconditions": "User is logged in to the mobile application and has access to the navigation feature.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Navigation' section.",
        "Enter a destination that includes sensitive information (e.g., home address).",
        "Attempt to start navigation."
      ],
      "expected_result": "The system should prevent the entry of sensitive information in the navigation field and display an error message if such information is detected.",
      "test_data": "Sensitive information",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_067",
      "requirement_id": "FR10",
      "test_type": "positive",
      "test_title": "Switch to Map View from List View",
      "preconditions": "User is logged in and has performed a search with list view enabled.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search results page.",
        "Tap on the 'Map' button located at the bottom of the screen.",
        "Verify that the map view is displayed with pins indicating search locations."
      ],
      "expected_result": "The user should be able to switch from list view to map view successfully, and the map should display all search results as pins.",
      "test_data": "Search term: 'Nearby Restaurants'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_068",
      "requirement_id": "FR10",
      "test_type": "negative",
      "test_title": "Attempt to Switch View with No Search Results",
      "preconditions": "User is logged in and has performed a search that returns no results.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search results page.",
        "Tap on the 'Map' button located at the bottom of the screen.",
        "Verify if an error message or empty state is displayed."
      ],
      "expected_result": "The user should not be able to switch to map view when there are no search results, and an appropriate error message or empty state should be shown.",
      "test_data": "Search term: 'Non-existent location'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_069",
      "requirement_id": "FR10",
      "test_type": "edge",
      "test_title": "Switch View with Maximum Number of Results",
      "preconditions": "User is logged in and has performed a search that returns the maximum number of results allowed by the application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search results page.",
        "Tap on the 'Map' button located at the bottom of the screen.",
        "Verify that the map view displays all search results as pins without any issues."
      ],
      "expected_result": "The user should be able to switch from list view to map view successfully even when there are the maximum number of search results, and the map should display all locations accurately.",
      "test_data": "Search term: 'Popular Places'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_070",
      "requirement_id": "FR10",
      "test_type": "integration",
      "test_title": "Switch View Between Map and List in Different Search Scenarios",
      "preconditions": "User is logged in and has performed searches with both map and list views enabled.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search results page for a location-based search.",
        "Tap on the 'Map' button located at the bottom of the screen.",
        "Switch back to list view and perform another search.",
        "Tap on the 'List' button located at the bottom of the screen."
      ],
      "expected_result": "The user should be able to switch between map and list views independently for different search scenarios without any issues.",
      "test_data": [
        {
          "Search term": "Nearby Restaurants",
          "Expected View": "Map"
        },
        {
          "Search term": "Popular Events",
          "Expected View": "List"
        }
      ],
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_071",
      "requirement_id": "FR10",
      "test_type": "performance",
      "test_title": "Switch View Performance with Large Number of Results",
      "preconditions": "User is logged in and has performed a search that returns a large number of results.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search results page.",
        "Tap on the 'Map' button located at the bottom of the screen.",
        "Measure the time taken for the map view to load."
      ],
      "expected_result": "The user should be able to switch from list view to map view with a reasonable performance, and the map should load within an acceptable time frame.",
      "test_data": "Search term: 'All Points of Interest'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_072",
      "requirement_id": "FR10",
      "test_type": "security",
      "test_title": "Switch View Security during User Authentication",
      "preconditions": "User is logged in and has performed a search with list view enabled.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search results page.",
        "Tap on the 'Map' button located at the bottom of the screen while being logged in.",
        "Verify that the user remains authenticated and can switch back to list view without any security issues."
      ],
      "expected_result": "The user should be able to switch between map and list views securely during their session, and the application should maintain user authentication throughout the process.",
      "test_data": "User credentials",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_073",
      "requirement_id": "FR10",
      "test_type": "positive",
      "test_title": "Switch from Map View to List View",
      "preconditions": "User is logged in and on the search results page with map view enabled.",
      "test_steps": [
        "Tap on the 'View' button located at the top right corner of the screen.",
        "Select the 'List' option from the dropdown menu that appears.",
        "Observe if the search results are now displayed as a list."
      ],
      "expected_result": "The search results should be displayed in a list format, and the map view should be hidden.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_074",
      "requirement_id": "FR10",
      "test_type": "negative",
      "test_title": "Switch from List View to Map View with No Search Results",
      "preconditions": "User is logged in and on the search results page with list view enabled, but there are no search results.",
      "test_steps": [
        "Tap on the 'View' button located at the top right corner of the screen.",
        "Select the 'Map' option from the dropdown menu that appears.",
        "Observe if the map view is displayed."
      ],
      "expected_result": "The app should display an error message indicating no search results found, and the map view should not be shown.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_075",
      "requirement_id": "FR10",
      "test_type": "edge",
      "test_title": "Switch View with Multiple Search Results",
      "preconditions": "User is logged in and on the search results page with multiple search results displayed as a list.",
      "test_steps": [
        "Tap on the 'View' button located at the top right corner of the screen.",
        "Select the 'Map' option from the dropdown menu that appears.",
        "Observe if all search results are plotted on the map."
      ],
      "expected_result": "All search results should be accurately plotted on the map, and the list view should be hidden.",
      "test_data": "Multiple search results",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_076",
      "requirement_id": "FR10",
      "test_type": "integration",
      "test_title": "Switch View Between Map and List with Different Search Criteria",
      "preconditions": "User is logged in and on the search results page with map view enabled for a specific search criteria.",
      "test_steps": [
        "Change the search criteria to a different type of location (e.g., from restaurants to hotels).",
        "Tap on the 'View' button located at the top right corner of the screen.",
        "Select the 'List' option from the dropdown menu that appears.",
        "Observe if the new search results are displayed as a list."
      ],
      "expected_result": "The app should switch to displaying the new search results in a list format, and the map view should be hidden.",
      "test_data": "Different search criteria",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_077",
      "requirement_id": "FR10",
      "test_type": "performance",
      "test_title": "Switch View Between Map and List with Large Number of Search Results",
      "preconditions": "User is logged in and on the search results page with map view enabled for a large number of search results.",
      "test_steps": [
        "Tap on the 'View' button located at the top right corner of the screen.",
        "Select the 'List' option from the dropdown menu that appears.",
        "Observe if the list view loads and displays all search results without any lag or crash."
      ],
      "expected_result": "The app should switch to displaying all search results in a list format smoothly, with no noticeable lag or crash.",
      "test_data": "Large number of search results",
      "priority": "High"
    },
    {
      "test_id": "TC_FR10_078",
      "requirement_id": "FR10",
      "test_type": "security",
      "test_title": "Switch View Between Map and List while Logged Out",
      "preconditions": "User is logged out and on the login screen.",
      "test_steps": [
        "Tap on the 'Search' button to navigate to the search results page.",
        "Enter a search query and select a location type (e.g., restaurants).",
        "Tap on the 'View' button located at the top right corner of the screen.",
        "Select the 'List' option from the dropdown menu that appears."
      ],
      "expected_result": "The app should navigate to the search results page, display the list view, and allow the user to log in without any security issues.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_FR11_079",
      "requirement_id": "FR11",
      "test_type": "positive",
      "test_title": "User can select information link from result item",
      "preconditions": "The mobile application is installed and running, user has searched for a restaurant.",
      "test_steps": [
        "Open the mobile application.",
        "Search for a restaurant in the search bar.",
        "Select a result item from the search results.",
        "Tap on the information link within the selected result item."
      ],
      "expected_result": "The user is directed to an information page that includes a picture of the restaurant, details about the restaurant, and other relevant information.",
      "test_data": "Restaurant name: 'The Gourmet Bistro'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR11_080",
      "requirement_id": "FR11",
      "test_type": "negative",
      "test_title": "Information link does not navigate to valid page when tapped",
      "preconditions": "The mobile application is installed and running, user has searched for a restaurant.",
      "test_steps": [
        "Open the mobile application.",
        "Search for a restaurant in the search bar.",
        "Select a result item from the search results.",
        "Tap on the information link within the selected result item."
      ],
      "expected_result": "The application crashes or displays an error message indicating that the page could not be loaded.",
      "test_data": "Restaurant name: 'Invalid Restaurant'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR11_081",
      "requirement_id": "FR11",
      "test_type": "edge",
      "test_title": "Information link is present even when no restaurant details are available",
      "preconditions": "The mobile application is installed and running, user has searched for a restaurant.",
      "test_steps": [
        "Open the mobile application.",
        "Search for a restaurant in the search bar.",
        "Select a result item from the search results that has limited or no details available."
      ],
      "expected_result": "The information link is still present and functional, even though there are no additional details to display.",
      "test_data": "Restaurant name: 'No Details Available'",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR11_082",
      "requirement_id": "FR11",
      "test_type": "integration",
      "test_title": "Information link works correctly when integrated with the restaurant's website",
      "preconditions": "The mobile application is installed and running, user has searched for a restaurant.",
      "test_steps": [
        "Open the mobile application.",
        "Search for a restaurant in the search bar.",
        "Select a result item from the search results.",
        "Tap on the information link within the selected result item."
      ],
      "expected_result": "The user is directed to an information page that includes details fetched from the restaurant's official website, such as reviews and menu items.",
      "test_data": "Restaurant name: 'The Gourmet Bistro'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR11_083",
      "requirement_id": "FR11",
      "test_type": "performance",
      "test_title": "Information link loads quickly on a slow network connection",
      "preconditions": "The mobile application is installed and running, user has searched for a restaurant.",
      "test_steps": [
        "Open the mobile application on a device with a slow internet connection.",
        "Search for a restaurant in the search bar.",
        "Select a result item from the search results.",
        "Tap on the information link within the selected result item."
      ],
      "expected_result": "The information page loads within 5 seconds, even on a slow network connection.",
      "test_data": "Restaurant name: 'The Gourmet Bistro'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR11_084",
      "requirement_id": "FR11",
      "test_type": "security",
      "test_title": "Information link does not lead to malicious website",
      "preconditions": "The mobile application is installed and running, user has searched for a restaurant.",
      "test_steps": [
        "Open the mobile application.",
        "Search for a restaurant in the search bar.",
        "Select a result item from the search results.",
        "Tap on the information link within the selected result item."
      ],
      "expected_result": "The user is directed to a legitimate and secure information page, without any signs of malware or phishing attempts.",
      "test_data": "Restaurant name: 'Safe Restaurant'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR12_085",
      "requirement_id": "FR12",
      "test_type": "positive",
      "test_title": "Search for items within a valid price range",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the search page.",
        "Input a minimum price of $10 and a maximum price of $100.",
        "Click on the search button.",
        "Verify that the list displays items within the specified price range."
      ],
      "expected_result": "The list should display items priced between $10 and $100.",
      "test_data": {
        "min_price": 10,
        "max_price": 100
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR12_086",
      "requirement_id": "FR12",
      "test_type": "negative",
      "test_title": "Search with invalid price range (minimum greater than maximum)",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the search page.",
        "Input a minimum price of $100 and a maximum price of $50.",
        "Click on the search button.",
        "Verify that an error message is displayed."
      ],
      "expected_result": "An error message should be shown indicating that the minimum price cannot be greater than the maximum price.",
      "test_data": {
        "min_price": 100,
        "max_price": 50
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR12_087",
      "requirement_id": "FR12",
      "test_type": "edge",
      "test_title": "Search with zero as minimum and maximum price",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the search page.",
        "Input a minimum price of $0 and a maximum price of $0.",
        "Click on the search button.",
        "Verify that an error message is displayed."
      ],
      "expected_result": "An error message should be shown indicating that the price range cannot be zero.",
      "test_data": {
        "min_price": 0,
        "max_price": 0
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR12_088",
      "requirement_id": "FR12",
      "test_type": "integration",
      "test_title": "Search functionality with location-based services",
      "preconditions": "User is logged in to the mobile application and has enabled location services.",
      "test_steps": [
        "Open the search page.",
        "Input a minimum price of $50 and a maximum price of $150.",
        "Select a specific location from the location picker.",
        "Click on the search button.",
        "Verify that the list displays items within the specified price range in the selected location."
      ],
      "expected_result": "The list should display items priced between $50 and $150 in the selected location.",
      "test_data": {
        "min_price": 50,
        "max_price": 150,
        "location": "New York"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR12_089",
      "requirement_id": "FR12",
      "test_type": "performance",
      "test_title": "Search performance with a large price range and many items",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the search page.",
        "Input a minimum price of $1 and a maximum price of $1000.",
        "Click on the search button.",
        "Wait for the list to load and verify that it displays all items within the specified price range."
      ],
      "expected_result": "The list should display all items within the specified price range within 5 seconds.",
      "test_data": {
        "min_price": 1,
        "max_price": 1000
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR12_090",
      "requirement_id": "FR12",
      "test_type": "security",
      "test_title": "Search functionality with sensitive data (credit card information)",
      "preconditions": "User is logged in to the mobile application and has entered credit card information.",
      "test_steps": [
        "Open the search page.",
        "Input a minimum price of $100 and a maximum price of $500.",
        "Click on the search button.",
        "Verify that the list displays items within the specified price range without any security issues."
      ],
      "expected_result": "The list should display items within the specified price range without exposing sensitive data such as credit card information.",
      "test_data": {
        "min_price": 100,
        "max_price": 500
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR13_091",
      "requirement_id": "FR13",
      "test_type": "positive",
      "test_title": "Search by destination with default distance range",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search screen.",
        "Ensure that the minimum distance is set to 0 km and the maximum distance is set to 10 km by default.",
        "Input a destination name or coordinates.",
        "Click on the search button."
      ],
      "expected_result": "The search results should display locations within a 10 km radius of the user's current location.",
      "test_data": "Destination: 'New York City'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR13_092",
      "requirement_id": "FR13",
      "test_type": "negative",
      "test_title": "Search by destination with invalid distance range",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search screen.",
        "Set the minimum distance to 20 km and the maximum distance to 10 km.",
        "Input a destination name or coordinates.",
        "Click on the search button."
      ],
      "expected_result": "The application should display an error message indicating that the minimum distance cannot be greater than the maximum distance.",
      "test_data": "Minimum Distance: 20 km, Maximum Distance: 10 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR13_093",
      "requirement_id": "FR13",
      "test_type": "edge",
      "test_title": "Search by destination with zero minimum distance and maximum distance",
      "preconditions": "User is logged in to the mobile application.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search screen.",
        "Set the minimum distance to 0 km and the maximum distance to 0 km.",
        "Input a destination name or coordinates.",
        "Click on the search button."
      ],
      "expected_result": "The search results should display locations within a 0 km radius of the user's current location, which may include the user's own location if it matches the input destination.",
      "test_data": "Minimum Distance: 0 km, Maximum Distance: 0 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR13_094",
      "requirement_id": "FR13",
      "test_type": "integration",
      "test_title": "Search by destination with integration between GPS and search functionality",
      "preconditions": "User is logged in to the mobile application and has enabled location services.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search screen.",
        "Ensure that the device's GPS is turned on.",
        "Input a destination name or coordinates.",
        "Click on the search button."
      ],
      "expected_result": "The search results should display locations based on the user's current location as determined by the device's GPS, and the distance range specified by the user.",
      "test_data": "Destination: 'Paris'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR13_095",
      "requirement_id": "FR13",
      "test_type": "performance",
      "test_title": "Search by destination with large number of results",
      "preconditions": "User is logged in to the mobile application and has a device capable of handling high-performance tasks.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search screen.",
        "Set the minimum distance to 0 km and the maximum distance to 100 km.",
        "Input a destination name or coordinates.",
        "Click on the search button."
      ],
      "expected_result": "The search results should load within 5 seconds, and the application should remain responsive during the search process.",
      "test_data": "Destination: 'Tokyo'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR13_096",
      "requirement_id": "FR13",
      "test_type": "security",
      "test_title": "Search by destination with user privacy protection",
      "preconditions": "User is logged in to the mobile application and has enabled location services.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the search screen.",
        "Ensure that the device's GPS is turned on.",
        "Input a destination name or coordinates.",
        "Click on the search button."
      ],
      "expected_result": "The user's location data should not be shared with third parties without their consent, and the application should comply with relevant privacy laws and regulations.",
      "test_data": "Destination: 'Sydney'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR14_097",
      "requirement_id": "FR14",
      "test_type": "positive",
      "test_title": "Valid integer input for price search",
      "preconditions": "User is on the search page.",
      "test_steps": [
        "Enter '100' in the price search field.",
        "Click the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Search results displayed for items priced at $100.",
      "test_data": "price=100",
      "priority": "High"
    },
    {
      "test_id": "TC_FR14_098",
      "requirement_id": "FR14",
      "test_type": "negative",
      "test_title": "Invalid non-integer input for price search",
      "preconditions": "User is on the search page.",
      "test_steps": [
        "Enter 'abc' in the price search field.",
        "Click the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Error message displayed: 'Please enter a valid integer.'",
      "test_data": "price=abc",
      "priority": "High"
    },
    {
      "test_id": "TC_FR14_099",
      "requirement_id": "FR14",
      "test_type": "edge",
      "test_title": "Edge case - minimum price limit",
      "preconditions": "User is on the search page.",
      "test_steps": [
        "Enter '0' in the price search field.",
        "Click the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Search results displayed for items priced at $0 or more.",
      "test_data": "price=0",
      "priority": "High"
    },
    {
      "test_id": "TC_FR14_100",
      "requirement_id": "FR14",
      "test_type": "integration",
      "test_title": "Integration with database to retrieve valid price data",
      "preconditions": "Database is populated with sample data.",
      "test_steps": [
        "Enter '50' in the price search field.",
        "Click the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Search results displayed for items priced at $50 retrieved from the database.",
      "test_data": "price=50",
      "priority": "High"
    },
    {
      "test_id": "TC_FR14_101",
      "requirement_id": "FR14",
      "test_type": "performance",
      "test_title": "Performance test with large number of price search requests",
      "preconditions": "System is under load with multiple users searching for prices.",
      "test_steps": [
        "Simulate 1000 users entering '25' in the price search field and clicking the search button simultaneously.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "All searches complete within 2 seconds, system remains responsive.",
      "test_data": "price=25",
      "priority": "High"
    },
    {
      "test_id": "TC_FR14_102",
      "requirement_id": "FR14",
      "test_type": "security",
      "test_title": "Security test for SQL injection in price search input",
      "preconditions": "User is on the search page.",
      "test_steps": [
        "Enter '100; DROP TABLE prices;' in the price search field.",
        "Click the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Error message displayed: 'Invalid input detected.' Database remains intact.",
      "test_data": "price=100; DROP TABLE prices;",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_103",
      "requirement_id": "FR15",
      "test_type": "positive",
      "test_title": "User selects a restaurant type and sees results on the map",
      "preconditions": "The mobile app is installed and logged in.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' section.",
        "Select a restaurant type from the list (e.g., Italian).",
        "Observe that the results are displayed on the map."
      ],
      "expected_result": "The selected restaurant type is correctly filtered and displayed on the map.",
      "test_data": "Italian, Map view",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_104",
      "requirement_id": "FR15",
      "test_type": "negative",
      "test_title": "User selects an invalid or non-existent restaurant type",
      "preconditions": "The mobile app is installed and logged in.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' section.",
        "Attempt to select a non-existent restaurant type (e.g., XYZ).",
        "Observe the error message."
      ],
      "expected_result": "An error message is displayed indicating that the selected restaurant type is invalid or does not exist.",
      "test_data": "XYZ, Error message",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_105",
      "requirement_id": "FR15",
      "test_type": "edge",
      "test_title": "User selects the first and last items in the restaurant type list",
      "preconditions": "The mobile app is installed and logged in.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' section.",
        "Select the first item in the restaurant type list.",
        "Select the last item in the restaurant type list."
      ],
      "expected_result": "Both selected restaurant types are correctly filtered and displayed on the map.",
      "test_data": "First and Last items, Map view",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_106",
      "requirement_id": "FR15",
      "test_type": "integration",
      "test_title": "Integration between search functionality and map display",
      "preconditions": "The mobile app is installed and logged in.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' section.",
        "Select a restaurant type from the list.",
        "Verify that the selected restaurant type filters correctly on the map."
      ],
      "expected_result": "The search functionality integrates seamlessly with the map display, showing only relevant restaurants.",
      "test_data": "Restaurant type, Map view",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_107",
      "requirement_id": "FR15",
      "test_type": "performance",
      "test_title": "Performance of search and map display for a large number of restaurant types",
      "preconditions": "The mobile app is installed and logged in.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' section.",
        "Select multiple restaurant types from the list (e.g., Italian, Chinese, Indian).",
        "Observe the performance of the search and map display."
      ],
      "expected_result": "The app performs well with a large number of selected restaurant types, displaying results quickly and without lag.",
      "test_data": "Multiple restaurant types, Map view",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_108",
      "requirement_id": "FR15",
      "test_type": "security",
      "test_title": "User input validation for restaurant type selection",
      "preconditions": "The mobile app is installed and logged in.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' section.",
        "Attempt to select a special character or symbol as a restaurant type (e.g., @, #).",
        "Observe the error message."
      ],
      "expected_result": "An error message is displayed indicating that the input is invalid and preventing non-standard characters from being selected.",
      "test_data": "@, Error message",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_109",
      "requirement_id": "FR15",
      "test_type": "positive",
      "test_title": "User selects a restaurant type from the list and sees results on the map",
      "preconditions": "The mobile application is open and the user is logged in.",
      "test_steps": [
        "Open the 'Search' tab.",
        "Tap on the 'Restaurant Type' filter.",
        "Select 'Italian' from the list of restaurant types.",
        "Observe the map view displaying restaurants of type Italian."
      ],
      "expected_result": "The map should display all Italian restaurants within a reasonable distance from the user's current location.",
      "test_data": "User logged in, current location set to a city with Italian restaurants",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_110",
      "requirement_id": "FR15",
      "test_type": "negative",
      "test_title": "User selects an invalid restaurant type and sees no results on the map",
      "preconditions": "The mobile application is open and the user is logged in.",
      "test_steps": [
        "Open the 'Search' tab.",
        "Tap on the 'Restaurant Type' filter.",
        "Select 'InvalidType123' from the list of restaurant types.",
        "Observe the map view."
      ],
      "expected_result": "The map should display no restaurants and show an error message indicating that no results were found for the selected type.",
      "test_data": "User logged in, current location set to a city with various restaurants",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_111",
      "requirement_id": "FR15",
      "test_type": "edge",
      "test_title": "User selects the first restaurant type in the list and sees results on the map",
      "preconditions": "The mobile application is open and the user is logged in.",
      "test_steps": [
        "Open the 'Search' tab.",
        "Tap on the 'Restaurant Type' filter.",
        "Select the first item from the list of restaurant types (e.g., 'American').",
        "Observe the map view displaying restaurants of type American."
      ],
      "expected_result": "The map should display all American restaurants within a reasonable distance from the user's current location.",
      "test_data": "User logged in, current location set to a city with American restaurants",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_112",
      "requirement_id": "FR15",
      "test_type": "integration",
      "test_title": "Integration between restaurant type selection and map display works as expected",
      "preconditions": "The mobile application is open and the user is logged in.",
      "test_steps": [
        "Open the 'Search' tab.",
        "Tap on the 'Restaurant Type' filter.",
        "Select 'Chinese' from the list of restaurant types.",
        "Observe the map view displaying restaurants of type Chinese."
      ],
      "expected_result": "The map should display all Chinese restaurants within a reasonable distance from the user's current location, and the search functionality should work seamlessly with the map display.",
      "test_data": "User logged in, current location set to a city with Chinese restaurants",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_113",
      "requirement_id": "FR15",
      "test_type": "performance",
      "test_title": "Application loads quickly when selecting a restaurant type and viewing results on the map",
      "preconditions": "The mobile application is open and the user is logged in.",
      "test_steps": [
        "Open the 'Search' tab.",
        "Tap on the 'Restaurant Type' filter.",
        "Select 'Japanese' from the list of restaurant types.",
        "Observe the time taken for the map to load and display results."
      ],
      "expected_result": "The map should load within 5 seconds and display all Japanese restaurants within a reasonable distance from the user's current location.",
      "test_data": "User logged in, current location set to a city with Japanese restaurants",
      "priority": "High"
    },
    {
      "test_id": "TC_FR15_114",
      "requirement_id": "FR15",
      "test_type": "security",
      "test_title": "User data is protected when selecting a restaurant type and viewing results on the map",
      "preconditions": "The mobile application is open and the user is logged in.",
      "test_steps": [
        "Open the 'Search' tab.",
        "Tap on the 'Restaurant Type' filter.",
        "Select 'Mexican' from the list of restaurant types.",
        "Observe if any personal data (e.g., location, search history) is exposed or shared."
      ],
      "expected_result": "The application should not expose or share any personal data when selecting a restaurant type and viewing results on the map.",
      "test_data": "User logged in with sensitive personal data",
      "priority": "High"
    },
    {
      "test_id": "TC_FR16_115",
      "requirement_id": "FR16",
      "test_type": "positive",
      "test_title": "Search for a known dish in the list",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the main menu and tap on 'Search'.",
        "Select 'Dish' from the search options.",
        "Type 'Pizza' in the search bar and press enter.",
        "Verify that the list displays results for Pizza."
      ],
      "expected_result": "The application should display a list of locations where Pizza is available.",
      "test_data": "Search term: 'Pizza'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR16_116",
      "requirement_id": "FR16",
      "test_type": "negative",
      "test_title": "Attempt to search with an empty query",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the main menu and tap on 'Search'.",
        "Select 'Dish' from the search options.",
        "Leave the search bar empty and press enter.",
        "Verify that no results are displayed."
      ],
      "expected_result": "The application should display an error message or a blank screen indicating no search results.",
      "test_data": "Search term: '' (empty string)",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR16_117",
      "requirement_id": "FR16",
      "test_type": "edge",
      "test_title": "Search for a dish with special characters",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the main menu and tap on 'Search'.",
        "Select 'Dish' from the search options.",
        "Type 'Spaghetti Carbonara' in the search bar and press enter.",
        "Verify that the list displays results for Spaghetti Carbonara."
      ],
      "expected_result": "The application should display a list of locations where Spaghetti Carbonara is available.",
      "test_data": "Search term: 'Spaghetti Carbonara'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR16_118",
      "requirement_id": "FR16",
      "test_type": "integration",
      "test_title": "Verify search functionality with location services",
      "preconditions": "User is logged into the mobile application and has location services enabled.",
      "test_steps": [
        "Open the main menu and tap on 'Search'.",
        "Select 'Dish' from the search options.",
        "Type 'Italian Food' in the search bar and press enter.",
        "Verify that the results are displayed within a 5km radius of the user's current location."
      ],
      "expected_result": "The application should display locations of Italian food establishments within a 5km radius of the user's current location.",
      "test_data": "Search term: 'Italian Food', Location services enabled",
      "priority": "High"
    },
    {
      "test_id": "TC_FR16_119",
      "requirement_id": "FR16",
      "test_type": "performance",
      "test_title": "Search for a dish with a large number of results",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the main menu and tap on 'Search'.",
        "Select 'Dish' from the search options.",
        "Type 'Chinese Food' in the search bar and press enter.",
        "Verify that the results are displayed within a reasonable time frame."
      ],
      "expected_result": "The application should display all available Chinese food locations within a few seconds.",
      "test_data": "Search term: 'Chinese Food'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR16_120",
      "requirement_id": "FR16",
      "test_type": "security",
      "test_title": "Verify that search queries are not logged or stored without user consent",
      "preconditions": "User is logged into the mobile application.",
      "test_steps": [
        "Open the main menu and tap on 'Search'.",
        "Select 'Dish' from the search options.",
        "Type 'Vegetarian Food' in the search bar and press enter.",
        "Verify that no logs or records of the search query are stored without user consent."
      ],
      "expected_result": "The application should not store or log any search queries without explicit user consent.",
      "test_data": "Search term: 'Vegetarian Food'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR17_121",
      "requirement_id": "FR17",
      "test_type": "positive",
      "test_title": "Positive test for Mobile application - Free-text search",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Mobile application - Free-text search",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order for a user to search through the free-text search.",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR17_122",
      "requirement_id": "FR17",
      "test_type": "negative",
      "test_title": "Negative test for Mobile application - Free-text search",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Mobile application - Free-text search",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order for a user to search through the free-text search.",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR17_123",
      "requirement_id": "FR17",
      "test_type": "edge",
      "test_title": "Edge test for Mobile application - Free-text search",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Mobile application - Free-text search",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order for a user to search through the free-text search.",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR17_124",
      "requirement_id": "FR17",
      "test_type": "integration",
      "test_title": "Integration test for Mobile application - Free-text search",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Mobile application - Free-text search",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order for a user to search through the free-text search.",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR17_125",
      "requirement_id": "FR17",
      "test_type": "performance",
      "test_title": "Performance test for Mobile application - Free-text search",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Mobile application - Free-text search",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order for a user to search through the free-text search.",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR17_126",
      "requirement_id": "FR17",
      "test_type": "security",
      "test_title": "Security test for Mobile application - Free-text search",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Mobile application - Free-text search",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order for a user to search through the free-text search.",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR18_127",
      "requirement_id": "FR18",
      "test_type": "positive",
      "test_title": "User receives no match found message but remains on search page",
      "preconditions": "User is logged in and on the search page with a valid location input.",
      "test_steps": [
        "Input an invalid or non-existent location into the search bar.",
        "Submit the search query.",
        "Verify that a 'No match found' message appears.",
        "Check that the user remains on the search page."
      ],
      "expected_result": "The user should see a 'No match found' message and remain on the search page to conduct another search.",
      "test_data": "Invalid location: '123456789'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR18_128",
      "requirement_id": "FR18",
      "test_type": "negative",
      "test_title": "User input is rejected if it does not meet location criteria",
      "preconditions": "User is logged in and on the search page.",
      "test_steps": [
        "Input a string that does not represent a valid location (e.g., 'randomtext').",
        "Submit the search query.",
        "Verify that an error message appears indicating invalid input."
      ],
      "expected_result": "The user should receive an error message and be kept on the search page to correct their input.",
      "test_data": "Invalid location: 'randomtext'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR18_129",
      "requirement_id": "FR18",
      "test_type": "edge",
      "test_title": "User searches for a location with very specific coordinates",
      "preconditions": "User is logged in and on the search page.",
      "test_steps": [
        "Input extremely precise coordinates (e.g., '40.7128\u00b0 N, 74.0060\u00b0 W').",
        "Submit the search query.",
        "Verify that a 'No match found' message appears."
      ],
      "expected_result": "The user should receive a 'No match found' message as such specific coordinates may not have any associated data.",
      "test_data": "Very precise location: '40.7128\u00b0 N, 74.0060\u00b0 W'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR18_130",
      "requirement_id": "FR18",
      "test_type": "integration",
      "test_title": "Search functionality integrates with location services API",
      "preconditions": "User is logged in and on the search page.",
      "test_steps": [
        "Input a valid location into the search bar.",
        "Submit the search query.",
        "Verify that the location services API returns data.",
        "Check that the user sees the relevant results."
      ],
      "expected_result": "The search functionality should successfully integrate with the location services API and display relevant results.",
      "test_data": "Valid location: 'New York'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR18_131",
      "requirement_id": "FR18",
      "test_type": "performance",
      "test_title": "Search performance under high load",
      "preconditions": "Multiple users are logged in and actively searching for locations.",
      "test_steps": [
        "Simulate a large number of concurrent search requests.",
        "Monitor the application's response time and resource usage.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should handle multiple search requests efficiently with minimal delays or crashes.",
      "test_data": "Concurrent users: 100",
      "priority": "High"
    },
    {
      "test_id": "TC_FR18_132",
      "requirement_id": "FR18",
      "test_type": "security",
      "test_title": "Search input is sanitized to prevent SQL injection",
      "preconditions": "User is logged in and on the search page.",
      "test_steps": [
        "Input a string that could be used for SQL injection (e.g., '1' OR '1'='1').",
        "Submit the search query.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should prevent SQL injection by sanitizing user input and not executing potentially harmful queries.",
      "test_data": "Potential SQL injection: '1' OR '1'='1'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_133",
      "requirement_id": "FR19",
      "test_type": "positive",
      "test_title": "Sort by price in ascending order",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' or 'Explore' section.",
        "Select an area to search for restaurants.",
        "Click on the 'Sort by' button.",
        "Choose 'Price (Low to High)' from the options."
      ],
      "expected_result": "The list of restaurants is sorted in ascending order based on price.",
      "test_data": "Area: Downtown, Price Range: All",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_134",
      "requirement_id": "FR19",
      "test_type": "negative",
      "test_title": "Attempt to sort by an invalid option",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' or 'Explore' section.",
        "Select an area to search for restaurants.",
        "Click on the 'Sort by' button.",
        "Attempt to select an invalid option, such as 'Rating (Lowest to Highest)'"
      ],
      "expected_result": "The application displays an error message indicating that the selected sorting option is not available.",
      "test_data": "Area: Downtown",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR19_135",
      "requirement_id": "FR19",
      "test_type": "edge",
      "test_title": "Sort by restaurant type with a single result",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' or 'Explore' section.",
        "Select an area to search for restaurants.",
        "Click on the 'Sort by' button.",
        "Choose 'Restaurant Type' from the options."
      ],
      "expected_result": "The list of restaurants is sorted by type, but since there's only one result, no change in order is observed.",
      "test_data": "Area: Downtown, Restaurant Type: Italian",
      "priority": "Low"
    },
    {
      "test_id": "TC_FR19_136",
      "requirement_id": "FR19",
      "test_type": "integration",
      "test_title": "Sort by distance when location services are disabled",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' or 'Explore' section.",
        "Select an area to search for restaurants.",
        "Disable location services on the device.",
        "Click on the 'Sort by' button."
      ],
      "expected_result": "The list of restaurants is sorted based on price instead of distance, as location services are disabled.",
      "test_data": "Area: Downtown",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_137",
      "requirement_id": "FR19",
      "test_type": "performance",
      "test_title": "Sort by restaurant name with a large dataset",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' or 'Explore' section.",
        "Select an area to search for restaurants.",
        "Click on the 'Sort by' button.",
        "Choose 'Restaurant Name' from the options."
      ],
      "expected_result": "The list of restaurants is sorted alphabetically within a reasonable time frame, even with a large number of results.",
      "test_data": "Area: Downtown, Number of Restaurants: 100+",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_138",
      "requirement_id": "FR19",
      "test_type": "security",
      "test_title": "Attempt to sort by price while logged out",
      "preconditions": "User is not logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the 'Search' or 'Explore' section.",
        "Select an area to search for restaurants.",
        "Click on the 'Sort by' button.",
        "Choose 'Price (Low to High)' from the options."
      ],
      "expected_result": "The application displays a login prompt, and sorting functionality is not available until the user logs in.",
      "test_data": "Area: Downtown",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR19_139",
      "requirement_id": "FR19",
      "test_type": "positive",
      "test_title": "Sort by Price Ascending",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the restaurant results page.",
        "Select 'Price' sorting option.",
        "Choose 'Ascending' order."
      ],
      "expected_result": "The list of restaurants should be sorted by price from lowest to highest.",
      "test_data": "Restaurant data with varying prices.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_140",
      "requirement_id": "FR19",
      "test_type": "negative",
      "test_title": "Sort by Invalid Option",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the restaurant results page.",
        "Select an invalid sorting option (e.g., 'Rating' instead of 'Price')."
      ],
      "expected_result": "An error message should be displayed indicating that the selected option is not valid for sorting.",
      "test_data": "Invalid sorting options.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_141",
      "requirement_id": "FR19",
      "test_type": "edge",
      "test_title": "Sort by Distance with No Results",
      "preconditions": "User is logged in and viewing a list of restaurants within a very small radius.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the restaurant results page.",
        "Select 'Distance' sorting option."
      ],
      "expected_result": "The list should remain unsorted or display an appropriate message indicating no results found within the specified distance.",
      "test_data": "Restaurant data with distances close together.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_142",
      "requirement_id": "FR19",
      "test_type": "integration",
      "test_title": "Sort by Restaurant Type and Price",
      "preconditions": "User is logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the restaurant results page.",
        "Select 'Restaurant Type' sorting option.",
        "Choose 'Italian'.",
        "Then select 'Price' sorting option.",
        "Choose 'Descending'."
      ],
      "expected_result": "The list of Italian restaurants should be sorted by price from highest to lowest.",
      "test_data": "Restaurant data with varying prices and types.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_143",
      "requirement_id": "FR19",
      "test_type": "performance",
      "test_title": "Sort by Price on Large Dataset",
      "preconditions": "User is logged in and viewing a list of restaurants with over 1000 entries.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the restaurant results page.",
        "Select 'Price' sorting option.",
        "Choose 'Ascending'."
      ],
      "expected_result": "The list should be sorted by price within a reasonable time frame (e.g., less than 5 seconds).",
      "test_data": "Large dataset of restaurants with varying prices.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR19_144",
      "requirement_id": "FR19",
      "test_type": "security",
      "test_title": "Sort by Price while Logged Out",
      "preconditions": "User is not logged in and viewing a list of restaurants.",
      "test_steps": [
        "Open the mobile application.",
        "Navigate to the restaurant results page.",
        "Select 'Price' sorting option.",
        "Choose 'Ascending'."
      ],
      "expected_result": "The list should be sorted by price, and no user-specific data should be exposed or modified.",
      "test_data": "Restaurant data with varying prices.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR20_145",
      "requirement_id": "FR20",
      "test_type": "positive",
      "test_title": "Filter by Maximum Distance - Increasing",
      "preconditions": "User is logged in and viewing results on a list or map.",
      "test_steps": [
        "Select the 'Filter' option from the menu.",
        "Choose the 'Maximum Distance' filter.",
        "Increase the distance value to 50 km.",
        "Verify that only results within 50 km are displayed."
      ],
      "expected_result": "Results should be filtered and only show locations within 50 km.",
      "test_data": "Distance value: 50 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR20_146",
      "requirement_id": "FR20",
      "test_type": "negative",
      "test_title": "Filter by Maximum Distance - Invalid Value",
      "preconditions": "User is logged in and viewing results on a list or map.",
      "test_steps": [
        "Select the 'Filter' option from the menu.",
        "Choose the 'Maximum Distance' filter.",
        "Enter an invalid distance value such as 0 km.",
        "Attempt to apply the filter."
      ],
      "expected_result": "An error message should be displayed indicating that the distance must be greater than 0 km.",
      "test_data": "Distance value: 0 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR20_147",
      "requirement_id": "FR20",
      "test_type": "edge",
      "test_title": "Filter by Maximum Distance - Minimum Value",
      "preconditions": "User is logged in and viewing results on a list or map.",
      "test_steps": [
        "Select the 'Filter' option from the menu.",
        "Choose the 'Maximum Distance' filter.",
        "Set the distance value to 1 km.",
        "Verify that only results within 1 km are displayed."
      ],
      "expected_result": "Results should be filtered and only show locations within 1 km.",
      "test_data": "Distance value: 1 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR20_148",
      "requirement_id": "FR20",
      "test_type": "integration",
      "test_title": "Filter by Maximum Distance with Map View",
      "preconditions": "User is logged in and viewing results on a map.",
      "test_steps": [
        "Select the 'Filter' option from the menu.",
        "Choose the 'Maximum Distance' filter.",
        "Increase the distance value to 10 km.",
        "Verify that markers for locations within 10 km are displayed on the map."
      ],
      "expected_result": "Markers should be displayed only for locations within 10 km of the user's current location.",
      "test_data": "Distance value: 10 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR20_149",
      "requirement_id": "FR20",
      "test_type": "performance",
      "test_title": "Filter by Maximum Distance - Large Dataset",
      "preconditions": "User is logged in and viewing a large dataset of results.",
      "test_steps": [
        "Select the 'Filter' option from the menu.",
        "Choose the 'Maximum Distance' filter.",
        "Increase the distance value to 100 km.",
        "Wait for the filtering process to complete."
      ],
      "expected_result": "The filtering process should complete within a reasonable time frame, without causing the application to freeze or crash.",
      "test_data": "Distance value: 100 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR20_150",
      "requirement_id": "FR20",
      "test_type": "security",
      "test_title": "Filter by Maximum Distance - User Data Privacy",
      "preconditions": "User is logged in and viewing results on a list or map.",
      "test_steps": [
        "Select the 'Filter' option from the menu.",
        "Choose the 'Maximum Distance' filter.",
        "Increase the distance value to 50 km.",
        "Verify that no personal data of other users is displayed."
      ],
      "expected_result": "No personal data should be displayed in the filtered results.",
      "test_data": "Distance value: 50 km",
      "priority": "High"
    },
    {
      "test_id": "TC_FR21_151",
      "requirement_id": "FR21",
      "test_type": "positive",
      "test_title": "Edit password successfully",
      "preconditions": "User is logged in with valid credentials",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the Profile page",
        "Tap on 'Change Password'",
        "Enter current password, new password, and confirm new password",
        "Tap on 'Save'"
      ],
      "expected_result": "Password is updated successfully and user is logged out",
      "test_data": {
        "current_password": "oldpassword123",
        "new_password": "newpassword456"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR21_152",
      "requirement_id": "FR21",
      "test_type": "negative",
      "test_title": "Attempt to edit password with invalid current password",
      "preconditions": "User is logged in with valid credentials",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the Profile page",
        "Tap on 'Change Password'",
        "Enter incorrect current password, new password, and confirm new password",
        "Tap on 'Save'"
      ],
      "expected_result": "Error message is displayed indicating invalid current password",
      "test_data": {
        "current_password": "wrongpassword123",
        "new_password": "newpassword456"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR21_153",
      "requirement_id": "FR21",
      "test_type": "edge",
      "test_title": "Edit email with an invalid format",
      "preconditions": "User is logged in with valid credentials",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the Profile page",
        "Tap on 'Change Email'",
        "Enter an email address with an invalid format (e.g., missing '@' symbol)",
        "Tap on 'Save'"
      ],
      "expected_result": "Error message is displayed indicating invalid email format",
      "test_data": {
        "email": "invalidemail"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR21_154",
      "requirement_id": "FR21",
      "test_type": "integration",
      "test_title": "Edit phone number and verify SMS OTP",
      "preconditions": "User is logged in with valid credentials",
      "test_steps": [
        "Open the mobile application",
        "Navigate to the Profile page",
        "Tap on 'Change Phone Number'",
        "Enter new phone number",
        "Tap on 'Send OTP'",
        "Receive and enter SMS OTP received on the new phone number",
        "Tap on 'Save'"
      ],
      "expected_result": "Phone number is updated successfully and user receives a confirmation message",
      "test_data": {
        "new_phone_number": "+1234567890"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR21_155",
      "requirement_id": "FR21",
      "test_type": "performance",
      "test_title": "Edit profile information under heavy load",
      "preconditions": "Application is under high user load",
      "test_steps": [
        "Simulate multiple users logging in and editing their profiles simultaneously",
        "Observe the response time for each edit operation",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "All profile edits are completed within an acceptable time frame (e.g., less than 5 seconds)",
      "test_data": {
        "number_of_users": "100"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR21_156",
      "requirement_id": "FR21",
      "test_type": "security",
      "test_title": "Attempt to edit profile information from a suspicious IP address",
      "preconditions": "User is logged in with valid credentials",
      "test_steps": [
        "Open the mobile application from a device with a known malicious IP address",
        "Navigate to the Profile page and attempt to edit any information",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Access is denied or an alert is triggered indicating suspicious activity",
      "test_data": {
        "suspicious_ip_address": "1.2.3.4"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR1_157",
      "requirement_id": "QR1",
      "test_type": "positive",
      "test_title": "Search feature is prominently displayed on the home screen",
      "preconditions": "User has opened the location-based service app for the first time.",
      "test_steps": [
        "Open the app and navigate to the home screen.",
        "Verify that the search bar is located at the top of the screen, easily visible.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The search bar should be prominently displayed at the top of the home screen.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR1_158",
      "requirement_id": "QR1",
      "test_type": "negative",
      "test_title": "Search feature is not visible on the home screen",
      "preconditions": "User has opened the location-based service app for the first time.",
      "test_steps": [
        "Open the app and navigate to the home screen.",
        "Look for a search bar at the top of the screen.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The search bar should not be visible on the home screen.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR1_159",
      "requirement_id": "QR1",
      "test_type": "edge",
      "test_title": "Search feature is displayed correctly in a landscape orientation",
      "preconditions": "User has opened the location-based service app and rotated the device to landscape mode.",
      "test_steps": [
        "Open the app and navigate to the home screen.",
        "Rotate the device to landscape mode.",
        "Verify that the search bar remains prominently displayed at the top of the screen."
      ],
      "expected_result": "The search bar should remain prominently displayed at the top of the screen in landscape orientation.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR1_160",
      "requirement_id": "QR1",
      "test_type": "integration",
      "test_title": "Search feature integrates with location services correctly",
      "preconditions": "User has opened the location-based service app and granted location permissions.",
      "test_steps": [
        "Open the app and navigate to the home screen.",
        "Click on the search bar and enter a location name.",
        "Verify that the app uses the user's current location to provide relevant results."
      ],
      "expected_result": "The search feature should correctly integrate with location services, using the user's current location to provide relevant results.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR1_161",
      "requirement_id": "QR1",
      "test_type": "performance",
      "test_title": "Search feature performs well under heavy load",
      "preconditions": "User has opened the location-based service app and is performing multiple search queries simultaneously.",
      "test_steps": [
        "Open the app and navigate to the home screen.",
        "Perform multiple search queries simultaneously.",
        "Monitor the app's performance during the search process."
      ],
      "expected_result": "The search feature should perform well under heavy load without any significant delays or crashes.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR1_162",
      "requirement_id": "QR1",
      "test_type": "security",
      "test_title": "Search queries are not logged or stored without user consent",
      "preconditions": "User has opened the location-based service app and performed a search query.",
      "test_steps": [
        "Open the app and navigate to the home screen.",
        "Perform a search query and note down the query text.",
        "Check the app's settings for any logs or stored data related to the search query."
      ],
      "expected_result": "The search queries should not be logged or stored without user consent.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_163",
      "requirement_id": "QR2",
      "test_type": "positive",
      "test_title": "Search by keyword functionality works as expected",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app.",
        "Enter a keyword related to a location, e.g., 'park'.",
        "Press the search button or tap on the keyboard's search icon.",
        "Verify that results appear for locations matching the keyword."
      ],
      "expected_result": "The app displays a list of locations that match the search keyword.",
      "test_data": "Keyword: 'park'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_164",
      "requirement_id": "QR2",
      "test_type": "negative",
      "test_title": "Search with non-existent keyword returns no results",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app.",
        "Enter a keyword that does not exist, e.g., 'xyz123'.",
        "Press the search button or tap on the keyboard's search icon.",
        "Verify that no results are displayed."
      ],
      "expected_result": "The app displays a message indicating that no locations were found for the given keyword.",
      "test_data": "Keyword: 'xyz123'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_165",
      "requirement_id": "QR2",
      "test_type": "edge",
      "test_title": "Search with an empty keyword returns all locations",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app.",
        "Leave the search bar empty and press the search button or tap on the keyboard's search icon.",
        "Verify that all available locations are displayed."
      ],
      "expected_result": "The app displays a list of all available locations without any filtering applied.",
      "test_data": "Empty keyword",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_166",
      "requirement_id": "QR2",
      "test_type": "integration",
      "test_title": "Search feature integrates with location data from multiple sources",
      "preconditions": "User is logged in to the location-based service app and has access to various location data sources.",
      "test_steps": [
        "Open the search bar at the top of the app.",
        "Enter a keyword related to a location, e.g., 'restaurant'.",
        "Press the search button or tap on the keyboard's search icon.",
        "Verify that results include locations from all integrated data sources."
      ],
      "expected_result": "The app displays a list of locations that match the search keyword across all integrated data sources.",
      "test_data": "Keyword: 'restaurant'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_167",
      "requirement_id": "QR2",
      "test_type": "performance",
      "test_title": "Search feature performs well with large datasets",
      "preconditions": "User is logged in to the location-based service app and has access to a large dataset of locations.",
      "test_steps": [
        "Open the search bar at the top of the app.",
        "Enter a keyword related to a location, e.g., 'hotel'.",
        "Press the search button or tap on the keyboard's search icon.",
        "Wait for the results to load and verify that they are displayed within 5 seconds."
      ],
      "expected_result": "The app displays search results within 5 seconds without any noticeable lag or delay.",
      "test_data": "Keyword: 'hotel'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_168",
      "requirement_id": "QR2",
      "test_type": "security",
      "test_title": "Search feature does not expose sensitive user data",
      "preconditions": "User is logged in to the location-based service app and has provided some personal information.",
      "test_steps": [
        "Open the search bar at the top of the app.",
        "Enter a keyword related to a location, e.g., 'home'.",
        "Press the search button or tap on the keyboard's search icon.",
        "Verify that no sensitive user data is exposed in the search results."
      ],
      "expected_result": "The app displays search results without exposing any sensitive user data such as personal addresses or phone numbers.",
      "test_data": "Keyword: 'home'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_169",
      "requirement_id": "QR2",
      "test_type": "positive",
      "test_title": "Search by keyword functionality",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app interface.",
        "Enter a specific keyword related to a location (e.g., 'parking lot').",
        "Press the search button or hit enter on the keyboard.",
        "Verify that the search results display locations matching the keyword."
      ],
      "expected_result": "A list of locations relevant to the searched keyword is displayed.",
      "test_data": "Keyword: 'parking lot'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_170",
      "requirement_id": "QR2",
      "test_type": "negative",
      "test_title": "Search with non-existent keyword",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app interface.",
        "Enter a keyword that does not exist (e.g., 'xyz123').",
        "Press the search button or hit enter on the keyboard.",
        "Verify that no results are displayed."
      ],
      "expected_result": "No search results are shown, and an appropriate message is displayed indicating no matches found.",
      "test_data": "Keyword: 'xyz123'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_171",
      "requirement_id": "QR2",
      "test_type": "edge",
      "test_title": "Search with empty keyword",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app interface.",
        "Leave the search bar empty and press the search button or hit enter on the keyboard.",
        "Verify that no results are displayed."
      ],
      "expected_result": "No search results are shown, and an appropriate message is displayed indicating no matches found.",
      "test_data": "Empty keyword",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_172",
      "requirement_id": "QR2",
      "test_type": "integration",
      "test_title": "Search feature with map integration",
      "preconditions": "User is logged in to the location-based service app and has a map open.",
      "test_steps": [
        "Open the search bar at the top of the app interface.",
        "Enter a keyword related to a location (e.g., 'restaurant').",
        "Press the search button or hit enter on the keyboard.",
        "Verify that the search results are displayed on the map and marked with appropriate icons."
      ],
      "expected_result": "Search results are shown on the map, and each result is marked with an icon indicating its type (e.g., restaurant, park).",
      "test_data": "Keyword: 'restaurant'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_173",
      "requirement_id": "QR2",
      "test_type": "performance",
      "test_title": "Search performance under heavy load",
      "preconditions": "The app is running on a device with moderate specifications.",
      "test_steps": [
        "Simulate a high number of users simultaneously searching for locations (e.g., 100 simultaneous searches).",
        "Monitor the app's response time and resource usage during the search process.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The app should respond within a reasonable time frame (e.g., less than 5 seconds) and maintain stable performance without crashing.",
      "test_data": "Simulate 100 simultaneous searches",
      "priority": "High"
    },
    {
      "test_id": "TC_QR2_174",
      "requirement_id": "QR2",
      "test_type": "security",
      "test_title": "Search feature does not expose sensitive user data",
      "preconditions": "User is logged in to the location-based service app.",
      "test_steps": [
        "Open the search bar at the top of the app interface.",
        "Enter a keyword related to a location (e.g., 'bank').",
        "Press the search button or hit enter on the keyboard.",
        "Verify that no sensitive user data is exposed in the search results."
      ],
      "expected_result": "Search results do not include any sensitive user data such as personal addresses, phone numbers, or financial information.",
      "test_data": "Keyword: 'bank'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR3_175",
      "requirement_id": "QR3",
      "test_type": "positive",
      "test_title": "User can select an element in the list view with one click",
      "preconditions": "Location-based services application is open and user is logged in.",
      "test_steps": [
        "Open the location search feature.",
        "Enter a location query (e.g., 'New York').",
        "Observe that results are displayed in a list format.",
        "Click on an element from the result list."
      ],
      "expected_result": "The selected element should be highlighted and details should be displayed without requiring additional clicks.",
      "test_data": "Location query: 'New York'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR3_176",
      "requirement_id": "QR3",
      "test_type": "negative",
      "test_title": "User cannot select an element in the list view with multiple clicks",
      "preconditions": "Location-based services application is open and user is logged in.",
      "test_steps": [
        "Open the location search feature.",
        "Enter a location query (e.g., 'New York').",
        "Observe that results are displayed in a list format.",
        "Attempt to click on an element from the result list multiple times."
      ],
      "expected_result": "The selected element should be highlighted and details should be displayed after only one click, not requiring additional clicks.",
      "test_data": "Location query: 'New York'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR3_177",
      "requirement_id": "QR3",
      "test_type": "edge",
      "test_title": "User can select an element in the list view with a keyboard shortcut",
      "preconditions": "Location-based services application is open and user is logged in.",
      "test_steps": [
        "Open the location search feature.",
        "Enter a location query (e.g., 'New York').",
        "Observe that results are displayed in a list format.",
        "Use keyboard shortcut to select an element from the result list."
      ],
      "expected_result": "The selected element should be highlighted and details should be displayed after using the keyboard shortcut, not requiring mouse clicks.",
      "test_data": "Location query: 'New York'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR3_178",
      "requirement_id": "QR3",
      "test_type": "integration",
      "test_title": "Integration of location data with user preferences for selection",
      "preconditions": "Location-based services application is open, user is logged in, and user has set location preferences.",
      "test_steps": [
        "Open the location search feature.",
        "Enter a location query (e.g., 'New York').",
        "Observe that results are displayed in a list format.",
        "Click on an element from the result list."
      ],
      "expected_result": "The selected element should be highlighted and details should be displayed, considering user preferences for selection.",
      "test_data": "Location query: 'New York', User preference: 'Favorite Places'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR3_179",
      "requirement_id": "QR3",
      "test_type": "performance",
      "test_title": "Performance of selecting an element in the list view with a large number of results",
      "preconditions": "Location-based services application is open and user is logged in.",
      "test_steps": [
        "Open the location search feature.",
        "Enter a location query (e.g., 'restaurants near me').",
        "Observe that a large number of results are displayed in a list format.",
        "Click on an element from the result list."
      ],
      "expected_result": "The selected element should be highlighted and details should be displayed within 2 seconds, without any performance issues.",
      "test_data": "Location query: 'restaurants near me'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR3_180",
      "requirement_id": "QR3",
      "test_type": "security",
      "test_title": "User data protection when selecting an element in the list view",
      "preconditions": "Location-based services application is open and user is logged in.",
      "test_steps": [
        "Open the location search feature.",
        "Enter a location query (e.g., 'New York').",
        "Observe that results are displayed in a list format.",
        "Click on an element from the result list."
      ],
      "expected_result": "The selected element should be highlighted and details should be displayed without exposing any sensitive user data.",
      "test_data": "Location query: 'New York'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR4_181",
      "requirement_id": "QR4",
      "test_type": "positive",
      "test_title": "User can select a pin on the map with one click",
      "preconditions": "Map view is open, pins are visible",
      "test_steps": [
        "Open the map view",
        "Locate a pin on the map",
        "Click on the pin"
      ],
      "expected_result": "The selected pin should be highlighted and details should appear in the sidebar",
      "test_data": "A valid location with multiple pins",
      "priority": "High"
    },
    {
      "test_id": "TC_QR4_182",
      "requirement_id": "QR4",
      "test_type": "negative",
      "test_title": "User cannot select a pin on the map if it is not visible",
      "preconditions": "Map view is open, no pins are visible",
      "test_steps": [
        "Open the map view",
        "Attempt to click on an area without any pins",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The map should remain unresponsive and no action should occur",
      "test_data": "A location with no pins",
      "priority": "High"
    },
    {
      "test_id": "TC_QR4_183",
      "requirement_id": "QR4",
      "test_type": "edge",
      "test_title": "User can select a pin on the map at the edge of the visible area",
      "preconditions": "Map view is open, pins are visible near the edges",
      "test_steps": [
        "Open the map view",
        "Locate a pin near the edge of the visible area",
        "Click on the pin"
      ],
      "expected_result": "The selected pin should be highlighted and details should appear in the sidebar",
      "test_data": "A valid location with pins at the edges",
      "priority": "High"
    },
    {
      "test_id": "TC_QR4_184",
      "requirement_id": "QR4",
      "test_type": "integration",
      "test_title": "Map view integrates with other services for accurate location data",
      "preconditions": "Map view is open, connected to a backend service providing location data",
      "test_steps": [
        "Open the map view",
        "Locate a pin on the map",
        "Verify that the pin's details match those provided by the backend service"
      ],
      "expected_result": "The pin details should accurately reflect the data from the backend service",
      "test_data": "A location with accurate coordinates and associated data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR4_185",
      "requirement_id": "QR4",
      "test_type": "performance",
      "test_title": "Map view remains responsive when selecting pins under heavy load",
      "preconditions": "Map view is open, multiple users are interacting with the map simultaneously",
      "test_steps": [
        "Open the map view from multiple devices",
        "Simulate high user activity by clicking on pins rapidly",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The map should remain responsive and performant without any delays or crashes",
      "test_data": "Multiple users interacting with the map simultaneously",
      "priority": "High"
    },
    {
      "test_id": "TC_QR4_186",
      "requirement_id": "QR4",
      "test_type": "security",
      "test_title": "User data is protected when selecting pins on the map",
      "preconditions": "Map view is open, user has logged in",
      "test_steps": [
        "Open the map view",
        "Locate a pin and click on it",
        "Verify that no sensitive user data is exposed"
      ],
      "expected_result": "No sensitive user data should be revealed when selecting pins on the map",
      "test_data": "A logged-in user with access to sensitive data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR5_187",
      "requirement_id": "QR5",
      "test_type": "positive",
      "test_title": "User can click on the information link to access details",
      "preconditions": "The user is viewing a location-based service page.",
      "test_steps": [
        "Open the location-based service application or website.",
        "Scroll down to the section containing the information link.",
        "Identify and tap on the information link.",
        "Verify that the correct details are displayed."
      ],
      "expected_result": "The user should be able to access detailed information about the location with one click.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR5_188",
      "requirement_id": "QR5",
      "test_type": "negative",
      "test_title": "Information link is not clickable",
      "preconditions": "The user is viewing a location-based service page.",
      "test_steps": [
        "Open the location-based service application or website.",
        "Scroll down to the section containing the information link.",
        "Attempt to tap on the information link."
      ],
      "expected_result": "A visual indication should be shown that the link is not clickable, such as a grayed-out state or an error message.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR5_189",
      "requirement_id": "QR5",
      "test_type": "edge",
      "test_title": "Information link is located at the bottom of the page",
      "preconditions": "The user is viewing a location-based service page with limited screen space.",
      "test_steps": [
        "Open the location-based service application or website on a device with limited screen space.",
        "Scroll down to the section containing the information link.",
        "Identify and tap on the information link."
      ],
      "expected_result": "The user should be able to access detailed information about the location with one click, even if it is located at the bottom of the page.",
      "test_data": "None",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR5_190",
      "requirement_id": "QR5",
      "test_type": "integration",
      "test_title": "Information link works correctly when integrated with other services",
      "preconditions": "The user is viewing a location-based service page that integrates with another service (e.g., weather, traffic).",
      "test_steps": [
        "Open the location-based service application or website.",
        "Scroll down to the section containing the information link.",
        "Identify and tap on the information link."
      ],
      "expected_result": "The user should be able to access detailed information about the location with one click, and the integration with other services should function correctly.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR5_191",
      "requirement_id": "QR5",
      "test_type": "performance",
      "test_title": "Information link loads quickly on a slow network",
      "preconditions": "The user is viewing a location-based service page on a device with a slow internet connection.",
      "test_steps": [
        "Open the location-based service application or website on a device with a slow internet connection.",
        "Scroll down to the section containing the information link.",
        "Identify and tap on the information link."
      ],
      "expected_result": "The user should be able to access detailed information about the location with one click, even on a slow network.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR5_192",
      "requirement_id": "QR5",
      "test_type": "security",
      "test_title": "Information link does not lead to malicious content",
      "preconditions": "The user is viewing a location-based service page.",
      "test_steps": [
        "Open the location-based service application or website.",
        "Scroll down to the section containing the information link.",
        "Identify and tap on the information link."
      ],
      "expected_result": "The user should be redirected to a secure and legitimate page, and there should be no indication of malicious content.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR8_193",
      "requirement_id": "QR8",
      "test_type": "positive",
      "test_title": "System handles normal location updates without issues",
      "preconditions": "User is logged in with valid credentials, system is running normally.",
      "test_steps": [
        "1. User sends a location update request to the system.",
        "2. System receives and processes the location update.",
        "3. System responds with an acknowledgment message.",
        "4. Verify that the user's location is updated in the database."
      ],
      "expected_result": "The system successfully updates the user's location and returns a confirmation message.",
      "test_data": "Valid user credentials, current GPS coordinates.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR8_194",
      "requirement_id": "QR8",
      "test_type": "negative",
      "test_title": "System rejects invalid location update requests",
      "preconditions": "User is logged in with valid credentials, system is running normally.",
      "test_steps": [
        "1. User sends a location update request with invalid coordinates (e.g., latitude out of range).",
        "2. System receives the request and processes it.",
        "3. Verify that the system rejects the request and returns an error message."
      ],
      "expected_result": "The system should reject the location update request and provide an appropriate error message.",
      "test_data": "Valid user credentials, invalid GPS coordinates (e.g., latitude out of range).",
      "priority": "High"
    },
    {
      "test_id": "TC_QR8_195",
      "requirement_id": "QR8",
      "test_type": "edge",
      "test_title": "System handles extreme edge case location updates",
      "preconditions": "User is logged in with valid credentials, system is running normally.",
      "test_steps": [
        "1. User sends a location update request with the maximum possible latitude and longitude values.",
        "2. System receives and processes the location update.",
        "3. Verify that the system updates the user's location correctly."
      ],
      "expected_result": "The system should handle extreme edge case location updates without errors.",
      "test_data": "Valid user credentials, maximum possible GPS coordinates (e.g., 90\u00b0N, 180\u00b0E).",
      "priority": "High"
    },
    {
      "test_id": "TC_QR8_196",
      "requirement_id": "QR8",
      "test_type": "integration",
      "test_title": "System integrates with external location services without issues",
      "preconditions": "User is logged in with valid credentials, system is running normally, and an external location service is available.",
      "test_steps": [
        "1. User sends a location update request to the system.",
        "2. System requests the current location from the external location service.",
        "3. External location service responds with the user's current location.",
        "4. System updates the user's location based on the response from the external service."
      ],
      "expected_result": "The system should successfully integrate with the external location service and update the user's location accordingly.",
      "test_data": "Valid user credentials, available external location service.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR8_197",
      "requirement_id": "QR8",
      "test_type": "performance",
      "test_title": "System handles high volume of location updates without performance degradation",
      "preconditions": "User is logged in with valid credentials, system is running normally.",
      "test_steps": [
        "1. Simulate a large number of users sending location update requests simultaneously.",
        "2. Monitor the system's response time and resource usage.",
        "3. Verify that the system maintains acceptable performance levels."
      ],
      "expected_result": "The system should handle high volume of location updates without significant performance degradation.",
      "test_data": "Simulated large number of users, various GPS coordinates.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR8_198",
      "requirement_id": "QR8",
      "test_type": "security",
      "test_title": "System prevents unauthorized access to user's location data",
      "preconditions": "User is logged in with valid credentials, system is running normally.",
      "test_steps": [
        "1. Attempt to send a location update request using an invalid or unauthorized user account.",
        "2. Verify that the system rejects the request and does not update the user's location.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system should prevent unauthorized access to user's location data and reject any requests from invalid accounts.",
      "test_data": "Invalid or unauthorized user credentials, valid GPS coordinates.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR9_199",
      "requirement_id": "QR9",
      "test_type": "positive",
      "test_title": "User receives accurate location data",
      "preconditions": "User has enabled location services on their device.",
      "test_steps": [
        "Open the application.",
        "Navigate to the 'Location' feature.",
        "Check if the displayed location matches the user's current location."
      ],
      "expected_result": "The displayed location should be accurate within a 100-meter radius of the user's actual location.",
      "test_data": "User's current GPS coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_QR9_200",
      "requirement_id": "QR9",
      "test_type": "negative",
      "test_title": "System fails to update location after moving",
      "preconditions": "User has enabled location services and is stationary for at least 5 minutes.",
      "test_steps": [
        "Open the application.",
        "Navigate to the 'Location' feature.",
        "Move to a different location without changing the app.",
        "Wait for 10 minutes."
      ],
      "expected_result": "The system should update the location data within 2 minutes of movement.",
      "test_data": "User's initial and final GPS coordinates",
      "priority": "High"
    },
    {
      "test_id": "TC_QR9_201",
      "requirement_id": "QR9",
      "test_type": "edge",
      "test_title": "Location services disabled by user",
      "preconditions": "User has disabled location services on their device.",
      "test_steps": [
        "Open the application.",
        "Navigate to the 'Location' feature.",
        "Check if the system prompts for enabling location services."
      ],
      "expected_result": "The system should prompt the user to enable location services and not display any location data until enabled.",
      "test_data": "User's device settings",
      "priority": "High"
    },
    {
      "test_id": "TC_QR9_202",
      "requirement_id": "QR9",
      "test_type": "integration",
      "test_title": "Integration with third-party mapping service",
      "preconditions": "Third-party mapping service is available and correctly configured in the app.",
      "test_steps": [
        "Open the application.",
        "Navigate to the 'Location' feature.",
        "Check if the displayed location data matches the data from the third-party mapping service."
      ],
      "expected_result": "The system should display location data that is consistent with the data provided by the third-party mapping service.",
      "test_data": "Third-party mapping service API key and expected location data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR9_203",
      "requirement_id": "QR9",
      "test_type": "performance",
      "test_title": "System performance under heavy load",
      "preconditions": "Multiple users are simultaneously using the application in different locations.",
      "test_steps": [
        "Simulate multiple users accessing the 'Location' feature.",
        "Monitor system response time and resource usage.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system should handle up to 100 concurrent users without significant degradation in performance or errors.",
      "test_data": "Number of simulated users",
      "priority": "High"
    },
    {
      "test_id": "TC_QR9_204",
      "requirement_id": "QR9",
      "test_type": "security",
      "test_title": "User data privacy and security",
      "preconditions": "User has granted location permissions to the application.",
      "test_steps": [
        "Open the application.",
        "Navigate to the 'Location' feature.",
        "Check if the system logs any sensitive user data."
      ],
      "expected_result": "The system should not log or store any sensitive user data without explicit consent and encryption.",
      "test_data": "User's location data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR12_205",
      "requirement_id": "QR12",
      "test_type": "positive",
      "test_title": "Verify successful communication between system and server using valid credentials",
      "preconditions": "System is up and running, server is accessible, valid user credentials are available",
      "test_steps": [
        "Log in to the system with valid username and password",
        "Initiate a request to the server for location data",
        "Verify that the server responds with the correct location data",
        "Check that the communication protocol (e.g., HTTPS) is used"
      ],
      "expected_result": "The system should successfully communicate with the server, receive accurate location data, and use a secure protocol",
      "test_data": "Valid username: user123, password: pass456",
      "priority": "High"
    },
    {
      "test_id": "TC_QR12_206",
      "requirement_id": "QR12",
      "test_type": "negative",
      "test_title": "Verify communication failure when using invalid credentials",
      "preconditions": "System is up and running, server is accessible, invalid user credentials are available",
      "test_steps": [
        "Log in to the system with an invalid username and password",
        "Initiate a request to the server for location data",
        "Verify that the server denies access or returns an error message"
      ],
      "expected_result": "The system should fail to communicate with the server due to invalid credentials, resulting in an access denial or error response",
      "test_data": "Invalid username: user999, password: wrongpass",
      "priority": "High"
    },
    {
      "test_id": "TC_QR12_207",
      "requirement_id": "QR12",
      "test_type": "edge",
      "test_title": "Verify communication using the maximum allowed data size",
      "preconditions": "System is up and running, server is accessible, maximum allowed data size is known",
      "test_steps": [
        "Generate a request with the maximum allowed data size for location data",
        "Send the request to the server",
        "Verify that the server processes the request without errors"
      ],
      "expected_result": "The system should successfully communicate with the server using the maximum allowed data size, and the server should process it correctly",
      "test_data": "Maximum allowed data size: 10MB",
      "priority": "High"
    },
    {
      "test_id": "TC_QR12_208",
      "requirement_id": "QR12",
      "test_type": "integration",
      "test_title": "Verify seamless integration between system and external location service provider",
      "preconditions": "System is up and running, server is accessible, external location service provider is integrated",
      "test_steps": [
        "Initiate a request to the external location service provider from the system",
        "Verify that the request reaches the external provider",
        "Check that the external provider responds with accurate location data",
        "Ensure that the communication between the system and the external provider is secure"
      ],
      "expected_result": "The system should seamlessly integrate with the external location service provider, receive accurate location data, and maintain a secure communication channel",
      "test_data": "External provider URL: https://api.locationprovider.com/data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR12_209",
      "requirement_id": "QR12",
      "test_type": "performance",
      "test_title": "Verify system performance under high load for communication with the server",
      "preconditions": "System is up and running, server is accessible, multiple users are concurrently accessing the system",
      "test_steps": [
        "Simulate a high number of concurrent users accessing the system",
        "Initiate requests to the server from all users",
        "Monitor system performance metrics (e.g., response time, error rate)",
        "Verify that the system handles the load without significant degradation in performance"
      ],
      "expected_result": "The system should handle a high number of concurrent users accessing it and communicate with the server efficiently, maintaining acceptable performance metrics",
      "test_data": "Number of concurrent users: 1000",
      "priority": "High"
    },
    {
      "test_id": "TC_QR12_210",
      "requirement_id": "QR12",
      "test_type": "security",
      "test_title": "Verify that communication between system and server is encrypted using TLS/SSL",
      "preconditions": "System is up and running, server is accessible",
      "test_steps": [
        "Initiate a request to the server from the system",
        "Capture the network traffic during the communication",
        "Analyze the captured traffic for encryption markers (e.g., SSL/TLS handshake)"
      ],
      "expected_result": "The communication between the system and the server should be encrypted using TLS/SSL, as indicated by the presence of SSL/TLS handshake in the captured network traffic",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR13_211",
      "requirement_id": "QR13",
      "test_type": "positive",
      "test_title": "Positive test for Security of accounts. 25",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts. 25",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR13_212",
      "requirement_id": "QR13",
      "test_type": "negative",
      "test_title": "Negative test for Security of accounts. 25",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts. 25",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR13_213",
      "requirement_id": "QR13",
      "test_type": "edge",
      "test_title": "Edge test for Security of accounts. 25",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts. 25",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR13_214",
      "requirement_id": "QR13",
      "test_type": "integration",
      "test_title": "Integration test for Security of accounts. 25",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts. 25",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR13_215",
      "requirement_id": "QR13",
      "test_type": "performance",
      "test_title": "Performance test for Security of accounts. 25",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts. 25",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR13_216",
      "requirement_id": "QR13",
      "test_type": "security",
      "test_title": "Security test for Security of accounts. 25",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts. 25",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR14_217",
      "requirement_id": "QR14",
      "test_type": "positive",
      "test_title": "User successfully logs in with valid credentials",
      "preconditions": "A user account exists with correct username and password",
      "test_steps": [
        "Open the Location-based Services application",
        "Enter the valid username",
        "Enter the valid password",
        "Click on the login button"
      ],
      "expected_result": "The user is successfully logged in and redirected to the main dashboard",
      "test_data": {
        "username": "user123",
        "password": "pass123!"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR14_218",
      "requirement_id": "QR14",
      "test_type": "negative",
      "test_title": "User fails to log in with incorrect password",
      "preconditions": "A user account exists with correct username and password",
      "test_steps": [
        "Open the Location-based Services application",
        "Enter the valid username",
        "Enter an incorrect password",
        "Click on the login button"
      ],
      "expected_result": "The login attempt fails, and an error message is displayed indicating invalid credentials",
      "test_data": {
        "username": "user123",
        "password": "wrongpass!"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR14_219",
      "requirement_id": "QR14",
      "test_type": "edge",
      "test_title": "User logs in with the minimum required password length",
      "preconditions": "A user account exists with correct username and a password that meets the minimum length requirement",
      "test_steps": [
        "Open the Location-based Services application",
        "Enter the valid username",
        "Enter the minimum required password length",
        "Click on the login button"
      ],
      "expected_result": "The user is successfully logged in and redirected to the main dashboard",
      "test_data": {
        "username": "user123",
        "password": "minpass"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR14_220",
      "requirement_id": "QR14",
      "test_type": "integration",
      "test_title": "User logs in after successful registration",
      "preconditions": "A new user account is registered with correct username, password, and email",
      "test_steps": [
        "Open the Location-based Services application",
        "Navigate to the registration page",
        "Enter valid username, password, and email",
        "Click on the register button",
        "Log out of the application",
        "Log back in using the registered credentials"
      ],
      "expected_result": "The user is successfully logged in and redirected to the main dashboard",
      "test_data": {
        "username": "newuser123",
        "password": "newpass123!",
        "email": "newuser@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR14_221",
      "requirement_id": "QR14",
      "test_type": "performance",
      "test_title": "User login performance under high load",
      "preconditions": "The Location-based Services application is running with a simulated user base of 100 users",
      "test_steps": [
        "Simulate simultaneous logins from 100 users",
        "Observe the response time for each login attempt",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "All login attempts complete within 5 seconds, with an average response time of less than 2 seconds",
      "test_data": {
        "user_count": 100
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR14_222",
      "requirement_id": "QR14",
      "test_type": "security",
      "test_title": "User account is protected against brute force attacks",
      "preconditions": "A user account exists with correct username and password",
      "test_steps": [
        "Open the Location-based Services application",
        "Enter the valid username",
        "Attempt to enter incorrect passwords 10 times in a row"
      ],
      "expected_result": "The login attempt fails after 10 consecutive incorrect attempts, and an error message is displayed indicating too many failed attempts. The account should be temporarily locked for 5 minutes.",
      "test_data": {
        "username": "user123",
        "incorrect_passwords": [
          "wrongpass1",
          "wrongpass2",
          "wrongpass3",
          "wrongpass4",
          "wrongpass5",
          "wrongpass6",
          "wrongpass7",
          "wrongpass8",
          "wrongpass9",
          "wrongpass10"
        ]
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR14_223",
      "requirement_id": "QR14",
      "test_type": "positive",
      "test_title": "Positive test for Security of accounts.",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR14_224",
      "requirement_id": "QR14",
      "test_type": "negative",
      "test_title": "Negative test for Security of accounts.",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR14_225",
      "requirement_id": "QR14",
      "test_type": "edge",
      "test_title": "Edge test for Security of accounts.",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR14_226",
      "requirement_id": "QR14",
      "test_type": "integration",
      "test_title": "Integration test for Security of accounts.",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR14_227",
      "requirement_id": "QR14",
      "test_type": "performance",
      "test_title": "Performance test for Security of accounts.",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR14_228",
      "requirement_id": "QR14",
      "test_type": "security",
      "test_title": "Security test for Security of accounts.",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Security of accounts.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR17_229",
      "requirement_id": "QR17",
      "test_type": "positive",
      "test_title": "User successfully creates an account with valid credentials",
      "preconditions": "System is up and running, user has access to the registration page.",
      "test_steps": [
        "Open the registration page in a web browser.",
        "Enter a valid email address.",
        "Enter a strong password with at least 8 characters, including letters and numbers.",
        "Confirm the password by entering it again.",
        "Click on the 'Register' button."
      ],
      "expected_result": "A confirmation message is displayed indicating successful account creation. The user is redirected to the login page.",
      "test_data": {
        "email": "user@example.com",
        "password": "P@ssw0rd123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR17_230",
      "requirement_id": "QR17",
      "test_type": "negative",
      "test_title": "User fails to create an account with an invalid email format",
      "preconditions": "System is up and running, user has access to the registration page.",
      "test_steps": [
        "Open the registration page in a web browser.",
        "Enter an invalid email address (e.g., 'userexample.com').",
        "Enter a strong password with at least 8 characters, including letters and numbers.",
        "Confirm the password by entering it again.",
        "Click on the 'Register' button."
      ],
      "expected_result": "An error message is displayed indicating that the email format is invalid. The registration process should not proceed.",
      "test_data": {
        "email": "userexample.com",
        "password": "P@ssw0rd123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR17_231",
      "requirement_id": "QR17",
      "test_type": "edge",
      "test_title": "User creates an account with the minimum required password length",
      "preconditions": "System is up and running, user has access to the registration page.",
      "test_steps": [
        "Open the registration page in a web browser.",
        "Enter a valid email address.",
        "Enter a password that meets the minimum length requirement (e.g., 'P@ssw0rd').",
        "Confirm the password by entering it again.",
        "Click on the 'Register' button."
      ],
      "expected_result": "A confirmation message is displayed indicating successful account creation. The user should be redirected to the login page.",
      "test_data": {
        "email": "user@example.com",
        "password": "P@ssw0rd"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR17_232",
      "requirement_id": "QR17",
      "test_type": "integration",
      "test_title": "User creates an account and is able to log in successfully",
      "preconditions": "System is up and running, user has access to the registration page.",
      "test_steps": [
        "Open the registration page in a web browser.",
        "Enter a valid email address.",
        "Enter a strong password with at least 8 characters, including letters and numbers.",
        "Confirm the password by entering it again.",
        "Click on the 'Register' button.",
        "Navigate to the login page.",
        "Enter the registered email and password.",
        "Click on the 'Login' button."
      ],
      "expected_result": "A confirmation message is displayed indicating successful login. The user should be redirected to the home page or dashboard.",
      "test_data": {
        "email": "user@example.com",
        "password": "P@ssw0rd123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR17_233",
      "requirement_id": "QR17",
      "test_type": "performance",
      "test_title": "User creates an account under heavy load",
      "preconditions": "System is up and running, user has access to the registration page.",
      "test_steps": [
        "Simulate a high number of users (e.g., 100) attempting to create accounts simultaneously.",
        "Observe the system's response time and resource utilization.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system should handle the load without significant performance degradation. All users should be able to create their accounts successfully within an acceptable time frame.",
      "test_data": {
        "user_count": 100
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR17_234",
      "requirement_id": "QR17",
      "test_type": "security",
      "test_title": "User's password is hashed and stored securely",
      "preconditions": "System is up and running, user has access to the registration page.",
      "test_steps": [
        "Open the registration page in a web browser.",
        "Enter a valid email address.",
        "Enter a strong password with at least 8 characters, including letters and numbers.",
        "Confirm the password by entering it again.",
        "Click on the 'Register' button."
      ],
      "expected_result": "The system should hash the user's password before storing it in the database. The stored password should not be easily readable or reversible.",
      "test_data": {
        "email": "user@example.com",
        "password": "P@ssw0rd123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR18_235",
      "requirement_id": "QR18",
      "test_type": "positive",
      "test_title": "Positive test for The security of creating account for restaurant ow",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to The security of creating account for restaurant owners of the system.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR18_236",
      "requirement_id": "QR18",
      "test_type": "negative",
      "test_title": "Negative test for The security of creating account for restaurant ow",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to The security of creating account for restaurant owners of the system.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR18_237",
      "requirement_id": "QR18",
      "test_type": "edge",
      "test_title": "Edge test for The security of creating account for restaurant ow",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to The security of creating account for restaurant owners of the system.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR18_238",
      "requirement_id": "QR18",
      "test_type": "integration",
      "test_title": "Integration test for The security of creating account for restaurant ow",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to The security of creating account for restaurant owners of the system.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR18_239",
      "requirement_id": "QR18",
      "test_type": "performance",
      "test_title": "Performance test for The security of creating account for restaurant ow",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to The security of creating account for restaurant owners of the system.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR18_240",
      "requirement_id": "QR18",
      "test_type": "security",
      "test_title": "Security test for The security of creating account for restaurant ow",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to The security of creating account for restaurant owners of the system.",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_QR19_241",
      "requirement_id": "QR19",
      "test_type": "positive",
      "test_title": "Add a new location type",
      "preconditions": "Application is running with default location types.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Settings' menu.",
        "Select 'Location Types'.",
        "Click on 'Add New Type'.",
        "Enter 'Beach' as the new type name and save."
      ],
      "expected_result": "The new location type 'Beach' should be added successfully and visible in the list of location types.",
      "test_data": "Type: Beach, Description: A sandy area near water.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR19_242",
      "requirement_id": "QR19",
      "test_type": "negative",
      "test_title": "Attempt to add an existing location type",
      "preconditions": "Application is running with default location types including 'Park'.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Settings' menu.",
        "Select 'Location Types'.",
        "Click on 'Add New Type'.",
        "Enter 'Park' as the new type name and save."
      ],
      "expected_result": "The application should display an error message indicating that the location type already exists.",
      "test_data": "Type: Park, Description: A public area for recreation.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR19_243",
      "requirement_id": "QR19",
      "test_type": "edge",
      "test_title": "Add a very long location type name",
      "preconditions": "Application is running with default location types.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Settings' menu.",
        "Select 'Location Types'.",
        "Click on 'Add New Type'.",
        "Enter a very long string of characters as the new type name and save."
      ],
      "expected_result": "The application should truncate the location type name or display an error message indicating that the input is too long.",
      "test_data": "Type: A very, very, very, very, very, very, very, very, very, very long string of characters, Description: A public area for recreation.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR19_244",
      "requirement_id": "QR19",
      "test_type": "integration",
      "test_title": "Integrate with a third-party weather API",
      "preconditions": "Application is running and has access to the internet.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Settings' menu.",
        "Select 'API Integrations'.",
        "Click on 'Add New Integration'.",
        "Enter 'Weather API' as the integration name and provide necessary credentials."
      ],
      "expected_result": "The application should successfully integrate with the third-party weather API and display weather data for locations.",
      "test_data": "Integration Name: Weather API, Credentials: API Key, Secret Key.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR19_245",
      "requirement_id": "QR19",
      "test_type": "performance",
      "test_title": "Add a large number of location types",
      "preconditions": "Application is running with default settings.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Settings' menu.",
        "Select 'Location Types'.",
        "Click on 'Add New Type' and repeat this step 100 times, entering unique type names."
      ],
      "expected_result": "The application should handle the addition of 100 location types without performance degradation or errors.",
      "test_data": "Number of Location Types: 100",
      "priority": "High"
    },
    {
      "test_id": "TC_QR19_246",
      "requirement_id": "QR19",
      "test_type": "security",
      "test_title": "Attempt to add a location type with restricted characters",
      "preconditions": "Application is running with default location types.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Settings' menu.",
        "Select 'Location Types'.",
        "Click on 'Add New Type'.",
        "Enter '<script>alert('XSS')</script>' as the new type name and save."
      ],
      "expected_result": "The application should sanitize the input and prevent any potential XSS attacks, displaying an error message instead.",
      "test_data": "Type: <script>alert('XSS')</script>, Description: A public area for recreation.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR20_247",
      "requirement_id": "QR20",
      "test_type": "positive",
      "test_title": "Application launches successfully on iOS device",
      "preconditions": "iOS device with the latest OS installed, application downloaded from App Store",
      "test_steps": [
        "1. Power on the iOS device and unlock it.",
        "2. Open the App Store.",
        "3. Search for the application by its name.",
        "4. Tap 'Get' and then 'Install'."
      ],
      "expected_result": "The application launches without any errors or crashes.",
      "test_data": "N/A",
      "priority": "High"
    },
    {
      "test_id": "TC_QR20_248",
      "requirement_id": "QR20",
      "test_type": "negative",
      "test_title": "Application fails to launch on iOS device due to missing permissions",
      "preconditions": "iOS device with the latest OS installed, application downloaded from App Store",
      "test_steps": [
        "1. Power on the iOS device and unlock it.",
        "2. Open the App Store.",
        "3. Search for the application by its name.",
        "4. Tap 'Get' and then 'Install'."
      ],
      "expected_result": "The application fails to launch and displays a permissions error message.",
      "test_data": "N/A",
      "priority": "High"
    },
    {
      "test_id": "TC_QR20_249",
      "requirement_id": "QR20",
      "test_type": "edge",
      "test_title": "Application launches on the lowest supported iOS version",
      "preconditions": "iOS device with the minimum supported OS version, application downloaded from App Store",
      "test_steps": [
        "1. Power on the iOS device and unlock it.",
        "2. Open the App Store.",
        "3. Search for the application by its name.",
        "4. Tap 'Get' and then 'Install'."
      ],
      "expected_result": "The application launches without any errors or crashes.",
      "test_data": "N/A",
      "priority": "High"
    },
    {
      "test_id": "TC_QR20_250",
      "requirement_id": "QR20",
      "test_type": "integration",
      "test_title": "Application integrates with iOS location services",
      "preconditions": "iOS device with the latest OS installed, application downloaded from App Store, location services enabled",
      "test_steps": [
        "1. Power on the iOS device and unlock it.",
        "2. Open the application.",
        "3. Allow the application to access your location.",
        "4. Check if the application displays the user's current location."
      ],
      "expected_result": "The application successfully integrates with iOS location services and displays the user's current location accurately.",
      "test_data": "N/A",
      "priority": "High"
    },
    {
      "test_id": "TC_QR20_251",
      "requirement_id": "QR20",
      "test_type": "performance",
      "test_title": "Application performs well under heavy load on iOS device",
      "preconditions": "iOS device with the latest OS installed, application downloaded from App Store, multiple users simultaneously using the app",
      "test_steps": [
        "1. Power on the iOS device and unlock it.",
        "2. Open the application.",
        "3. Simulate heavy load by performing multiple actions simultaneously (e.g., searching for locations, adding markers).",
        "4. Monitor the application's performance."
      ],
      "expected_result": "The application remains responsive and performs well under heavy load without any crashes or significant delays.",
      "test_data": "N/A",
      "priority": "High"
    },
    {
      "test_id": "TC_QR20_252",
      "requirement_id": "QR20",
      "test_type": "security",
      "test_title": "Application data is encrypted on iOS device",
      "preconditions": "iOS device with the latest OS installed, application downloaded from App Store",
      "test_steps": [
        "1. Power on the iOS device and unlock it.",
        "2. Open the application.",
        "3. Perform actions that generate or store sensitive data (e.g., entering personal information).",
        "4. Restart the device and check if the data is still accessible."
      ],
      "expected_result": "The application data is encrypted and remains secure even after a device restart.",
      "test_data": "N/A",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_253",
      "requirement_id": "QR21",
      "test_type": "positive",
      "test_title": "Verify basic functionality of location-based services",
      "preconditions": "Application is installed on a device with internet access.",
      "test_steps": [
        "Open the application and log in with valid credentials.",
        "Select a location from the list of available locations.",
        "Check if the application displays accurate distance and directions to the selected location."
      ],
      "expected_result": "The application should display the correct distance and directions to the selected location.",
      "test_data": "Valid user credentials, sample location data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_254",
      "requirement_id": "QR21",
      "test_type": "negative",
      "test_title": "Test response when no internet connection is available",
      "preconditions": "Application is installed on a device without internet access.",
      "test_steps": [
        "Open the application and attempt to select a location.",
        "Check if an error message is displayed.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should display an error message indicating no internet connection.",
      "test_data": "No internet connection",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_255",
      "requirement_id": "QR21",
      "test_type": "edge",
      "test_title": "Test with the most distant location available",
      "preconditions": "Application is installed and logged in on a device with internet access.",
      "test_steps": [
        "Open the application and select the most distant location from the list.",
        "Check if the application displays accurate distance and directions to the selected location.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should display the correct distance and directions to the selected location, even for the most distant option.",
      "test_data": "Most distant location data",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_256",
      "requirement_id": "QR21",
      "test_type": "integration",
      "test_title": "Test integration with GPS service",
      "preconditions": "Application is installed and logged in on a device with internet access and GPS enabled.",
      "test_steps": [
        "Open the application and allow it to access location services.",
        "Check if the application displays accurate current location based on GPS data.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should display the user's current location accurately based on GPS data.",
      "test_data": "GPS service enabled",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_257",
      "requirement_id": "QR21",
      "test_type": "performance",
      "test_title": "Test performance under heavy load",
      "preconditions": "Application is installed and logged in on a device with internet access.",
      "test_steps": [
        "Simulate multiple users accessing the application simultaneously.",
        "Check if the application remains responsive and performs well.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should remain responsive and perform well under heavy load.",
      "test_data": "Multiple user sessions",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_258",
      "requirement_id": "QR21",
      "test_type": "security",
      "test_title": "Test for unauthorized access to user data",
      "preconditions": "Application is installed and logged in on a device with internet access.",
      "test_steps": [
        "Attempt to access the application from an unauthorized device or account.",
        "Check if the application detects and prevents unauthorized access.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The application should detect and prevent unauthorized access to user data.",
      "test_data": "Unauthorized device or account",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_259",
      "requirement_id": "QR21",
      "test_type": "positive",
      "test_title": "Verify location-based service functionality",
      "preconditions": "Application is deployed in a test environment with valid API keys.",
      "test_steps": [
        "Open the application on a mobile device or web browser.",
        "Enter a specific location (e.g., New York City).",
        "Select 'Find Nearby Places' option.",
        "Verify that the list of nearby places is displayed correctly."
      ],
      "expected_result": "The application should display a list of nearby places based on the entered location.",
      "test_data": "Location: New York City, API Key: valid_key",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_260",
      "requirement_id": "QR21",
      "test_type": "negative",
      "test_title": "Test invalid API key handling",
      "preconditions": "Application is deployed in a test environment with an invalid API key.",
      "test_steps": [
        "Open the application on a mobile device or web browser.",
        "Enter a specific location (e.g., New York City).",
        "Select 'Find Nearby Places' option.",
        "Verify that an error message is displayed."
      ],
      "expected_result": "The application should display an error message indicating invalid API key.",
      "test_data": "Location: New York City, Invalid API Key: invalid_key",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_261",
      "requirement_id": "QR21",
      "test_type": "edge",
      "test_title": "Test location with no nearby places",
      "preconditions": "Application is deployed in a test environment.",
      "test_steps": [
        "Open the application on a mobile device or web browser.",
        "Enter a specific location (e.g., Antarctica).",
        "Select 'Find Nearby Places' option.",
        "Verify that a message indicating no nearby places is displayed."
      ],
      "expected_result": "The application should display a message indicating no nearby places found.",
      "test_data": "Location: Antarctica",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_262",
      "requirement_id": "QR21",
      "test_type": "integration",
      "test_title": "Verify integration with location services API",
      "preconditions": "Application is deployed in a test environment with valid API keys.",
      "test_steps": [
        "Open the application on a mobile device or web browser.",
        "Enter a specific location (e.g., New York City).",
        "Select 'Find Nearby Places' option.",
        "Verify that the integration with the location services API is successful."
      ],
      "expected_result": "The application should successfully integrate with the location services API and display nearby places.",
      "test_data": "Location: New York City, API Key: valid_key",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_263",
      "requirement_id": "QR21",
      "test_type": "performance",
      "test_title": "Test application performance under heavy load",
      "preconditions": "Application is deployed in a test environment with valid API keys.",
      "test_steps": [
        "Simulate multiple users accessing the application simultaneously.",
        "Enter different locations and select 'Find Nearby Places' option.",
        "Monitor the application's response time and resource usage."
      ],
      "expected_result": "The application should handle multiple simultaneous requests efficiently without significant performance degradation.",
      "test_data": "Multiple simulated users, various locations",
      "priority": "High"
    },
    {
      "test_id": "TC_QR21_264",
      "requirement_id": "QR21",
      "test_type": "security",
      "test_title": "Verify data encryption during transmission",
      "preconditions": "Application is deployed in a test environment with valid API keys.",
      "test_steps": [
        "Open the application on a mobile device or web browser.",
        "Enter a specific location (e.g., New York City).",
        "Select 'Find Nearby Places' option.",
        "Verify that data transmitted between the client and server is encrypted."
      ],
      "expected_result": "The data transmitted between the client and server should be encrypted to ensure security.",
      "test_data": "Location: New York City, API Key: valid_key",
      "priority": "High"
    },
    {
      "test_id": "TC_QR22_265",
      "requirement_id": "QR22",
      "test_type": "positive",
      "test_title": "Verify Internet Connection Established",
      "preconditions": "Application is launched on a device with internet access.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Check the 'Internet Connection' status."
      ],
      "expected_result": "The 'Internet Connection' status should display as 'Connected'.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR22_266",
      "requirement_id": "QR22",
      "test_type": "negative",
      "test_title": "Verify Internet Connection Failure",
      "preconditions": "Application is launched on a device without internet access.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Check the 'Internet Connection' status."
      ],
      "expected_result": "The 'Internet Connection' status should display as 'Disconnected'.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR22_267",
      "requirement_id": "QR22",
      "test_type": "edge",
      "test_title": "Verify Internet Connection with Limited Data",
      "preconditions": "Application is launched on a device with limited data allowance.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Check the 'Internet Connection' status."
      ],
      "expected_result": "The 'Internet Connection' status should display as 'Connected', but with a warning about limited data remaining.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR22_268",
      "requirement_id": "QR22",
      "test_type": "integration",
      "test_title": "Verify Internet Connection with External Service",
      "preconditions": "Application is launched on a device with internet access and an external service is available.",
      "test_steps": [
        "Open the application.",
        "Attempt to perform an action that requires internet (e.g., fetching data).",
        "Check if the action completes successfully."
      ],
      "expected_result": "The action should complete successfully, indicating a successful internet connection with the external service.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR22_269",
      "requirement_id": "QR22",
      "test_type": "performance",
      "test_title": "Verify Internet Connection Speed",
      "preconditions": "Application is launched on a device with internet access.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Check the 'Internet Speed' status."
      ],
      "expected_result": "The 'Internet Speed' should be within acceptable limits (e.g., greater than 1 Mbps).",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR22_270",
      "requirement_id": "QR22",
      "test_type": "security",
      "test_title": "Verify Secure Internet Connection",
      "preconditions": "Application is launched on a device with internet access.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Check the 'Internet Security' status."
      ],
      "expected_result": "The 'Internet Security' status should display as 'Secure', indicating that the connection is encrypted and protected.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR23_271",
      "requirement_id": "QR23",
      "test_type": "positive",
      "test_title": "Verify GPS Connection Successful",
      "preconditions": "Application is installed on a device with a functioning GPS module.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Select 'Location' or 'GPS' option.",
        "Ensure that the GPS toggle is turned on.",
        "Wait for the GPS signal to be acquired."
      ],
      "expected_result": "The GPS should successfully connect and display a location pin on the map.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR23_272",
      "requirement_id": "QR23",
      "test_type": "negative",
      "test_title": "Verify GPS Connection Fails Without Permission",
      "preconditions": "Application is installed on a device with a functioning GPS module.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Select 'Location' or 'GPS' option.",
        "Ensure that the GPS toggle is turned off.",
        "Attempt to use location-based features."
      ],
      "expected_result": "The application should display an error message indicating that location services are disabled.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR23_273",
      "requirement_id": "QR23",
      "test_type": "edge",
      "test_title": "Verify GPS Connection with Low Signal",
      "preconditions": "Application is installed on a device with a functioning GPS module in an area with poor signal.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Select 'Location' or 'GPS' option.",
        "Ensure that the GPS toggle is turned on.",
        "Wait for the GPS signal to be acquired."
      ],
      "expected_result": "The GPS should attempt to connect but may display a low signal warning. The application should still allow basic location-based features to function.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR23_274",
      "requirement_id": "QR23",
      "test_type": "integration",
      "test_title": "Verify GPS Connection with Other Location Services",
      "preconditions": "Application is installed on a device with a functioning GPS module and other location services enabled.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Select 'Location' or 'GPS' option.",
        "Ensure that the GPS toggle is turned on.",
        "Wait for the GPS signal to be acquired."
      ],
      "expected_result": "The GPS should successfully connect and not interfere with other location services. Both should function independently.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR23_275",
      "requirement_id": "QR23",
      "test_type": "performance",
      "test_title": "Verify GPS Connection Performance Over Time",
      "preconditions": "Application is installed on a device with a functioning GPS module in an area with good signal.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Select 'Location' or 'GPS' option.",
        "Ensure that the GPS toggle is turned on.",
        "Wait for the GPS signal to be acquired and then wait for 1 hour."
      ],
      "expected_result": "The GPS should maintain a stable connection throughout the duration of the test without dropping or losing signal.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR23_276",
      "requirement_id": "QR23",
      "test_type": "security",
      "test_title": "Verify GPS Connection with Mock Location Enabled",
      "preconditions": "Application is installed on a device with a functioning GPS module and mock location enabled in the device settings.",
      "test_steps": [
        "Open the application.",
        "Navigate to the settings menu.",
        "Select 'Location' or 'GPS' option.",
        "Ensure that the GPS toggle is turned on.",
        "Wait for the GPS signal to be acquired."
      ],
      "expected_result": "The application should display an error message indicating that mock location is enabled and prevent the GPS from connecting.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_FR22_277",
      "requirement_id": "FR22",
      "test_type": "positive",
      "test_title": "Create an account with valid credentials",
      "preconditions": "User is on the registration page",
      "test_steps": [
        "Enter a valid email address",
        "Enter a strong password",
        "Confirm the password",
        "Click on the 'Register' button"
      ],
      "expected_result": "Account creation successful, user is redirected to login page",
      "test_data": {
        "email": "user@example.com",
        "password": "StrongPass123!"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR22_278",
      "requirement_id": "FR22",
      "test_type": "negative",
      "test_title": "Create an account with invalid email format",
      "preconditions": "User is on the registration page",
      "test_steps": [
        "Enter an invalid email address (e.g., userexample.com)",
        "Enter a strong password",
        "Confirm the password",
        "Click on the 'Register' button"
      ],
      "expected_result": "Error message displayed: Invalid email format",
      "test_data": {
        "email": "userexample.com",
        "password": "StrongPass123!"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR22_279",
      "requirement_id": "FR22",
      "test_type": "edge",
      "test_title": "Create an account with the shortest allowed password",
      "preconditions": "User is on the registration page",
      "test_steps": [
        "Enter a valid email address",
        "Enter the shortest allowed password (e.g., 'Pass123')",
        "Confirm the password",
        "Click on the 'Register' button"
      ],
      "expected_result": "Error message displayed: Password must be at least 8 characters long",
      "test_data": {
        "email": "user@example.com",
        "password": "Pass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR22_280",
      "requirement_id": "FR22",
      "test_type": "integration",
      "test_title": "Create an account and verify email confirmation",
      "preconditions": "User is on the registration page, SMTP server is configured",
      "test_steps": [
        "Enter a valid email address",
        "Enter a strong password",
        "Confirm the password",
        "Click on the 'Register' button",
        "Check the user's inbox for the confirmation email",
        "Click on the confirmation link in the email"
      ],
      "expected_result": "Account creation successful, user is redirected to login page with confirmation message",
      "test_data": {
        "email": "user@example.com",
        "password": "StrongPass123!"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR22_281",
      "requirement_id": "FR22",
      "test_type": "performance",
      "test_title": "Create an account under high load",
      "preconditions": "User is on the registration page, system is under simulated high load",
      "test_steps": [
        "Simulate multiple users attempting to create accounts simultaneously",
        "Observe the system's response time and resource utilization",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "System handles multiple account creations without significant performance degradation",
      "test_data": {
        "users": 100
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR22_282",
      "requirement_id": "FR22",
      "test_type": "security",
      "test_title": "Create an account with a weak password and verify if it's blocked",
      "preconditions": "User is on the registration page, security settings are configured to block weak passwords",
      "test_steps": [
        "Enter a valid email address",
        "Enter a weak password (e.g., 'password123')",
        "Confirm the password",
        "Click on the 'Register' button"
      ],
      "expected_result": "Error message displayed: Password is too weak, please choose a stronger one",
      "test_data": {
        "email": "user@example.com",
        "password": "password123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_283",
      "requirement_id": "FR23",
      "test_type": "positive",
      "test_title": "Valid credentials log-in",
      "preconditions": "Restaurant owner account exists with correct username and password.",
      "test_steps": [
        "Open the restaurant management system.",
        "Enter valid username in the username field.",
        "Enter valid password in the password field.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should successfully log the owner into their account and display the dashboard.",
      "test_data": {
        "username": "owner123",
        "password": "securePass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_284",
      "requirement_id": "FR23",
      "test_type": "negative",
      "test_title": "Incorrect password log-in attempt",
      "preconditions": "Restaurant owner account exists with correct username.",
      "test_steps": [
        "Open the restaurant management system.",
        "Enter valid username in the username field.",
        "Enter incorrect password in the password field.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should display an error message indicating that the password is incorrect and prevent access to the account.",
      "test_data": {
        "username": "owner123",
        "password": "wrongPass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_285",
      "requirement_id": "FR23",
      "test_type": "edge",
      "test_title": "Empty username field",
      "preconditions": "Restaurant owner account exists with correct password.",
      "test_steps": [
        "Open the restaurant management system.",
        "Leave the username field empty.",
        "Enter valid password in the password field.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should display an error message indicating that the username is required and prevent access to the account.",
      "test_data": {
        "username": "",
        "password": "securePass123"
      },
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR23_286",
      "requirement_id": "FR23",
      "test_type": "integration",
      "test_title": "Log-in with third-party authentication provider",
      "preconditions": "Restaurant owner account exists and is linked to a third-party authentication provider (e.g., Google, Facebook).",
      "test_steps": [
        "Open the restaurant management system.",
        "Click on the 'Log In' button.",
        "Select the option to log in with a third-party provider.",
        "Enter valid credentials for the selected provider."
      ],
      "expected_result": "The system should successfully authenticate the owner using the third-party provider and redirect them to their account dashboard.",
      "test_data": {
        "provider": "Google",
        "username": "owner123@gmail.com",
        "password": "securePass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_287",
      "requirement_id": "FR23",
      "test_type": "performance",
      "test_title": "Log-in under high load",
      "preconditions": "Restaurant management system is under heavy load with multiple users attempting to log in simultaneously.",
      "test_steps": [
        "Simulate a large number of concurrent log-in attempts (e.g., 100 users).",
        "Observe the system's response time and stability.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system should handle high levels of concurrency without significant delays or failures in log-in processes.",
      "test_data": {
        "concurrent_users": 100
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_288",
      "requirement_id": "FR23",
      "test_type": "security",
      "test_title": "Log-in with weak password",
      "preconditions": "Restaurant owner account exists with a known weak password.",
      "test_steps": [
        "Open the restaurant management system.",
        "Enter valid username in the username field.",
        "Enter a known weak password in the password field.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should display an error message indicating that the password is too weak and prevent access to the account, possibly requiring a stronger password reset.",
      "test_data": {
        "username": "owner123",
        "password": "weakPass"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_289",
      "requirement_id": "FR23",
      "test_type": "positive",
      "test_title": "Valid credentials log-in",
      "preconditions": "Restaurant owner account exists with correct username and password.",
      "test_steps": [
        "Open the restaurant management system in a web browser.",
        "Enter valid username.",
        "Enter valid password.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should successfully authenticate the user and redirect to the dashboard.",
      "test_data": {
        "username": "owner123",
        "password": "securePass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_290",
      "requirement_id": "FR23",
      "test_type": "negative",
      "test_title": "Incorrect password log-in",
      "preconditions": "Restaurant owner account exists with correct username and an incorrect password.",
      "test_steps": [
        "Open the restaurant management system in a web browser.",
        "Enter valid username.",
        "Enter incorrect password.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should display an error message indicating that the password is incorrect.",
      "test_data": {
        "username": "owner123",
        "password": "wrongPass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_291",
      "requirement_id": "FR23",
      "test_type": "edge",
      "test_title": "Empty username log-in",
      "preconditions": "Restaurant owner account exists with a valid password.",
      "test_steps": [
        "Open the restaurant management system in a web browser.",
        "Leave the username field empty.",
        "Enter valid password.",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should display an error message indicating that the username is required.",
      "test_data": {
        "username": "",
        "password": "securePass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_292",
      "requirement_id": "FR23",
      "test_type": "integration",
      "test_title": "Log-in with external authentication provider",
      "preconditions": "Restaurant owner account exists and is linked to an external authentication provider (e.g., Google, Facebook).",
      "test_steps": [
        "Open the restaurant management system in a web browser.",
        "Click on the 'Log In with Google' or 'Log In with Facebook' button.",
        "Follow the prompts to authenticate using the external provider."
      ],
      "expected_result": "The system should successfully authenticate the user and redirect to the dashboard.",
      "test_data": {
        "provider": "Google"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_293",
      "requirement_id": "FR23",
      "test_type": "performance",
      "test_title": "Log-in under high load",
      "preconditions": "The system is under heavy load with multiple users attempting to log in simultaneously.",
      "test_steps": [
        "Simulate simultaneous log-in attempts from multiple users using a stress testing tool.",
        "Observe the system's response time and stability.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system should handle high load without significant performance degradation or errors.",
      "test_data": {
        "users": 100,
        "concurrency": 20
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR23_294",
      "requirement_id": "FR23",
      "test_type": "security",
      "test_title": "Log-in with weak password",
      "preconditions": "Restaurant owner account exists with a weak password.",
      "test_steps": [
        "Open the restaurant management system in a web browser.",
        "Enter valid username.",
        "Enter weak password (e.g., '123456').",
        "Click on the 'Log In' button."
      ],
      "expected_result": "The system should display an error message indicating that the password is too weak and prompt for a stronger password.",
      "test_data": {
        "username": "owner123",
        "password": "123456"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR24_295",
      "requirement_id": "FR24",
      "test_type": "positive",
      "test_title": "Positive test for Manage information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR24_296",
      "requirement_id": "FR24",
      "test_type": "negative",
      "test_title": "Negative test for Manage information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR24_297",
      "requirement_id": "FR24",
      "test_type": "edge",
      "test_title": "Edge test for Manage information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR24_298",
      "requirement_id": "FR24",
      "test_type": "integration",
      "test_title": "Integration test for Manage information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR24_299",
      "requirement_id": "FR24",
      "test_type": "performance",
      "test_title": "Performance test for Manage information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR24_300",
      "requirement_id": "FR24",
      "test_type": "security",
      "test_title": "Security test for Manage information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR24_301",
      "requirement_id": "FR24",
      "test_type": "positive",
      "test_title": "Add valid location information",
      "preconditions": "User is logged in and on the manage information page.",
      "test_steps": [
        "Click on 'Add Location'",
        "Enter a valid address (e.g., 123 Main St, Anytown, USA)",
        "Select a category (e.g., Restaurant)",
        "Submit the form"
      ],
      "expected_result": "Location information is added successfully and displayed in the list.",
      "test_data": {
        "address": "123 Main St, Anytown, USA",
        "category": "Restaurant"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR24_302",
      "requirement_id": "FR24",
      "test_type": "negative",
      "test_title": "Attempt to add invalid location information",
      "preconditions": "User is logged in and on the manage information page.",
      "test_steps": [
        "Click on 'Add Location'",
        "Enter an invalid address (e.g., 123 Main St, Anytown)",
        "Select a category (e.g., Restaurant)",
        "Submit the form"
      ],
      "expected_result": "Error message is displayed indicating invalid address format.",
      "test_data": {
        "address": "123 Main St, Anytown",
        "category": "Restaurant"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR24_303",
      "requirement_id": "FR24",
      "test_type": "edge",
      "test_title": "Add location with minimum required information",
      "preconditions": "User is logged in and on the manage information page.",
      "test_steps": [
        "Click on 'Add Location'",
        "Enter a valid address (e.g., 123 Main St, Anytown, USA)",
        "Select a category (e.g., Restaurant)",
        "Submit the form"
      ],
      "expected_result": "Location information is added successfully and displayed in the list.",
      "test_data": {
        "address": "123 Main St, Anytown, USA",
        "category": "Restaurant"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR24_304",
      "requirement_id": "FR24",
      "test_type": "integration",
      "test_title": "Integrate with external location API",
      "preconditions": "User is logged in and on the manage information page.",
      "test_steps": [
        "Click on 'Add Location'",
        "Enter a partial address (e.g., Main St, Anytown)",
        "Select a category (e.g., Restaurant)",
        "Submit the form"
      ],
      "expected_result": "External location API is called and returns complete address details.",
      "test_data": {
        "partial_address": "Main St, Anytown",
        "category": "Restaurant"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR24_305",
      "requirement_id": "FR24",
      "test_type": "performance",
      "test_title": "Add multiple locations simultaneously",
      "preconditions": "User is logged in and on the manage information page.",
      "test_steps": [
        "Click on 'Add Location'",
        "Enter multiple addresses (e.g., 123 Main St, Anytown, USA; 456 Elm St, Anytown, USA)",
        "Select categories for each address",
        "Submit all forms simultaneously"
      ],
      "expected_result": "All location information is added successfully within a reasonable time frame.",
      "test_data": {
        "addresses": [
          "123 Main St, Anytown, USA",
          "456 Elm St, Anytown, USA"
        ],
        "categories": [
          "Restaurant",
          "Coffee Shop"
        ]
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR24_306",
      "requirement_id": "FR24",
      "test_type": "security",
      "test_title": "Attempt to add location information with sensitive data",
      "preconditions": "User is logged in and on the manage information page.",
      "test_steps": [
        "Click on 'Add Location'",
        "Enter a valid address (e.g., 123 Main St, Anytown, USA)",
        "Select a category (e.g., Restaurant)",
        "Include sensitive data (e.g., credit card number) in the description",
        "Submit the form"
      ],
      "expected_result": "Error message is displayed indicating that sensitive data cannot be included.",
      "test_data": {
        "address": "123 Main St, Anytown, USA",
        "category": "Restaurant",
        "description": "Credit card number: 1234-5678-9012-3456"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_307",
      "requirement_id": "FR25",
      "test_type": "positive",
      "test_title": "Select preferred language as English",
      "preconditions": "User is logged in as a restaurant owner.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select 'English' from the dropdown menu.",
        "Save the changes."
      ],
      "expected_result": "The web-portal should now display content in English.",
      "test_data": "Preferred language set to English",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_308",
      "requirement_id": "FR25",
      "test_type": "negative",
      "test_title": "Attempt to select an invalid language code",
      "preconditions": "User is logged in as a restaurant owner.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Enter an invalid language code (e.g., 'XYZ') in the input field.",
        "Save the changes."
      ],
      "expected_result": "The system should display an error message and not update the preferred language.",
      "test_data": "Invalid language code: XYZ",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_309",
      "requirement_id": "FR25",
      "test_type": "edge",
      "test_title": "Select the default language (English)",
      "preconditions": "User is logged in as a restaurant owner.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select 'English' from the dropdown menu.",
        "Save the changes."
      ],
      "expected_result": "The web-portal should display content in English, as it is the default language.",
      "test_data": "Preferred language set to default (English)",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_310",
      "requirement_id": "FR25",
      "test_type": "integration",
      "test_title": "Change language and verify other features",
      "preconditions": "User is logged in as a restaurant owner, web-portal is displaying content in English.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select 'Spanish' from the dropdown menu.",
        "Save the changes.",
        "Verify that all features (menu, reviews, etc.) are now displayed in Spanish."
      ],
      "expected_result": "All features should be displayed in the selected language (Spanish).",
      "test_data": "Preferred language set to Spanish",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_311",
      "requirement_id": "FR25",
      "test_type": "performance",
      "test_title": "Change language multiple times and measure load time",
      "preconditions": "User is logged in as a restaurant owner, web-portal is displaying content in English.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select 'French' from the dropdown menu.",
        "Save the changes and measure load time.",
        "Repeat steps 2-4 for languages: German, Italian, Portuguese."
      ],
      "expected_result": "Load time should be within acceptable limits (e.g., less than 3 seconds) for all language changes.",
      "test_data": "Language changes: French, German, Italian, Portuguese",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_312",
      "requirement_id": "FR25",
      "test_type": "security",
      "test_title": "Attempt to change language with invalid credentials",
      "preconditions": "User is logged in as a restaurant owner.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select 'Japanese' from the dropdown menu.",
        "Log out and try to log back in with incorrect credentials.",
        "Attempt to save language change."
      ],
      "expected_result": "The system should prevent saving the language change due to invalid credentials, and display an error message.",
      "test_data": "Invalid login attempt with incorrect credentials",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_313",
      "requirement_id": "FR25",
      "test_type": "positive",
      "test_title": "Selecting English language as preferred",
      "preconditions": "Restaurant owner is logged into the web-portal.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select 'English' from the dropdown menu.",
        "Save the changes."
      ],
      "expected_result": "The preferred language should be updated to English and reflected throughout the web-portal.",
      "test_data": "Preferred language: English",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_314",
      "requirement_id": "FR25",
      "test_type": "negative",
      "test_title": "Attempt to select an invalid language",
      "preconditions": "Restaurant owner is logged into the web-portal.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select a non-existent or invalid language from the dropdown menu.",
        "Save the changes."
      ],
      "expected_result": "The system should display an error message indicating that the selected language is not valid and revert to the previous language setting.",
      "test_data": "Invalid language: 'XYZ'",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_315",
      "requirement_id": "FR25",
      "test_type": "edge",
      "test_title": "Selecting the default language",
      "preconditions": "Restaurant owner is logged into the web-portal.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option.",
        "Select the current default language from the dropdown menu.",
        "Save the changes."
      ],
      "expected_result": "The preferred language should remain unchanged and no changes should be reflected in the web-portal.",
      "test_data": "Current default language",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR25_316",
      "requirement_id": "FR25",
      "test_type": "integration",
      "test_title": "Language selection affects menu items",
      "preconditions": "Restaurant owner is logged into the web-portal and has selected a new language.",
      "test_steps": [
        "Navigate to the 'Menu' page.",
        "Verify that all menu items are displayed in the newly selected language.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "All menu items should be correctly translated and displayed in the selected language.",
      "test_data": "Selected language: Spanish",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_317",
      "requirement_id": "FR25",
      "test_type": "performance",
      "test_title": "Language selection response time",
      "preconditions": "Restaurant owner is logged into the web-portal.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option and select a new language.",
        "Measure the time taken for the changes to be saved and the portal to update."
      ],
      "expected_result": "The response time for saving the language selection and updating the web-portal should be less than 2 seconds.",
      "test_data": "Selected language: French",
      "priority": "High"
    },
    {
      "test_id": "TC_FR25_318",
      "requirement_id": "FR25",
      "test_type": "security",
      "test_title": "Language selection does not expose sensitive information",
      "preconditions": "Restaurant owner is logged into the web-portal and has selected a new language.",
      "test_steps": [
        "Navigate to the 'Settings' page.",
        "Click on the 'Language' option and select a new language.",
        "Verify that no sensitive personal or financial information is exposed."
      ],
      "expected_result": "No sensitive information should be exposed during the language selection process.",
      "test_data": "Selected language: German",
      "priority": "High"
    },
    {
      "test_id": "TC_FR26_319",
      "requirement_id": "FR26",
      "test_type": "positive",
      "test_title": "Valid credentials login",
      "preconditions": "System is up and running, administrator account exists with valid credentials.",
      "test_steps": [
        "Open the Location-based Services application.",
        "Navigate to the 'Admin Login' page.",
        "Enter the correct username and password.",
        "Click on the 'Login' button."
      ],
      "expected_result": "The administrator is successfully logged in and redirected to the admin dashboard.",
      "test_data": {
        "username": "admin",
        "password": "secure123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR26_320",
      "requirement_id": "FR26",
      "test_type": "negative",
      "test_title": "Invalid password login",
      "preconditions": "System is up and running, administrator account exists with valid credentials.",
      "test_steps": [
        "Open the Location-based Services application.",
        "Navigate to the 'Admin Login' page.",
        "Enter the correct username but an incorrect password.",
        "Click on the 'Login' button."
      ],
      "expected_result": "The login attempt fails, and an error message is displayed indicating invalid credentials.",
      "test_data": {
        "username": "admin",
        "password": "wrongpass"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR26_321",
      "requirement_id": "FR26",
      "test_type": "edge",
      "test_title": "Empty username and password login",
      "preconditions": "System is up and running.",
      "test_steps": [
        "Open the Location-based Services application.",
        "Navigate to the 'Admin Login' page.",
        "Leave both the username and password fields empty.",
        "Click on the 'Login' button."
      ],
      "expected_result": "The login attempt fails, and an error message is displayed indicating that both fields are required.",
      "test_data": {
        "username": "",
        "password": ""
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR26_322",
      "requirement_id": "FR26",
      "test_type": "integration",
      "test_title": "Database connectivity during login",
      "preconditions": "System is up and running, database service is active.",
      "test_steps": [
        "Simulate a scenario where the database connection is temporarily lost.",
        "Attempt to log in with valid credentials.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The login attempt fails due to the database connectivity issue, and an error message is displayed indicating that the system cannot connect to the database.",
      "test_data": {
        "username": "admin",
        "password": "secure123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR26_323",
      "requirement_id": "FR26",
      "test_type": "performance",
      "test_title": "Login under heavy load",
      "preconditions": "System is up and running, multiple users are logged in simultaneously.",
      "test_steps": [
        "Simulate a scenario where the system experiences high traffic.",
        "Attempt to log in with valid credentials.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The login attempt completes within an acceptable time frame (e.g., less than 5 seconds), and no errors are reported.",
      "test_data": {
        "username": "admin",
        "password": "secure123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR26_324",
      "requirement_id": "FR26",
      "test_type": "security",
      "test_title": "Login with session hijacking attempt",
      "preconditions": "System is up and running, administrator account exists with valid credentials.",
      "test_steps": [
        "Log in to the Location-based Services application as an administrator.",
        "Simulate a scenario where another user tries to log in using the same session ID.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The second login attempt fails due to session hijacking prevention measures, and an error message is displayed indicating that the session has been invalidated.",
      "test_data": {
        "username": "admin",
        "password": "secure123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR27_325",
      "requirement_id": "FR27",
      "test_type": "positive",
      "test_title": "Positive test for Verify restaurant owner",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Verify restaurant owner",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to allow a restaurant owner to use the system",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR27_326",
      "requirement_id": "FR27",
      "test_type": "negative",
      "test_title": "Negative test for Verify restaurant owner",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Verify restaurant owner",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to allow a restaurant owner to use the system",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR27_327",
      "requirement_id": "FR27",
      "test_type": "edge",
      "test_title": "Edge test for Verify restaurant owner",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Verify restaurant owner",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to allow a restaurant owner to use the system",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR27_328",
      "requirement_id": "FR27",
      "test_type": "integration",
      "test_title": "Integration test for Verify restaurant owner",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Verify restaurant owner",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to allow a restaurant owner to use the system",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR27_329",
      "requirement_id": "FR27",
      "test_type": "performance",
      "test_title": "Performance test for Verify restaurant owner",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Verify restaurant owner",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to allow a restaurant owner to use the system",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR27_330",
      "requirement_id": "FR27",
      "test_type": "security",
      "test_title": "Security test for Verify restaurant owner",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Verify restaurant owner",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to allow a restaurant owner to use the system",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR27_331",
      "requirement_id": "FR27",
      "test_type": "positive",
      "test_title": "Verify restaurant owner with valid credentials",
      "preconditions": "Restaurant owner account exists with correct email and password.",
      "test_steps": [
        "Log in to the system using a web browser.",
        "Enter the registered email address of the restaurant owner.",
        "Enter the correct password for the restaurant owner's account.",
        "Click on the 'Login' button."
      ],
      "expected_result": "The restaurant owner should be successfully logged into the system and redirected to the dashboard.",
      "test_data": {
        "email": "owner@example.com",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR27_332",
      "requirement_id": "FR27",
      "test_type": "negative",
      "test_title": "Verify restaurant owner with incorrect password",
      "preconditions": "Restaurant owner account exists with correct email and password.",
      "test_steps": [
        "Log in to the system using a web browser.",
        "Enter the registered email address of the restaurant owner.",
        "Enter an incorrect password for the restaurant owner's account.",
        "Click on the 'Login' button."
      ],
      "expected_result": "The login should fail, and an error message should be displayed indicating that the password is incorrect.",
      "test_data": {
        "email": "owner@example.com",
        "password": "IncorrectPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR27_333",
      "requirement_id": "FR27",
      "test_type": "edge",
      "test_title": "Verify restaurant owner with empty email field",
      "preconditions": "Restaurant owner account exists with correct email and password.",
      "test_steps": [
        "Log in to the system using a web browser.",
        "Leave the email address field empty.",
        "Enter the correct password for the restaurant owner's account.",
        "Click on the 'Login' button."
      ],
      "expected_result": "The login should fail, and an error message should be displayed indicating that the email address is required.",
      "test_data": {
        "email": "",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR27_334",
      "requirement_id": "FR27",
      "test_type": "integration",
      "test_title": "Verify restaurant owner with external authentication system",
      "preconditions": "Restaurant owner account exists in an external authentication system (e.g., Google, Facebook).",
      "test_steps": [
        "Log in to the system using a web browser.",
        "Select 'Login with Google' or 'Login with Facebook' option.",
        "Enter the registered email address and password of the restaurant owner on the external authentication system.",
        "Click on the 'Sign in' button."
      ],
      "expected_result": "The restaurant owner should be successfully logged into the system using the credentials from the external authentication system, and redirected to the dashboard.",
      "test_data": {
        "email": "owner@example.com",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR27_335",
      "requirement_id": "FR27",
      "test_type": "performance",
      "test_title": "Verify restaurant owner login under high load",
      "preconditions": "The system is under heavy load with multiple users attempting to log in simultaneously.",
      "test_steps": [
        "Simulate a large number of concurrent users logging in using the system.",
        "Ensure that the restaurant owner's login request is processed within an acceptable time frame (e.g., less than 5 seconds).",
        "Verify that there are no errors or timeouts during the login process."
      ],
      "expected_result": "The restaurant owner should be able to log into the system without any issues, and the system should handle the high load efficiently.",
      "test_data": {
        "email": "owner@example.com",
        "password": "ValidPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR27_336",
      "requirement_id": "FR27",
      "test_type": "security",
      "test_title": "Verify restaurant owner login with two-factor authentication enabled",
      "preconditions": "Restaurant owner account has two-factor authentication (2FA) enabled.",
      "test_steps": [
        "Log in to the system using a web browser.",
        "Enter the registered email address of the restaurant owner.",
        "Enter the correct password for the restaurant owner's account.",
        "Click on the 'Login' button.",
        "Enter the 6-digit code received via SMS or authenticator app."
      ],
      "expected_result": "The restaurant owner should be successfully logged into the system after entering the 2FA code, and redirected to the dashboard.",
      "test_data": {
        "email": "owner@example.com",
        "password": "ValidPassword123",
        "two_factor_code": "123456"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR28_337",
      "requirement_id": "FR28",
      "test_type": "positive",
      "test_title": "Add a new restaurant type successfully",
      "preconditions": "User is logged in with admin privileges.",
      "test_steps": [
        "Navigate to the 'Manage Restaurant Types' page.",
        "Click on the 'Add New Type' button.",
        "Enter a valid restaurant type name, e.g., 'Italian'.",
        "Click on the 'Save' button."
      ],
      "expected_result": "The new restaurant type is added successfully and displayed in the list.",
      "test_data": {
        "restaurant_type_name": "Italian"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR28_338",
      "requirement_id": "FR28",
      "test_type": "negative",
      "test_title": "Attempt to add an existing restaurant type",
      "preconditions": "User is logged in with admin privileges and 'Italian' type already exists.",
      "test_steps": [
        "Navigate to the 'Manage Restaurant Types' page.",
        "Click on the 'Add New Type' button.",
        "Enter 'Italian' as the restaurant type name.",
        "Click on the 'Save' button."
      ],
      "expected_result": "An error message is displayed indicating that the type already exists.",
      "test_data": {
        "restaurant_type_name": "Italian"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR28_339",
      "requirement_id": "FR28",
      "test_type": "edge",
      "test_title": "Add an empty restaurant type name",
      "preconditions": "User is logged in with admin privileges.",
      "test_steps": [
        "Navigate to the 'Manage Restaurant Types' page.",
        "Click on the 'Add New Type' button.",
        "Leave the restaurant type name field empty.",
        "Click on the 'Save' button."
      ],
      "expected_result": "An error message is displayed indicating that the type name cannot be empty.",
      "test_data": {
        "restaurant_type_name": ""
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR28_340",
      "requirement_id": "FR28",
      "test_type": "integration",
      "test_title": "Add a new restaurant type and verify it in the restaurant list",
      "preconditions": "User is logged in with admin privileges.",
      "test_steps": [
        "Navigate to the 'Manage Restaurant Types' page.",
        "Click on the 'Add New Type' button.",
        "Enter a valid restaurant type name, e.g., 'Japanese'.",
        "Click on the 'Save' button.",
        "Navigate to the 'Restaurant List' page."
      ],
      "expected_result": "The new restaurant type 'Japanese' is displayed in the list of restaurants.",
      "test_data": {
        "restaurant_type_name": "Japanese"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR28_341",
      "requirement_id": "FR28",
      "test_type": "performance",
      "test_title": "Add multiple restaurant types simultaneously",
      "preconditions": "User is logged in with admin privileges and the system can handle concurrent requests.",
      "test_steps": [
        "Navigate to the 'Manage Restaurant Types' page.",
        "Click on the 'Add New Type' button three times.",
        "Enter unique restaurant type names, e.g., 'Chinese', 'Mexican', 'Thai'.",
        "Click on the 'Save' button for each entry."
      ],
      "expected_result": "All new restaurant types are added successfully and displayed in the list within a reasonable time frame.",
      "test_data": {
        "restaurant_type_names": [
          "Chinese",
          "Mexican",
          "Thai"
        ]
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR28_342",
      "requirement_id": "FR28",
      "test_type": "security",
      "test_title": "Attempt to add a restaurant type with special characters",
      "preconditions": "User is logged in with admin privileges.",
      "test_steps": [
        "Navigate to the 'Manage Restaurant Types' page.",
        "Click on the 'Add New Type' button.",
        "Enter a restaurant type name with special characters, e.g., 'Italian!@#'.",
        "Click on the 'Save' button."
      ],
      "expected_result": "An error message is displayed indicating that the type name contains invalid characters.",
      "test_data": {
        "restaurant_type_name": "Italian!@#"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_343",
      "requirement_id": "FR29",
      "test_type": "positive",
      "test_title": "Add a new dish to the menu",
      "preconditions": "Restaurant management system is up and running.",
      "test_steps": [
        "Log in as a restaurant manager.",
        "Navigate to the 'Dishes' section.",
        "Click on 'Add New Dish'.",
        "Enter dish details (name, description, price, ingredients).",
        "Upload a dish image."
      ],
      "expected_result": "The new dish is successfully added to the menu and visible in the list of dishes.",
      "test_data": {
        "dish_name": "Margherita Pizza",
        "description": "Classic Italian pizza with tomato sauce, mozzarella cheese, and basil.",
        "price": 12.99,
        "ingredients": [
          "Tomato sauce",
          "Mozzarella cheese",
          "Basil"
        ],
        "image_path": "/path/to/margherita_pizza.jpg"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_344",
      "requirement_id": "FR29",
      "test_type": "negative",
      "test_title": "Attempt to add a dish with missing required fields",
      "preconditions": "Restaurant management system is up and running.",
      "test_steps": [
        "Log in as a restaurant manager.",
        "Navigate to the 'Dishes' section.",
        "Click on 'Add New Dish'.",
        "Enter only the name of the dish.",
        "Leave other fields empty."
      ],
      "expected_result": "The system displays an error message indicating that required fields are missing.",
      "test_data": {
        "dish_name": "Invalid Dish"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_345",
      "requirement_id": "FR29",
      "test_type": "edge",
      "test_title": "Add a dish with the maximum allowed price",
      "preconditions": "Restaurant management system is up and running.",
      "test_steps": [
        "Log in as a restaurant manager.",
        "Navigate to the 'Dishes' section.",
        "Click on 'Add New Dish'.",
        "Enter dish details including the maximum allowed price."
      ],
      "expected_result": "The new dish is successfully added with the specified price, and no error message is displayed.",
      "test_data": {
        "dish_name": "Luxury Dish",
        "description": "A premium dish with high cost ingredients.",
        "price": 100.0,
        "ingredients": [
          "Premium ingredients"
        ],
        "image_path": "/path/to/luxury_dish.jpg"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_346",
      "requirement_id": "FR29",
      "test_type": "integration",
      "test_title": "Verify dish addition affects the order system",
      "preconditions": "Restaurant management system and order processing system are integrated.",
      "test_steps": [
        "Log in as a restaurant manager and add a new dish.",
        "Place an order for the newly added dish through the order system.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The order is successfully processed, and the newly added dish appears in the order details.",
      "test_data": {
        "dish_name": "Newly Added Dish",
        "order_details": {
          "customer_name": "John Doe",
          "table_number": 10,
          "items": [
            "Newly Added Dish"
          ]
        }
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_347",
      "requirement_id": "FR29",
      "test_type": "performance",
      "test_title": "Add multiple dishes simultaneously under high load",
      "preconditions": "Restaurant management system is up and running with a simulated high number of concurrent users.",
      "test_steps": [
        "Simulate multiple users logging in as restaurant managers.",
        "Each user adds a new dish simultaneously.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "All dishes are successfully added within the expected time frame, and no errors occur.",
      "test_data": {
        "number_of_users": 10,
        "dishes_per_user": 5
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_348",
      "requirement_id": "FR29",
      "test_type": "security",
      "test_title": "Attempt to add a dish without proper authentication",
      "preconditions": "Restaurant management system is up and running.",
      "test_steps": [
        "Try to access the 'Dishes' section without logging in.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system redirects to the login page, and no dish can be added.",
      "test_data": {},
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_349",
      "requirement_id": "FR29",
      "test_type": "positive",
      "test_title": "Add a new dish to the menu",
      "preconditions": "User is logged in as a restaurant manager.",
      "test_steps": [
        "Navigate to the 'Dishes' section of the dashboard.",
        "Click on the 'Add New Dish' button.",
        "Enter the dish name, description, price, and upload an image.",
        "Click 'Save' to add the dish."
      ],
      "expected_result": "The new dish should be added to the menu list with all details correctly displayed.",
      "test_data": {
        "dish_name": "Margherita Pizza",
        "description": "Classic Italian pizza with tomato sauce, mozzarella cheese, and basil leaves.",
        "price": 12.99,
        "image_path": "/path/to/pizza_image.jpg"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_350",
      "requirement_id": "FR29",
      "test_type": "negative",
      "test_title": "Attempt to add a dish with missing details",
      "preconditions": "User is logged in as a restaurant manager.",
      "test_steps": [
        "Navigate to the 'Dishes' section of the dashboard.",
        "Click on the 'Add New Dish' button.",
        "Enter only the dish name and price, leave description and image empty.",
        "Click 'Save' to add the dish."
      ],
      "expected_result": "The system should display an error message indicating that all required fields must be filled out.",
      "test_data": {
        "dish_name": "Margherita Pizza",
        "description": "",
        "price": 12.99,
        "image_path": ""
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_351",
      "requirement_id": "FR29",
      "test_type": "edge",
      "test_title": "Add a dish with the minimum price allowed",
      "preconditions": "User is logged in as a restaurant manager.",
      "test_steps": [
        "Navigate to the 'Dishes' section of the dashboard.",
        "Click on the 'Add New Dish' button.",
        "Enter the dish name, description, and set the price to the minimum allowed value (e.g., $0.01).",
        "Upload an image for the dish.",
        "Click 'Save' to add the dish."
      ],
      "expected_result": "The new dish should be added to the menu list with all details correctly displayed, including the minimum price.",
      "test_data": {
        "dish_name": "Min Price Dish",
        "description": "A dish with the minimum allowed price.",
        "price": 0.01,
        "image_path": "/path/to/min_price_dish_image.jpg"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_352",
      "requirement_id": "FR29",
      "test_type": "integration",
      "test_title": "Add a dish and verify it appears in the restaurant's online menu",
      "preconditions": "User is logged in as a restaurant manager, and the restaurant has an active online presence.",
      "test_steps": [
        "Navigate to the 'Dishes' section of the dashboard.",
        "Click on the 'Add New Dish' button.",
        "Enter all required details for the dish.",
        "Upload an image for the dish.",
        "Click 'Save' to add the dish.",
        "Log in to the restaurant's online menu platform and navigate to the dishes section."
      ],
      "expected_result": "The newly added dish should be visible on the restaurant's online menu with all details correctly displayed.",
      "test_data": {
        "dish_name": "Online Menu Dish",
        "description": "A dish available on the restaurant's online menu.",
        "price": 15.99,
        "image_path": "/path/to/online_menu_dish_image.jpg"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_353",
      "requirement_id": "FR29",
      "test_type": "performance",
      "test_title": "Add multiple dishes simultaneously to the menu",
      "preconditions": "User is logged in as a restaurant manager.",
      "test_steps": [
        "Navigate to the 'Dishes' section of the dashboard.",
        "Click on the 'Add New Dish' button three times to open multiple forms simultaneously.",
        "Enter details for each dish (e.g., name, description, price, image) in all three forms.",
        "Click 'Save' for each form."
      ],
      "expected_result": "All three dishes should be added to the menu list with all details correctly displayed within a reasonable time frame.",
      "test_data": [
        {
          "dish_name": "Dish 1",
          "description": "Description of Dish 1",
          "price": 10.99,
          "image_path": "/path/to/dish_1_image.jpg"
        },
        {
          "dish_name": "Dish 2",
          "description": "Description of Dish 2",
          "price": 12.99,
          "image_path": "/path/to/dish_2_image.jpg"
        },
        {
          "dish_name": "Dish 3",
          "description": "Description of Dish 3",
          "price": 14.99,
          "image_path": "/path/to/dish_3_image.jpg"
        }
      ],
      "priority": "High"
    },
    {
      "test_id": "TC_FR29_354",
      "requirement_id": "FR29",
      "test_type": "security",
      "test_title": "Attempt to add a dish using an unauthorized account",
      "preconditions": "User is logged in as a non-restaurant manager.",
      "test_steps": [
        "Navigate to the 'Dishes' section of the dashboard.",
        "Click on the 'Add New Dish' button.",
        "Enter all required details for the dish.",
        "Upload an image for the dish.",
        "Click 'Save' to add the dish."
      ],
      "expected_result": "The system should display an error message indicating that the user does not have permission to perform this action.",
      "test_data": {
        "dish_name": "Unauthorized Dish",
        "description": "A dish added by an unauthorized user.",
        "price": 16.99,
        "image_path": "/path/to/unauthorized_dish_image.jpg"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR30_355",
      "requirement_id": "FR30",
      "test_type": "positive",
      "test_title": "Positive test for Manage restaurant information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage restaurant information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR30_356",
      "requirement_id": "FR30",
      "test_type": "negative",
      "test_title": "Negative test for Manage restaurant information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage restaurant information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR30_357",
      "requirement_id": "FR30",
      "test_type": "edge",
      "test_title": "Edge test for Manage restaurant information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage restaurant information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR30_358",
      "requirement_id": "FR30",
      "test_type": "integration",
      "test_title": "Integration test for Manage restaurant information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage restaurant information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR30_359",
      "requirement_id": "FR30",
      "test_type": "performance",
      "test_title": "Performance test for Manage restaurant information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage restaurant information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR30_360",
      "requirement_id": "FR30",
      "test_type": "security",
      "test_title": "Security test for Manage restaurant information",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant information",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to manage restaurant information",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_361",
      "requirement_id": "FR31",
      "test_type": "positive",
      "test_title": "Positive test for Manage users",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage users",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the users",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_362",
      "requirement_id": "FR31",
      "test_type": "negative",
      "test_title": "Negative test for Manage users",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage users",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the users",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_363",
      "requirement_id": "FR31",
      "test_type": "edge",
      "test_title": "Edge test for Manage users",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage users",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the users",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_364",
      "requirement_id": "FR31",
      "test_type": "integration",
      "test_title": "Integration test for Manage users",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage users",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the users",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_365",
      "requirement_id": "FR31",
      "test_type": "performance",
      "test_title": "Performance test for Manage users",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage users",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the users",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_366",
      "requirement_id": "FR31",
      "test_type": "security",
      "test_title": "Security test for Manage users",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage users",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the users",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR31_367",
      "requirement_id": "FR31",
      "test_type": "positive",
      "test_title": "Add a new user successfully",
      "preconditions": "The system is up and running.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Users' management page.",
        "Click on the 'Add User' button.",
        "Enter valid user details (username, email, password).",
        "Submit the form."
      ],
      "expected_result": "The new user should be added successfully and appear in the users list.",
      "test_data": {
        "username": "newuser123",
        "email": "newuser@example.com",
        "password": "P@ssw0rd123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR31_368",
      "requirement_id": "FR31",
      "test_type": "negative",
      "test_title": "Attempt to add a user with an existing username",
      "preconditions": "The system is up and running.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Users' management page.",
        "Click on the 'Add User' button.",
        "Enter an existing username.",
        "Submit the form."
      ],
      "expected_result": "An error message should be displayed indicating that the username already exists.",
      "test_data": {
        "username": "existinguser",
        "email": "newemail@example.com",
        "password": "NewPass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR31_369",
      "requirement_id": "FR31",
      "test_type": "edge",
      "test_title": "Add a user with the minimum required details",
      "preconditions": "The system is up and running.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Users' management page.",
        "Click on the 'Add User' button.",
        "Enter only the minimum required details (username, email).",
        "Submit the form."
      ],
      "expected_result": "The new user should be added successfully with the provided details.",
      "test_data": {
        "username": "minuser",
        "email": "minuser@example.com"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR31_370",
      "requirement_id": "FR31",
      "test_type": "integration",
      "test_title": "Verify user creation affects location-based services",
      "preconditions": "The system is up and running.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Users' management page.",
        "Click on the 'Add User' button.",
        "Enter valid user details (username, email, password).",
        "Submit the form.",
        "Check if the new user appears in location-based services."
      ],
      "expected_result": "The new user should be reflected in location-based services and able to access relevant features.",
      "test_data": {
        "username": "serviceuser123",
        "email": "serviceuser@example.com",
        "password": "ServicePass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR31_371",
      "requirement_id": "FR31",
      "test_type": "performance",
      "test_title": "Add multiple users simultaneously to test system performance",
      "preconditions": "The system is up and running.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Users' management page.",
        "Click on the 'Add User' button.",
        "Enter details for 10 new users (username, email, password).",
        "Submit all forms simultaneously."
      ],
      "expected_result": "All 10 new users should be added successfully within a reasonable time frame.",
      "test_data": [
        {
          "username": "user1",
          "email": "user1@example.com",
          "password": "UserPass123"
        },
        {
          "username": "user2",
          "email": "user2@example.com",
          "password": "UserPass456"
        },
        {
          "username": "user3",
          "email": "user3@example.com",
          "password": "UserPass789"
        },
        {
          "username": "user4",
          "email": "user4@example.com",
          "password": "UserPass101"
        },
        {
          "username": "user5",
          "email": "user5@example.com",
          "password": "UserPass121"
        },
        {
          "username": "user6",
          "email": "user6@example.com",
          "password": "UserPass141"
        },
        {
          "username": "user7",
          "email": "user7@example.com",
          "password": "UserPass161"
        },
        {
          "username": "user8",
          "email": "user8@example.com",
          "password": "UserPass181"
        },
        {
          "username": "user9",
          "email": "user9@example.com",
          "password": "UserPass201"
        },
        {
          "username": "user10",
          "email": "user10@example.com",
          "password": "UserPass221"
        }
      ],
      "priority": "High"
    },
    {
      "test_id": "TC_FR31_372",
      "requirement_id": "FR31",
      "test_type": "security",
      "test_title": "Ensure user passwords are hashed and not stored in plain text",
      "preconditions": "The system is up and running.",
      "test_steps": [
        "Log in as an administrator.",
        "Navigate to the 'Users' management page.",
        "Click on the 'Add User' button.",
        "Enter a new user with a known password (e.g., 'password123').",
        "Submit the form."
      ],
      "expected_result": "The system should hash the password before storing it in the database, and not store it in plain text.",
      "test_data": {
        "username": "secureuser",
        "email": "secureuser@example.com",
        "password": "password123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_FR32_373",
      "requirement_id": "FR32",
      "test_type": "positive",
      "test_title": "Positive test for Manage restaurant owners",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant owners",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the restaurant owners",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR32_374",
      "requirement_id": "FR32",
      "test_type": "negative",
      "test_title": "Negative test for Manage restaurant owners",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant owners",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the restaurant owners",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR32_375",
      "requirement_id": "FR32",
      "test_type": "edge",
      "test_title": "Edge test for Manage restaurant owners",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant owners",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the restaurant owners",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR32_376",
      "requirement_id": "FR32",
      "test_type": "integration",
      "test_title": "Integration test for Manage restaurant owners",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant owners",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the restaurant owners",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR32_377",
      "requirement_id": "FR32",
      "test_type": "performance",
      "test_title": "Performance test for Manage restaurant owners",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant owners",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the restaurant owners",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR32_378",
      "requirement_id": "FR32",
      "test_type": "security",
      "test_title": "Security test for Manage restaurant owners",
      "preconditions": "Application ready, user logged in",
      "test_steps": [
        "Navigate to Manage restaurant owners",
        "Execute test action",
        "Input test data",
        "Verify result"
      ],
      "expected_result": "In order to keep track of the restaurant owners",
      "test_data": "test_input",
      "priority": "Medium"
    },
    {
      "test_id": "TC_FR33_379",
      "requirement_id": "FR33",
      "test_type": "positive",
      "test_title": "Verify language selection updates portal interface",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "Navigate to the settings page from the admin dashboard.",
        "Select 'Preferred Language' option.",
        "Choose Spanish from the available languages list.",
        "Click on 'Save Changes'.",
        "Verify that the portal interface updates to Spanish."
      ],
      "expected_result": "The web-portal should display all text in Spanish after saving the language preference.",
      "test_data": "Language: Spanish",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_380",
      "requirement_id": "FR33",
      "test_type": "negative",
      "test_title": "Attempt to select an invalid language option",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "Navigate to the settings page from the admin dashboard.",
        "Select 'Preferred Language' option.",
        "Choose 'InvalidLanguage' from the available languages list.",
        "Click on 'Save Changes'.",
        "Verify if an error message appears."
      ],
      "expected_result": "An error message should be displayed indicating that the selected language is invalid.",
      "test_data": "Language: InvalidLanguage",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_381",
      "requirement_id": "FR33",
      "test_type": "edge",
      "test_title": "Selecting default language (English)",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "Navigate to the settings page from the admin dashboard.",
        "Select 'Preferred Language' option.",
        "Choose 'English' from the available languages list.",
        "Click on 'Save Changes'.",
        "Verify that the portal interface remains in English."
      ],
      "expected_result": "The web-portal should continue displaying all text in English after saving the language preference.",
      "test_data": "Language: English",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_382",
      "requirement_id": "FR33",
      "test_type": "integration",
      "test_title": "Verify language selection affects other services",
      "preconditions": "Admin logged into the web-portal, English is set as default language. Other services (e.g., email notifications) are enabled.",
      "test_steps": [
        "Navigate to the settings page from the admin dashboard.",
        "Select 'Preferred Language' option.",
        "Choose Spanish from the available languages list.",
        "Click on 'Save Changes'.",
        "Trigger an email notification service.",
        "Verify that the email is sent in Spanish."
      ],
      "expected_result": "The email notification should be sent in Spanish after saving the language preference.",
      "test_data": "Language: Spanish",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_383",
      "requirement_id": "FR33",
      "test_type": "performance",
      "test_title": "Selecting a new language under heavy load",
      "preconditions": "Admin logged into the web-portal, English is set as default language. High traffic on the portal.",
      "test_steps": [
        "Simulate high traffic by opening multiple browser instances.",
        "Navigate to the settings page from each instance.",
        "Select 'Preferred Language' option and choose Spanish.",
        "Click on 'Save Changes' in all instances simultaneously.",
        "Monitor the performance of the web-portal."
      ],
      "expected_result": "The web-portal should handle multiple language selections without significant performance degradation.",
      "test_data": "Language: Spanish",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_384",
      "requirement_id": "FR33",
      "test_type": "security",
      "test_title": "Verify language selection is not vulnerable to injection attacks",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "Navigate to the settings page from the admin dashboard.",
        "Select 'Preferred Language' option.",
        "Enter '<script>alert('XSS')</script>' in the language selection field.",
        "Click on 'Save Changes'.",
        "Verify that no script execution occurs."
      ],
      "expected_result": "No script should execute, and an error message should be displayed indicating invalid input.",
      "test_data": "Language: <script>alert('XSS')</script>",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_385",
      "requirement_id": "FR33",
      "test_type": "positive",
      "test_title": "Verify language selection updates portal content",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "1. Navigate to the 'Settings' page.",
        "2. Select 'Language' from the dropdown menu.",
        "3. Choose 'Spanish' and click 'Save'.",
        "4. Verify that all portal content updates to Spanish."
      ],
      "expected_result": "All portal content should be displayed in Spanish.",
      "test_data": "English as default, Spanish as selected language.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_386",
      "requirement_id": "FR33",
      "test_type": "negative",
      "test_title": "Attempt to select an invalid language option",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "1. Navigate to the 'Settings' page.",
        "2. Select 'Language' from the dropdown menu.",
        "3. Attempt to select a non-existent language option (e.g., 'XYZ').",
        "4. Click 'Save'."
      ],
      "expected_result": "An error message should be displayed indicating that the selected language is invalid.",
      "test_data": "English as default, non-existent language option.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_387",
      "requirement_id": "FR33",
      "test_type": "edge",
      "test_title": "Selecting the same language multiple times",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "1. Navigate to the 'Settings' page.",
        "2. Select 'Language' from the dropdown menu.",
        "3. Choose 'English' and click 'Save'.",
        "4. Repeat steps 2-3."
      ],
      "expected_result": "The portal content should remain in English, no changes should be applied.",
      "test_data": "English as default, English as selected language.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_388",
      "requirement_id": "FR33",
      "test_type": "integration",
      "test_title": "Verify language selection affects user interface components",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "1. Navigate to the 'Settings' page.",
        "2. Select 'Language' from the dropdown menu.",
        "3. Choose 'French' and click 'Save'.",
        "4. Verify that all user interface components (e.g., buttons, labels) update to French."
      ],
      "expected_result": "All user interface components should be displayed in French.",
      "test_data": "English as default, French as selected language.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_389",
      "requirement_id": "FR33",
      "test_type": "performance",
      "test_title": "Measure the time taken to update language settings",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "1. Navigate to the 'Settings' page.",
        "2. Select 'Language' from the dropdown menu.",
        "3. Choose a new language and click 'Save'.",
        "4. Record the time taken for the update."
      ],
      "expected_result": "The time taken for updating the language settings should be less than 5 seconds.",
      "test_data": "English as default, various languages.",
      "priority": "High"
    },
    {
      "test_id": "TC_FR33_390",
      "requirement_id": "FR33",
      "test_type": "security",
      "test_title": "Verify that language selection is not affected by XSS attacks",
      "preconditions": "Admin logged into the web-portal, English is set as default language.",
      "test_steps": [
        "1. Navigate to the 'Settings' page.",
        "2. Select 'Language' from the dropdown menu.",
        "3. Attempt to inject an XSS payload (e.g., <script>alert('XSS')</script>) into the language selection field.",
        "4. Click 'Save'."
      ],
      "expected_result": "The portal should not execute any scripts and the language selection should fail.",
      "test_data": "English as default, malicious XSS payload.",
      "priority": "High"
    },
    {
      "test_id": "TC_QR10_391",
      "requirement_id": "QR10",
      "test_type": "positive",
      "test_title": "Check available hard drive space on a device",
      "preconditions": "A device with sufficient storage capacity is connected to the system.",
      "test_steps": [
        "Connect the device to the system.",
        "Open the file management application.",
        "Navigate to the 'Storage' or 'Disk Usage' section.",
        "Verify that the available space is displayed correctly."
      ],
      "expected_result": "The available hard drive space should be accurately displayed on the device.",
      "test_data": "Device with 100GB storage, 50GB used",
      "priority": "High"
    },
    {
      "test_id": "TC_QR10_392",
      "requirement_id": "QR10",
      "test_type": "negative",
      "test_title": "Attempt to store a file larger than available space",
      "preconditions": "A device with insufficient storage capacity is connected to the system.",
      "test_steps": [
        "Connect the device to the system.",
        "Open the file management application.",
        "Navigate to the 'Storage' or 'Disk Usage' section.",
        "Attempt to download a file larger than the available space."
      ],
      "expected_result": "The system should display an error message indicating insufficient storage space.",
      "test_data": "Device with 10GB storage, 9.5GB used",
      "priority": "High"
    },
    {
      "test_id": "TC_QR10_393",
      "requirement_id": "QR10",
      "test_type": "edge",
      "test_title": "Check hard drive space on a device with minimal free space",
      "preconditions": "A device with very little free storage capacity is connected to the system.",
      "test_steps": [
        "Connect the device to the system.",
        "Open the file management application.",
        "Navigate to the 'Storage' or 'Disk Usage' section.",
        "Verify that the available space is displayed correctly."
      ],
      "expected_result": "The available hard drive space should be accurately displayed on the device, showing a very low value.",
      "test_data": "Device with 1GB storage, 0.5GB used",
      "priority": "High"
    },
    {
      "test_id": "TC_QR10_394",
      "requirement_id": "QR10",
      "test_type": "integration",
      "test_title": "Check hard drive space across multiple devices in a network",
      "preconditions": "Multiple devices are connected to the same network.",
      "test_steps": [
        "Connect all devices to the network.",
        "Open the file management application on each device.",
        "Navigate to the 'Storage' or 'Disk Usage' section on each device.",
        "Verify that the available space is displayed correctly across all devices."
      ],
      "expected_result": "The available hard drive space should be accurately displayed on each device in the network.",
      "test_data": "Network with 3 devices, total storage 150GB, used 75GB",
      "priority": "High"
    },
    {
      "test_id": "TC_QR10_395",
      "requirement_id": "QR10",
      "test_type": "performance",
      "test_title": "Check hard drive space performance under heavy load",
      "preconditions": "A device is connected to the system and running a heavy workload.",
      "test_steps": [
        "Connect the device to the system.",
        "Open the file management application.",
        "Navigate to the 'Storage' or 'Disk Usage' section.",
        "Simulate a heavy workload by performing multiple file operations simultaneously.",
        "Verify that the available hard drive space is updated in real-time."
      ],
      "expected_result": "The available hard drive space should be accurately updated in real-time even under heavy load.",
      "test_data": "Device with 50GB storage, 40GB used during heavy workload",
      "priority": "High"
    },
    {
      "test_id": "TC_QR10_396",
      "requirement_id": "QR10",
      "test_type": "security",
      "test_title": "Check hard drive space access restrictions for unauthorized users",
      "preconditions": "A device is connected to the system and multiple user accounts are created.",
      "test_steps": [
        "Connect the device to the system.",
        "Create multiple user accounts with varying levels of permissions.",
        "Switch to an unauthorized user account.",
        "Open the file management application.",
        "Navigate to the 'Storage' or 'Disk Usage' section."
      ],
      "expected_result": "The unauthorized user should not be able to access the hard drive space information.",
      "test_data": "Device with 100GB storage, multiple user accounts",
      "priority": "High"
    },
    {
      "test_id": "TC_QR11_397",
      "requirement_id": "QR11",
      "test_type": "positive",
      "test_title": "Verify application runs with minimum required memory",
      "preconditions": "Application is installed on a device with at least 1GB of RAM.",
      "test_steps": [
        "Open the application.",
        "Monitor system memory usage during operation.",
        "Ensure no other applications are running to minimize interference."
      ],
      "expected_result": "The application should run without crashing and consume less than 500MB of memory.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR11_398",
      "requirement_id": "QR11",
      "test_type": "negative",
      "test_title": "Application crashes when memory is insufficient",
      "preconditions": "Application is installed on a device with only 256MB of RAM.",
      "test_steps": [
        "Open the application.",
        "Monitor system memory usage during operation.",
        "Ensure no other applications are running to minimize interference."
      ],
      "expected_result": "The application should crash due to insufficient memory.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR11_399",
      "requirement_id": "QR11",
      "test_type": "edge",
      "test_title": "Application performance with maximum available memory",
      "preconditions": "Application is installed on a device with 16GB of RAM.",
      "test_steps": [
        "Open the application.",
        "Monitor system memory usage during operation.",
        "Perform intensive tasks within the application."
      ],
      "expected_result": "The application should run smoothly without any performance degradation and consume less than 80% of available memory.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR11_400",
      "requirement_id": "QR11",
      "test_type": "integration",
      "test_title": "Verify memory usage when multiple applications are running simultaneously",
      "preconditions": "Application is installed on a device with at least 4GB of RAM. Other applications like web browser and media player are open.",
      "test_steps": [
        "Open the application.",
        "Monitor system memory usage during operation.",
        "Ensure no other applications are closed to maintain consistency."
      ],
      "expected_result": "The application should run without crashing and consume less than 70% of total available memory.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR11_401",
      "requirement_id": "QR11",
      "test_type": "performance",
      "test_title": "Measure memory usage during high load operations",
      "preconditions": "Application is installed on a device with at least 2GB of RAM.",
      "test_steps": [
        "Open the application and perform multiple concurrent tasks.",
        "Monitor system memory usage during operation.",
        "Ensure no other applications are running to minimize interference."
      ],
      "expected_result": "The application should handle high load operations without consuming more than 90% of available memory.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR11_402",
      "requirement_id": "QR11",
      "test_type": "security",
      "test_title": "Verify no unauthorized access to sensitive data during memory usage",
      "preconditions": "Application is installed on a device with at least 1GB of RAM.",
      "test_steps": [
        "Open the application and perform operations that involve sensitive data.",
        "Monitor system memory usage during operation.",
        "Use security tools to check for unauthorized access attempts."
      ],
      "expected_result": "The application should not allow unauthorized access to sensitive data even under high memory load.",
      "test_data": "None",
      "priority": "High"
    },
    {
      "test_id": "TC_QR6_403",
      "requirement_id": "QR6",
      "test_type": "positive",
      "test_title": "Search for a known location quickly",
      "preconditions": "User is logged in and on the main search page.",
      "test_steps": [
        "Enter 'New York City' into the search bar.",
        "Click the search button.",
        "Verify that the search results are displayed within 2 seconds."
      ],
      "expected_result": "Search results for New York City should be displayed quickly and accurately.",
      "test_data": "Location: New York City",
      "priority": "High"
    },
    {
      "test_id": "TC_QR6_404",
      "requirement_id": "QR6",
      "test_type": "negative",
      "test_title": "Search for an unknown location fails",
      "preconditions": "User is logged in and on the main search page.",
      "test_steps": [
        "Enter 'Atlantis' into the search bar.",
        "Click the search button.",
        "Verify that no results are displayed."
      ],
      "expected_result": "Search for an unknown location should return no results.",
      "test_data": "Location: Atlantis",
      "priority": "High"
    },
    {
      "test_id": "TC_QR6_405",
      "requirement_id": "QR6",
      "test_type": "edge",
      "test_title": "Search with a very short query",
      "preconditions": "User is logged in and on the main search page.",
      "test_steps": [
        "Enter 'NYC' into the search bar.",
        "Click the search button.",
        "Verify that search results are displayed within 2 seconds."
      ],
      "expected_result": "Search with a very short query should return results quickly.",
      "test_data": "Location: NYC",
      "priority": "High"
    },
    {
      "test_id": "TC_QR6_406",
      "requirement_id": "QR6",
      "test_type": "integration",
      "test_title": "Search functionality integrates with user profile data",
      "preconditions": "User is logged in and has saved locations in their profile.",
      "test_steps": [
        "Navigate to the search page.",
        "Click on a location from the user's saved locations list.",
        "Verify that the search results include the selected location."
      ],
      "expected_result": "Search functionality should integrate with user profile data, showing saved locations first.",
      "test_data": "User has saved locations: 'New York City', 'Los Angeles'",
      "priority": "High"
    },
    {
      "test_id": "TC_QR6_407",
      "requirement_id": "QR6",
      "test_type": "performance",
      "test_title": "Search performance under high load",
      "preconditions": "The system is under heavy load with multiple users searching simultaneously.",
      "test_steps": [
        "Simulate 100 concurrent search requests for 'New York City'.",
        "Monitor the response time and error rate.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Search performance should remain stable under high load, with a maximum response time of 5 seconds.",
      "test_data": "Number of concurrent searches: 100, Search term: New York City",
      "priority": "High"
    },
    {
      "test_id": "TC_QR6_408",
      "requirement_id": "QR6",
      "test_type": "security",
      "test_title": "Search input is sanitized to prevent SQL injection",
      "preconditions": "User is logged in and on the main search page.",
      "test_steps": [
        "Enter a potentially malicious query: 'New York City OR 1=1'",
        "Click the search button.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "Search input should be sanitized, preventing SQL injection attacks.",
      "test_data": "Malicious Search Query: New York City OR 1=1",
      "priority": "High"
    },
    {
      "test_id": "TC_QR7_409",
      "requirement_id": "QR7",
      "test_type": "positive",
      "test_title": "System is available when within service area",
      "preconditions": "User is within the predefined service area",
      "test_steps": [
        "Open the application on a mobile device",
        "Enter valid login credentials",
        "Navigate to any feature requiring location services",
        "Check if the system responds promptly and accurately"
      ],
      "expected_result": "The system should respond without delay, providing accurate location-based data.",
      "test_data": "Valid user credentials; current location within service area",
      "priority": "High"
    },
    {
      "test_id": "TC_QR7_410",
      "requirement_id": "QR7",
      "test_type": "negative",
      "test_title": "System is unavailable when outside service area",
      "preconditions": "User is outside the predefined service area",
      "test_steps": [
        "Open the application on a mobile device",
        "Enter valid login credentials",
        "Navigate to any feature requiring location services",
        "Check if the system responds with an error message"
      ],
      "expected_result": "The system should display an error message indicating that the service is not available in the current location.",
      "test_data": "Valid user credentials; current location outside service area",
      "priority": "High"
    },
    {
      "test_id": "TC_QR7_411",
      "requirement_id": "QR7",
      "test_type": "edge",
      "test_title": "System handles edge case of exact boundary of service area",
      "preconditions": "User is at the exact boundary of the predefined service area",
      "test_steps": [
        "Open the application on a mobile device",
        "Enter valid login credentials",
        "Navigate to any feature requiring location services",
        "Check if the system responds accurately"
      ],
      "expected_result": "The system should respond without delay, providing accurate location-based data even at the boundary of the service area.",
      "test_data": "Valid user credentials; current location exactly on the boundary of service area",
      "priority": "High"
    },
    {
      "test_id": "TC_QR7_412",
      "requirement_id": "QR7",
      "test_type": "integration",
      "test_title": "System integrates with third-party location services",
      "preconditions": "Third-party location services are enabled and configured correctly",
      "test_steps": [
        "Open the application on a mobile device",
        "Enter valid login credentials",
        "Navigate to any feature requiring location services",
        "Check if the system uses data from the third-party service"
      ],
      "expected_result": "The system should use data from the third-party location service to provide accurate location-based information.",
      "test_data": "Valid user credentials; third-party location services enabled and configured correctly",
      "priority": "High"
    },
    {
      "test_id": "TC_QR7_413",
      "requirement_id": "QR7",
      "test_type": "performance",
      "test_title": "System handles high traffic during peak hours",
      "preconditions": "Simulate high traffic conditions by multiple users accessing the system simultaneously",
      "test_steps": [
        "Open the application on multiple mobile devices",
        "Enter valid login credentials for each user",
        "Navigate to any feature requiring location services",
        "Check if the system responds within acceptable time limits"
      ],
      "expected_result": "The system should handle high traffic without significant delays or errors.",
      "test_data": "Multiple users; simultaneous access during peak hours",
      "priority": "High"
    },
    {
      "test_id": "TC_QR7_414",
      "requirement_id": "QR7",
      "test_type": "security",
      "test_title": "System prevents unauthorized access from outside service area",
      "preconditions": "User is outside the predefined service area",
      "test_steps": [
        "Open the application on a mobile device",
        "Attempt to enter valid login credentials",
        "Navigate to any feature requiring location services"
      ],
      "expected_result": "The system should prevent unauthorized access and display an error message indicating that the service is not available in the current location.",
      "test_data": "Valid user credentials; current location outside service area",
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_415",
      "requirement_id": "QR15",
      "test_type": "positive",
      "test_title": "User successfully logs into their account with correct credentials",
      "preconditions": "Restaurant owner has registered an account with valid email and password",
      "test_steps": [
        "Open the restaurant management app on a mobile device",
        "Enter the registered email address",
        "Enter the correct password",
        "Tap the 'Login' button"
      ],
      "expected_result": "The user is successfully logged into their account and redirected to the dashboard",
      "test_data": {
        "email": "owner@example.com",
        "password": "securePassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_416",
      "requirement_id": "QR15",
      "test_type": "negative",
      "test_title": "User fails to log in with incorrect password",
      "preconditions": "Restaurant owner has registered an account with valid email and password",
      "test_steps": [
        "Open the restaurant management app on a mobile device",
        "Enter the registered email address",
        "Enter an incorrect password",
        "Tap the 'Login' button"
      ],
      "expected_result": "The login attempt fails, and an error message is displayed indicating invalid credentials",
      "test_data": {
        "email": "owner@example.com",
        "password": "wrongPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_417",
      "requirement_id": "QR15",
      "test_type": "edge",
      "test_title": "User logs in with the maximum allowed password length",
      "preconditions": "Restaurant owner has registered an account with valid email and a password of maximum length",
      "test_steps": [
        "Open the restaurant management app on a mobile device",
        "Enter the registered email address",
        "Enter a password that is exactly 20 characters long",
        "Tap the 'Login' button"
      ],
      "expected_result": "The user is successfully logged into their account and redirected to the dashboard",
      "test_data": {
        "email": "owner@example.com",
        "password": "A1b2C3d4E5f6G7h8I9j0K1l2M"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_418",
      "requirement_id": "QR15",
      "test_type": "integration",
      "test_title": "User logs in from a different device after logging out from another device",
      "preconditions": "Restaurant owner has registered an account and logged in from one mobile device",
      "test_steps": [
        "Log out of the account on the first mobile device",
        "Open the restaurant management app on a second mobile device",
        "Enter the registered email address",
        "Enter the correct password",
        "Tap the 'Login' button"
      ],
      "expected_result": "The user is successfully logged into their account and redirected to the dashboard on the second device",
      "test_data": {
        "email": "owner@example.com",
        "password": "securePassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_419",
      "requirement_id": "QR15",
      "test_type": "performance",
      "test_title": "System handles multiple simultaneous login attempts",
      "preconditions": "Restaurant owner has registered an account and other users are attempting to log in simultaneously",
      "test_steps": [
        "Simulate 100 concurrent login attempts from different devices",
        "Observe the system's response time and stability",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system handles all login attempts within a reasonable time frame (e.g., less than 5 seconds) without crashing or slowing down significantly",
      "test_data": {
        "email": "owner@example.com",
        "password": "securePassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_420",
      "requirement_id": "QR15",
      "test_type": "security",
      "test_title": "User's account is protected against brute force login attempts",
      "preconditions": "Restaurant owner has registered an account with a known password",
      "test_steps": [
        "Attempt to log in using the correct password from multiple devices and IP addresses",
        "Wait for 10 minutes after the last failed attempt",
        "Attempt to log in again"
      ],
      "expected_result": "The user is successfully logged into their account, and there are no further attempts to lock out the account due to brute force protection",
      "test_data": {
        "email": "owner@example.com",
        "password": "securePassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_421",
      "requirement_id": "QR15",
      "test_type": "positive",
      "test_title": "User successfully logs into their account",
      "preconditions": "Restaurant owner has a valid email and password.",
      "test_steps": [
        "Open the restaurant management app on a mobile device.",
        "Enter the registered email address.",
        "Enter the correct password.",
        "Tap 'Login' button."
      ],
      "expected_result": "The user is successfully logged into their account and redirected to the dashboard.",
      "test_data": {
        "email": "owner@example.com",
        "password": "securePassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_422",
      "requirement_id": "QR15",
      "test_type": "negative",
      "test_title": "User fails to log in with incorrect password",
      "preconditions": "Restaurant owner has a valid email and password.",
      "test_steps": [
        "Open the restaurant management app on a mobile device.",
        "Enter the registered email address.",
        "Enter an incorrect password.",
        "Tap 'Login' button."
      ],
      "expected_result": "The login attempt fails, and an error message is displayed prompting to check credentials.",
      "test_data": {
        "email": "owner@example.com",
        "password": "wrongPassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_423",
      "requirement_id": "QR15",
      "test_type": "edge",
      "test_title": "User logs in with the minimum required password length",
      "preconditions": "Restaurant owner has a valid email and meets the minimum password requirements.",
      "test_steps": [
        "Open the restaurant management app on a mobile device.",
        "Enter the registered email address.",
        "Enter the minimum required password length.",
        "Tap 'Login' button."
      ],
      "expected_result": "The user is successfully logged into their account and redirected to the dashboard.",
      "test_data": {
        "email": "owner@example.com",
        "password": "minPass123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_424",
      "requirement_id": "QR15",
      "test_type": "integration",
      "test_title": "User logs in after updating their email address",
      "preconditions": "Restaurant owner has an existing account and updates their email address.",
      "test_steps": [
        "Log in to the restaurant management app with the old email and password.",
        "Navigate to 'Settings' and update the email address.",
        "Verify the new email address via the verification link sent to the new email.",
        "Try logging in with the new email address."
      ],
      "expected_result": "The user is successfully logged into their account using the new email address.",
      "test_data": {
        "old_email": "owner@example.com",
        "new_email": "newowner@example.com",
        "password": "securePassword123"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_425",
      "requirement_id": "QR15",
      "test_type": "performance",
      "test_title": "System handles multiple login attempts simultaneously",
      "preconditions": "Multiple restaurant owners have accounts.",
      "test_steps": [
        "Simultaneously attempt to log in with different email addresses and passwords from multiple devices.",
        "Observe the system's response time and stability.",
        "Execute action",
        "Verify result"
      ],
      "expected_result": "The system handles all login attempts within a reasonable time frame without crashing or slowing down.",
      "test_data": {
        "users": [
          {
            "email": "owner1@example.com",
            "password": "pass123"
          },
          {
            "email": "owner2@example.com",
            "password": "pass456"
          },
          {
            "email": "owner3@example.com",
            "password": "pass789"
          }
        ]
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR15_426",
      "requirement_id": "QR15",
      "test_type": "security",
      "test_title": "User account is protected against brute force login attempts",
      "preconditions": "Restaurant owner has a valid email and password.",
      "test_steps": [
        "Open the restaurant management app on a mobile device.",
        "Enter the registered email address.",
        "Attempt to enter incorrect passwords consecutively up to the maximum allowed attempts (e.g., 5).",
        "Observe the system's response after reaching the limit."
      ],
      "expected_result": "The system locks out the account after reaching the maximum number of failed login attempts, and an error message is displayed.",
      "test_data": {
        "email": "owner@example.com",
        "passwords": [
          "wrongPass123",
          "wrongPass456",
          "wrongPass789",
          "wrongPass012",
          "wrongPass345"
        ]
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR16_427",
      "requirement_id": "QR16",
      "test_type": "positive",
      "test_title": "Admin account creation with valid credentials",
      "preconditions": "System is up and running, no existing admin accounts.",
      "test_steps": [
        "Navigate to the admin account creation page.",
        "Enter a valid username and password that meets all security requirements.",
        "Submit the form.",
        "Verify that the admin account is created successfully."
      ],
      "expected_result": "The admin account should be created without any errors.",
      "test_data": {
        "username": "admin123",
        "password": "P@ssw0rd!1"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR16_428",
      "requirement_id": "QR16",
      "test_type": "negative",
      "test_title": "Admin account creation with invalid password",
      "preconditions": "System is up and running, no existing admin accounts.",
      "test_steps": [
        "Navigate to the admin account creation page.",
        "Enter a valid username but an invalid password (e.g., too short or missing special characters).",
        "Submit the form.",
        "Verify that the admin account creation fails with an appropriate error message."
      ],
      "expected_result": "The admin account should not be created, and an error message should be displayed.",
      "test_data": {
        "username": "admin123",
        "password": "pass"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR16_429",
      "requirement_id": "QR16",
      "test_type": "edge",
      "test_title": "Admin account creation with the shortest allowed password",
      "preconditions": "System is up and running, no existing admin accounts.",
      "test_steps": [
        "Navigate to the admin account creation page.",
        "Enter a valid username and the shortest allowed password that meets all security requirements.",
        "Submit the form.",
        "Verify that the admin account is created successfully."
      ],
      "expected_result": "The admin account should be created without any errors, even with the minimum required password length.",
      "test_data": {
        "username": "admin123",
        "password": "P@ssw0rd!1"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR16_430",
      "requirement_id": "QR16",
      "test_type": "integration",
      "test_title": "Admin account creation and login functionality",
      "preconditions": "System is up and running, no existing admin accounts.",
      "test_steps": [
        "Navigate to the admin account creation page.",
        "Enter a valid username and password that meets all security requirements.",
        "Submit the form.",
        "Log out from any existing sessions.",
        "Attempt to log in with the newly created admin credentials.",
        "Verify that the login is successful."
      ],
      "expected_result": "The admin should be able to log in using the newly created account.",
      "test_data": {
        "username": "admin123",
        "password": "P@ssw0rd!1"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR16_431",
      "requirement_id": "QR16",
      "test_type": "performance",
      "test_title": "Admin account creation under high load",
      "preconditions": "System is up and running, multiple users attempting to create admin accounts simultaneously.",
      "test_steps": [
        "Simulate a high number of concurrent users (e.g., 100) trying to create admin accounts.",
        "Observe the system performance during this time.",
        "Verify that all admin accounts are created successfully without any errors."
      ],
      "expected_result": "The system should handle multiple simultaneous admin account creations efficiently and without performance degradation.",
      "test_data": {
        "users": 100,
        "username_prefix": "admin",
        "password": "P@ssw0rd!1"
      },
      "priority": "High"
    },
    {
      "test_id": "TC_QR16_432",
      "requirement_id": "QR16",
      "test_type": "security",
      "test_title": "Admin account creation with weak password detection",
      "preconditions": "System is up and running, no existing admin accounts.",
      "test_steps": [
        "Navigate to the admin account creation page.",
        "Enter a valid username but a weak password (e.g., dictionary word or common pattern).",
        "Submit the form.",
        "Verify that the system detects the weak password and prompts for a stronger one."
      ],
      "expected_result": "The system should detect the weak password and prompt the user to enter a stronger password before allowing account creation.",
      "test_data": {
        "username": "admin123",
        "password": "password"
      },
      "priority": "High"
    }
  ]
}